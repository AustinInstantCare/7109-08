

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jan 28 14:43:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16LF1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 07/09/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16LF1825 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0008                     bsr             equ	8
    55     0005                     fsr0h           equ	5
    56     0004                     fsr0l           equ	4
    57     0007                     fsr1h           equ	7
    58     0006                     fsr1l           equ	6
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0001                     indf1           equ	1
    62     000B                     intcon          equ	11
    63     0002                     pc              equ	2
    64     0002                     pcl             equ	2
    65     000A                     pclath          equ	10
    66     0003                     status          equ	3
    67     0009                     wreg            equ	9
    68     0000                     INDF0           equ	0	;# 
    69     0001                     INDF1           equ	1	;# 
    70     0002                     PCL             equ	2	;# 
    71     0003                     STATUS          equ	3	;# 
    72     0004                     FSR0L           equ	4	;# 
    73     0005                     FSR0H           equ	5	;# 
    74     0006                     FSR1L           equ	6	;# 
    75     0007                     FSR1H           equ	7	;# 
    76     0008                     BSR             equ	8	;# 
    77     0009                     WREG            equ	9	;# 
    78     000A                     PCLATH          equ	10	;# 
    79     000B                     INTCON          equ	11	;# 
    80     000C                     PORTA           equ	12	;# 
    81     000E                     PORTC           equ	14	;# 
    82     0011                     PIR1            equ	17	;# 
    83     0012                     PIR2            equ	18	;# 
    84     0013                     PIR3            equ	19	;# 
    85     0015                     TMR0            equ	21	;# 
    86     0016                     TMR1            equ	22	;# 
    87     0016                     TMR1L           equ	22	;# 
    88     0017                     TMR1H           equ	23	;# 
    89     0018                     T1CON           equ	24	;# 
    90     0019                     T1GCON          equ	25	;# 
    91     001A                     TMR2            equ	26	;# 
    92     001B                     PR2             equ	27	;# 
    93     001C                     T2CON           equ	28	;# 
    94     001E                     CPSCON0         equ	30	;# 
    95     001F                     CPSCON1         equ	31	;# 
    96     008C                     TRISA           equ	140	;# 
    97     008E                     TRISC           equ	142	;# 
    98     0091                     PIE1            equ	145	;# 
    99     0092                     PIE2            equ	146	;# 
   100     0093                     PIE3            equ	147	;# 
   101     0095                     OPTION_REG      equ	149	;# 
   102     0096                     PCON            equ	150	;# 
   103     0097                     WDTCON          equ	151	;# 
   104     0098                     OSCTUNE         equ	152	;# 
   105     0099                     OSCCON          equ	153	;# 
   106     009A                     OSCSTAT         equ	154	;# 
   107     009B                     ADRES           equ	155	;# 
   108     009B                     ADRESL          equ	155	;# 
   109     009C                     ADRESH          equ	156	;# 
   110     009D                     ADCON0          equ	157	;# 
   111     009E                     ADCON1          equ	158	;# 
   112     010C                     LATA            equ	268	;# 
   113     010E                     LATC            equ	270	;# 
   114     0111                     CM1CON0         equ	273	;# 
   115     0112                     CM1CON1         equ	274	;# 
   116     0113                     CM2CON0         equ	275	;# 
   117     0114                     CM2CON1         equ	276	;# 
   118     0115                     CMOUT           equ	277	;# 
   119     0116                     BORCON          equ	278	;# 
   120     0117                     FVRCON          equ	279	;# 
   121     0118                     DACCON0         equ	280	;# 
   122     0119                     DACCON1         equ	281	;# 
   123     011A                     SRCON0          equ	282	;# 
   124     011B                     SRCON1          equ	283	;# 
   125     011D                     APFCON0         equ	285	;# 
   126     011E                     APFCON1         equ	286	;# 
   127     018C                     ANSELA          equ	396	;# 
   128     018E                     ANSELC          equ	398	;# 
   129     0191                     EEADR           equ	401	;# 
   130     0191                     EEADRL          equ	401	;# 
   131     0192                     EEADRH          equ	402	;# 
   132     0193                     EEDAT           equ	403	;# 
   133     0193                     EEDATL          equ	403	;# 
   134     0193                     EEDATA          equ	403	;# 
   135     0194                     EEDATH          equ	404	;# 
   136     0195                     EECON1          equ	405	;# 
   137     0196                     EECON2          equ	406	;# 
   138     0199                     RCREG           equ	409	;# 
   139     019A                     TXREG           equ	410	;# 
   140     019B                     SPBRG           equ	411	;# 
   141     019B                     SPBRGL          equ	411	;# 
   142     019C                     SPBRGH          equ	412	;# 
   143     019D                     RCSTA           equ	413	;# 
   144     019E                     TXSTA           equ	414	;# 
   145     019F                     BAUDCON         equ	415	;# 
   146     020C                     WPUA            equ	524	;# 
   147     020E                     WPUC            equ	526	;# 
   148     0211                     SSP1BUF         equ	529	;# 
   149     0211                     SSPBUF          equ	529	;# 
   150     0212                     SSP1ADD         equ	530	;# 
   151     0212                     SSPADD          equ	530	;# 
   152     0213                     SSP1MSK         equ	531	;# 
   153     0213                     SSPMSK          equ	531	;# 
   154     0214                     SSP1STAT        equ	532	;# 
   155     0214                     SSPSTAT         equ	532	;# 
   156     0215                     SSP1CON1        equ	533	;# 
   157     0215                     SSPCON1         equ	533	;# 
   158     0215                     SSPCON          equ	533	;# 
   159     0216                     SSP1CON2        equ	534	;# 
   160     0216                     SSPCON2         equ	534	;# 
   161     0217                     SSP1CON3        equ	535	;# 
   162     0217                     SSPCON3         equ	535	;# 
   163     0291                     CCPR1           equ	657	;# 
   164     0291                     CCPR1L          equ	657	;# 
   165     0292                     CCPR1H          equ	658	;# 
   166     0293                     CCP1CON         equ	659	;# 
   167     0294                     PWM1CON         equ	660	;# 
   168     0295                     CCP1AS          equ	661	;# 
   169     0295                     ECCP1AS         equ	661	;# 
   170     0296                     PSTR1CON        equ	662	;# 
   171     0298                     CCPR2           equ	664	;# 
   172     0298                     CCPR2L          equ	664	;# 
   173     0299                     CCPR2H          equ	665	;# 
   174     029A                     CCP2CON         equ	666	;# 
   175     029B                     PWM2CON         equ	667	;# 
   176     029C                     CCP2AS          equ	668	;# 
   177     029D                     PSTR2CON        equ	669	;# 
   178     029E                     CCPTMRS         equ	670	;# 
   179     029E                     CCPTMRS0        equ	670	;# 
   180     0311                     CCPR3           equ	785	;# 
   181     0311                     CCPR3L          equ	785	;# 
   182     0312                     CCPR3H          equ	786	;# 
   183     0313                     CCP3CON         equ	787	;# 
   184     0318                     CCPR4           equ	792	;# 
   185     0318                     CCPR4L          equ	792	;# 
   186     0319                     CCPR4H          equ	793	;# 
   187     031A                     CCP4CON         equ	794	;# 
   188     038C                     INLVLA          equ	908	;# 
   189     038E                     INLVLC          equ	910	;# 
   190     0391                     IOCAP           equ	913	;# 
   191     0392                     IOCAN           equ	914	;# 
   192     0393                     IOCAF           equ	915	;# 
   193     039A                     CLKRCON         equ	922	;# 
   194     039C                     MDCON           equ	924	;# 
   195     039D                     MDSRC           equ	925	;# 
   196     039E                     MDCARL          equ	926	;# 
   197     039F                     MDCARH          equ	927	;# 
   198     0415                     TMR4            equ	1045	;# 
   199     0416                     PR4             equ	1046	;# 
   200     0417                     T4CON           equ	1047	;# 
   201     041C                     TMR6            equ	1052	;# 
   202     041D                     PR6             equ	1053	;# 
   203     041E                     T6CON           equ	1054	;# 
   204     0FE4                     STATUS_SHAD     equ	4068	;# 
   205     0FE5                     WREG_SHAD       equ	4069	;# 
   206     0FE6                     BSR_SHAD        equ	4070	;# 
   207     0FE7                     PCLATH_SHAD     equ	4071	;# 
   208     0FE8                     FSR0L_SHAD      equ	4072	;# 
   209     0FE9                     FSR0H_SHAD      equ	4073	;# 
   210     0FEA                     FSR1L_SHAD      equ	4074	;# 
   211     0FEB                     FSR1H_SHAD      equ	4075	;# 
   212     0FED                     STKPTR          equ	4077	;# 
   213     0FEE                     TOSL            equ	4078	;# 
   214     0FEF                     TOSH            equ	4079	;# 
   215     0000                     INDF0           equ	0	;# 
   216     0001                     INDF1           equ	1	;# 
   217     0002                     PCL             equ	2	;# 
   218     0003                     STATUS          equ	3	;# 
   219     0004                     FSR0L           equ	4	;# 
   220     0005                     FSR0H           equ	5	;# 
   221     0006                     FSR1L           equ	6	;# 
   222     0007                     FSR1H           equ	7	;# 
   223     0008                     BSR             equ	8	;# 
   224     0009                     WREG            equ	9	;# 
   225     000A                     PCLATH          equ	10	;# 
   226     000B                     INTCON          equ	11	;# 
   227     000C                     PORTA           equ	12	;# 
   228     000E                     PORTC           equ	14	;# 
   229     0011                     PIR1            equ	17	;# 
   230     0012                     PIR2            equ	18	;# 
   231     0013                     PIR3            equ	19	;# 
   232     0015                     TMR0            equ	21	;# 
   233     0016                     TMR1            equ	22	;# 
   234     0016                     TMR1L           equ	22	;# 
   235     0017                     TMR1H           equ	23	;# 
   236     0018                     T1CON           equ	24	;# 
   237     0019                     T1GCON          equ	25	;# 
   238     001A                     TMR2            equ	26	;# 
   239     001B                     PR2             equ	27	;# 
   240     001C                     T2CON           equ	28	;# 
   241     001E                     CPSCON0         equ	30	;# 
   242     001F                     CPSCON1         equ	31	;# 
   243     008C                     TRISA           equ	140	;# 
   244     008E                     TRISC           equ	142	;# 
   245     0091                     PIE1            equ	145	;# 
   246     0092                     PIE2            equ	146	;# 
   247     0093                     PIE3            equ	147	;# 
   248     0095                     OPTION_REG      equ	149	;# 
   249     0096                     PCON            equ	150	;# 
   250     0097                     WDTCON          equ	151	;# 
   251     0098                     OSCTUNE         equ	152	;# 
   252     0099                     OSCCON          equ	153	;# 
   253     009A                     OSCSTAT         equ	154	;# 
   254     009B                     ADRES           equ	155	;# 
   255     009B                     ADRESL          equ	155	;# 
   256     009C                     ADRESH          equ	156	;# 
   257     009D                     ADCON0          equ	157	;# 
   258     009E                     ADCON1          equ	158	;# 
   259     010C                     LATA            equ	268	;# 
   260     010E                     LATC            equ	270	;# 
   261     0111                     CM1CON0         equ	273	;# 
   262     0112                     CM1CON1         equ	274	;# 
   263     0113                     CM2CON0         equ	275	;# 
   264     0114                     CM2CON1         equ	276	;# 
   265     0115                     CMOUT           equ	277	;# 
   266     0116                     BORCON          equ	278	;# 
   267     0117                     FVRCON          equ	279	;# 
   268     0118                     DACCON0         equ	280	;# 
   269     0119                     DACCON1         equ	281	;# 
   270     011A                     SRCON0          equ	282	;# 
   271     011B                     SRCON1          equ	283	;# 
   272     011D                     APFCON0         equ	285	;# 
   273     011E                     APFCON1         equ	286	;# 
   274     018C                     ANSELA          equ	396	;# 
   275     018E                     ANSELC          equ	398	;# 
   276     0191                     EEADR           equ	401	;# 
   277     0191                     EEADRL          equ	401	;# 
   278     0192                     EEADRH          equ	402	;# 
   279     0193                     EEDAT           equ	403	;# 
   280     0193                     EEDATL          equ	403	;# 
   281     0193                     EEDATA          equ	403	;# 
   282     0194                     EEDATH          equ	404	;# 
   283     0195                     EECON1          equ	405	;# 
   284     0196                     EECON2          equ	406	;# 
   285     0199                     RCREG           equ	409	;# 
   286     019A                     TXREG           equ	410	;# 
   287     019B                     SPBRG           equ	411	;# 
   288     019B                     SPBRGL          equ	411	;# 
   289     019C                     SPBRGH          equ	412	;# 
   290     019D                     RCSTA           equ	413	;# 
   291     019E                     TXSTA           equ	414	;# 
   292     019F                     BAUDCON         equ	415	;# 
   293     020C                     WPUA            equ	524	;# 
   294     020E                     WPUC            equ	526	;# 
   295     0211                     SSP1BUF         equ	529	;# 
   296     0211                     SSPBUF          equ	529	;# 
   297     0212                     SSP1ADD         equ	530	;# 
   298     0212                     SSPADD          equ	530	;# 
   299     0213                     SSP1MSK         equ	531	;# 
   300     0213                     SSPMSK          equ	531	;# 
   301     0214                     SSP1STAT        equ	532	;# 
   302     0214                     SSPSTAT         equ	532	;# 
   303     0215                     SSP1CON1        equ	533	;# 
   304     0215                     SSPCON1         equ	533	;# 
   305     0215                     SSPCON          equ	533	;# 
   306     0216                     SSP1CON2        equ	534	;# 
   307     0216                     SSPCON2         equ	534	;# 
   308     0217                     SSP1CON3        equ	535	;# 
   309     0217                     SSPCON3         equ	535	;# 
   310     0291                     CCPR1           equ	657	;# 
   311     0291                     CCPR1L          equ	657	;# 
   312     0292                     CCPR1H          equ	658	;# 
   313     0293                     CCP1CON         equ	659	;# 
   314     0294                     PWM1CON         equ	660	;# 
   315     0295                     CCP1AS          equ	661	;# 
   316     0295                     ECCP1AS         equ	661	;# 
   317     0296                     PSTR1CON        equ	662	;# 
   318     0298                     CCPR2           equ	664	;# 
   319     0298                     CCPR2L          equ	664	;# 
   320     0299                     CCPR2H          equ	665	;# 
   321     029A                     CCP2CON         equ	666	;# 
   322     029B                     PWM2CON         equ	667	;# 
   323     029C                     CCP2AS          equ	668	;# 
   324     029D                     PSTR2CON        equ	669	;# 
   325     029E                     CCPTMRS         equ	670	;# 
   326     029E                     CCPTMRS0        equ	670	;# 
   327     0311                     CCPR3           equ	785	;# 
   328     0311                     CCPR3L          equ	785	;# 
   329     0312                     CCPR3H          equ	786	;# 
   330     0313                     CCP3CON         equ	787	;# 
   331     0318                     CCPR4           equ	792	;# 
   332     0318                     CCPR4L          equ	792	;# 
   333     0319                     CCPR4H          equ	793	;# 
   334     031A                     CCP4CON         equ	794	;# 
   335     038C                     INLVLA          equ	908	;# 
   336     038E                     INLVLC          equ	910	;# 
   337     0391                     IOCAP           equ	913	;# 
   338     0392                     IOCAN           equ	914	;# 
   339     0393                     IOCAF           equ	915	;# 
   340     039A                     CLKRCON         equ	922	;# 
   341     039C                     MDCON           equ	924	;# 
   342     039D                     MDSRC           equ	925	;# 
   343     039E                     MDCARL          equ	926	;# 
   344     039F                     MDCARH          equ	927	;# 
   345     0415                     TMR4            equ	1045	;# 
   346     0416                     PR4             equ	1046	;# 
   347     0417                     T4CON           equ	1047	;# 
   348     041C                     TMR6            equ	1052	;# 
   349     041D                     PR6             equ	1053	;# 
   350     041E                     T6CON           equ	1054	;# 
   351     0FE4                     STATUS_SHAD     equ	4068	;# 
   352     0FE5                     WREG_SHAD       equ	4069	;# 
   353     0FE6                     BSR_SHAD        equ	4070	;# 
   354     0FE7                     PCLATH_SHAD     equ	4071	;# 
   355     0FE8                     FSR0L_SHAD      equ	4072	;# 
   356     0FE9                     FSR0H_SHAD      equ	4073	;# 
   357     0FEA                     FSR1L_SHAD      equ	4074	;# 
   358     0FEB                     FSR1H_SHAD      equ	4075	;# 
   359     0FED                     STKPTR          equ	4077	;# 
   360     0FEE                     TOSL            equ	4078	;# 
   361     0FEF                     TOSH            equ	4079	;# 
   362     0000                     INDF0           equ	0	;# 
   363     0001                     INDF1           equ	1	;# 
   364     0002                     PCL             equ	2	;# 
   365     0003                     STATUS          equ	3	;# 
   366     0004                     FSR0L           equ	4	;# 
   367     0005                     FSR0H           equ	5	;# 
   368     0006                     FSR1L           equ	6	;# 
   369     0007                     FSR1H           equ	7	;# 
   370     0008                     BSR             equ	8	;# 
   371     0009                     WREG            equ	9	;# 
   372     000A                     PCLATH          equ	10	;# 
   373     000B                     INTCON          equ	11	;# 
   374     000C                     PORTA           equ	12	;# 
   375     000E                     PORTC           equ	14	;# 
   376     0011                     PIR1            equ	17	;# 
   377     0012                     PIR2            equ	18	;# 
   378     0013                     PIR3            equ	19	;# 
   379     0015                     TMR0            equ	21	;# 
   380     0016                     TMR1            equ	22	;# 
   381     0016                     TMR1L           equ	22	;# 
   382     0017                     TMR1H           equ	23	;# 
   383     0018                     T1CON           equ	24	;# 
   384     0019                     T1GCON          equ	25	;# 
   385     001A                     TMR2            equ	26	;# 
   386     001B                     PR2             equ	27	;# 
   387     001C                     T2CON           equ	28	;# 
   388     001E                     CPSCON0         equ	30	;# 
   389     001F                     CPSCON1         equ	31	;# 
   390     008C                     TRISA           equ	140	;# 
   391     008E                     TRISC           equ	142	;# 
   392     0091                     PIE1            equ	145	;# 
   393     0092                     PIE2            equ	146	;# 
   394     0093                     PIE3            equ	147	;# 
   395     0095                     OPTION_REG      equ	149	;# 
   396     0096                     PCON            equ	150	;# 
   397     0097                     WDTCON          equ	151	;# 
   398     0098                     OSCTUNE         equ	152	;# 
   399     0099                     OSCCON          equ	153	;# 
   400     009A                     OSCSTAT         equ	154	;# 
   401     009B                     ADRES           equ	155	;# 
   402     009B                     ADRESL          equ	155	;# 
   403     009C                     ADRESH          equ	156	;# 
   404     009D                     ADCON0          equ	157	;# 
   405     009E                     ADCON1          equ	158	;# 
   406     010C                     LATA            equ	268	;# 
   407     010E                     LATC            equ	270	;# 
   408     0111                     CM1CON0         equ	273	;# 
   409     0112                     CM1CON1         equ	274	;# 
   410     0113                     CM2CON0         equ	275	;# 
   411     0114                     CM2CON1         equ	276	;# 
   412     0115                     CMOUT           equ	277	;# 
   413     0116                     BORCON          equ	278	;# 
   414     0117                     FVRCON          equ	279	;# 
   415     0118                     DACCON0         equ	280	;# 
   416     0119                     DACCON1         equ	281	;# 
   417     011A                     SRCON0          equ	282	;# 
   418     011B                     SRCON1          equ	283	;# 
   419     011D                     APFCON0         equ	285	;# 
   420     011E                     APFCON1         equ	286	;# 
   421     018C                     ANSELA          equ	396	;# 
   422     018E                     ANSELC          equ	398	;# 
   423     0191                     EEADR           equ	401	;# 
   424     0191                     EEADRL          equ	401	;# 
   425     0192                     EEADRH          equ	402	;# 
   426     0193                     EEDAT           equ	403	;# 
   427     0193                     EEDATL          equ	403	;# 
   428     0193                     EEDATA          equ	403	;# 
   429     0194                     EEDATH          equ	404	;# 
   430     0195                     EECON1          equ	405	;# 
   431     0196                     EECON2          equ	406	;# 
   432     0199                     RCREG           equ	409	;# 
   433     019A                     TXREG           equ	410	;# 
   434     019B                     SPBRG           equ	411	;# 
   435     019B                     SPBRGL          equ	411	;# 
   436     019C                     SPBRGH          equ	412	;# 
   437     019D                     RCSTA           equ	413	;# 
   438     019E                     TXSTA           equ	414	;# 
   439     019F                     BAUDCON         equ	415	;# 
   440     020C                     WPUA            equ	524	;# 
   441     020E                     WPUC            equ	526	;# 
   442     0211                     SSP1BUF         equ	529	;# 
   443     0211                     SSPBUF          equ	529	;# 
   444     0212                     SSP1ADD         equ	530	;# 
   445     0212                     SSPADD          equ	530	;# 
   446     0213                     SSP1MSK         equ	531	;# 
   447     0213                     SSPMSK          equ	531	;# 
   448     0214                     SSP1STAT        equ	532	;# 
   449     0214                     SSPSTAT         equ	532	;# 
   450     0215                     SSP1CON1        equ	533	;# 
   451     0215                     SSPCON1         equ	533	;# 
   452     0215                     SSPCON          equ	533	;# 
   453     0216                     SSP1CON2        equ	534	;# 
   454     0216                     SSPCON2         equ	534	;# 
   455     0217                     SSP1CON3        equ	535	;# 
   456     0217                     SSPCON3         equ	535	;# 
   457     0291                     CCPR1           equ	657	;# 
   458     0291                     CCPR1L          equ	657	;# 
   459     0292                     CCPR1H          equ	658	;# 
   460     0293                     CCP1CON         equ	659	;# 
   461     0294                     PWM1CON         equ	660	;# 
   462     0295                     CCP1AS          equ	661	;# 
   463     0295                     ECCP1AS         equ	661	;# 
   464     0296                     PSTR1CON        equ	662	;# 
   465     0298                     CCPR2           equ	664	;# 
   466     0298                     CCPR2L          equ	664	;# 
   467     0299                     CCPR2H          equ	665	;# 
   468     029A                     CCP2CON         equ	666	;# 
   469     029B                     PWM2CON         equ	667	;# 
   470     029C                     CCP2AS          equ	668	;# 
   471     029D                     PSTR2CON        equ	669	;# 
   472     029E                     CCPTMRS         equ	670	;# 
   473     029E                     CCPTMRS0        equ	670	;# 
   474     0311                     CCPR3           equ	785	;# 
   475     0311                     CCPR3L          equ	785	;# 
   476     0312                     CCPR3H          equ	786	;# 
   477     0313                     CCP3CON         equ	787	;# 
   478     0318                     CCPR4           equ	792	;# 
   479     0318                     CCPR4L          equ	792	;# 
   480     0319                     CCPR4H          equ	793	;# 
   481     031A                     CCP4CON         equ	794	;# 
   482     038C                     INLVLA          equ	908	;# 
   483     038E                     INLVLC          equ	910	;# 
   484     0391                     IOCAP           equ	913	;# 
   485     0392                     IOCAN           equ	914	;# 
   486     0393                     IOCAF           equ	915	;# 
   487     039A                     CLKRCON         equ	922	;# 
   488     039C                     MDCON           equ	924	;# 
   489     039D                     MDSRC           equ	925	;# 
   490     039E                     MDCARL          equ	926	;# 
   491     039F                     MDCARH          equ	927	;# 
   492     0415                     TMR4            equ	1045	;# 
   493     0416                     PR4             equ	1046	;# 
   494     0417                     T4CON           equ	1047	;# 
   495     041C                     TMR6            equ	1052	;# 
   496     041D                     PR6             equ	1053	;# 
   497     041E                     T6CON           equ	1054	;# 
   498     0FE4                     STATUS_SHAD     equ	4068	;# 
   499     0FE5                     WREG_SHAD       equ	4069	;# 
   500     0FE6                     BSR_SHAD        equ	4070	;# 
   501     0FE7                     PCLATH_SHAD     equ	4071	;# 
   502     0FE8                     FSR0L_SHAD      equ	4072	;# 
   503     0FE9                     FSR0H_SHAD      equ	4073	;# 
   504     0FEA                     FSR1L_SHAD      equ	4074	;# 
   505     0FEB                     FSR1H_SHAD      equ	4075	;# 
   506     0FED                     STKPTR          equ	4077	;# 
   507     0FEE                     TOSL            equ	4078	;# 
   508     0FEF                     TOSH            equ	4079	;# 
   509     0000                     INDF0           equ	0	;# 
   510     0001                     INDF1           equ	1	;# 
   511     0002                     PCL             equ	2	;# 
   512     0003                     STATUS          equ	3	;# 
   513     0004                     FSR0L           equ	4	;# 
   514     0005                     FSR0H           equ	5	;# 
   515     0006                     FSR1L           equ	6	;# 
   516     0007                     FSR1H           equ	7	;# 
   517     0008                     BSR             equ	8	;# 
   518     0009                     WREG            equ	9	;# 
   519     000A                     PCLATH          equ	10	;# 
   520     000B                     INTCON          equ	11	;# 
   521     000C                     PORTA           equ	12	;# 
   522     000E                     PORTC           equ	14	;# 
   523     0011                     PIR1            equ	17	;# 
   524     0012                     PIR2            equ	18	;# 
   525     0013                     PIR3            equ	19	;# 
   526     0015                     TMR0            equ	21	;# 
   527     0016                     TMR1            equ	22	;# 
   528     0016                     TMR1L           equ	22	;# 
   529     0017                     TMR1H           equ	23	;# 
   530     0018                     T1CON           equ	24	;# 
   531     0019                     T1GCON          equ	25	;# 
   532     001A                     TMR2            equ	26	;# 
   533     001B                     PR2             equ	27	;# 
   534     001C                     T2CON           equ	28	;# 
   535     001E                     CPSCON0         equ	30	;# 
   536     001F                     CPSCON1         equ	31	;# 
   537     008C                     TRISA           equ	140	;# 
   538     008E                     TRISC           equ	142	;# 
   539     0091                     PIE1            equ	145	;# 
   540     0092                     PIE2            equ	146	;# 
   541     0093                     PIE3            equ	147	;# 
   542     0095                     OPTION_REG      equ	149	;# 
   543     0096                     PCON            equ	150	;# 
   544     0097                     WDTCON          equ	151	;# 
   545     0098                     OSCTUNE         equ	152	;# 
   546     0099                     OSCCON          equ	153	;# 
   547     009A                     OSCSTAT         equ	154	;# 
   548     009B                     ADRES           equ	155	;# 
   549     009B                     ADRESL          equ	155	;# 
   550     009C                     ADRESH          equ	156	;# 
   551     009D                     ADCON0          equ	157	;# 
   552     009E                     ADCON1          equ	158	;# 
   553     010C                     LATA            equ	268	;# 
   554     010E                     LATC            equ	270	;# 
   555     0111                     CM1CON0         equ	273	;# 
   556     0112                     CM1CON1         equ	274	;# 
   557     0113                     CM2CON0         equ	275	;# 
   558     0114                     CM2CON1         equ	276	;# 
   559     0115                     CMOUT           equ	277	;# 
   560     0116                     BORCON          equ	278	;# 
   561     0117                     FVRCON          equ	279	;# 
   562     0118                     DACCON0         equ	280	;# 
   563     0119                     DACCON1         equ	281	;# 
   564     011A                     SRCON0          equ	282	;# 
   565     011B                     SRCON1          equ	283	;# 
   566     011D                     APFCON0         equ	285	;# 
   567     011E                     APFCON1         equ	286	;# 
   568     018C                     ANSELA          equ	396	;# 
   569     018E                     ANSELC          equ	398	;# 
   570     0191                     EEADR           equ	401	;# 
   571     0191                     EEADRL          equ	401	;# 
   572     0192                     EEADRH          equ	402	;# 
   573     0193                     EEDAT           equ	403	;# 
   574     0193                     EEDATL          equ	403	;# 
   575     0193                     EEDATA          equ	403	;# 
   576     0194                     EEDATH          equ	404	;# 
   577     0195                     EECON1          equ	405	;# 
   578     0196                     EECON2          equ	406	;# 
   579     0199                     RCREG           equ	409	;# 
   580     019A                     TXREG           equ	410	;# 
   581     019B                     SPBRG           equ	411	;# 
   582     019B                     SPBRGL          equ	411	;# 
   583     019C                     SPBRGH          equ	412	;# 
   584     019D                     RCSTA           equ	413	;# 
   585     019E                     TXSTA           equ	414	;# 
   586     019F                     BAUDCON         equ	415	;# 
   587     020C                     WPUA            equ	524	;# 
   588     020E                     WPUC            equ	526	;# 
   589     0211                     SSP1BUF         equ	529	;# 
   590     0211                     SSPBUF          equ	529	;# 
   591     0212                     SSP1ADD         equ	530	;# 
   592     0212                     SSPADD          equ	530	;# 
   593     0213                     SSP1MSK         equ	531	;# 
   594     0213                     SSPMSK          equ	531	;# 
   595     0214                     SSP1STAT        equ	532	;# 
   596     0214                     SSPSTAT         equ	532	;# 
   597     0215                     SSP1CON1        equ	533	;# 
   598     0215                     SSPCON1         equ	533	;# 
   599     0215                     SSPCON          equ	533	;# 
   600     0216                     SSP1CON2        equ	534	;# 
   601     0216                     SSPCON2         equ	534	;# 
   602     0217                     SSP1CON3        equ	535	;# 
   603     0217                     SSPCON3         equ	535	;# 
   604     0291                     CCPR1           equ	657	;# 
   605     0291                     CCPR1L          equ	657	;# 
   606     0292                     CCPR1H          equ	658	;# 
   607     0293                     CCP1CON         equ	659	;# 
   608     0294                     PWM1CON         equ	660	;# 
   609     0295                     CCP1AS          equ	661	;# 
   610     0295                     ECCP1AS         equ	661	;# 
   611     0296                     PSTR1CON        equ	662	;# 
   612     0298                     CCPR2           equ	664	;# 
   613     0298                     CCPR2L          equ	664	;# 
   614     0299                     CCPR2H          equ	665	;# 
   615     029A                     CCP2CON         equ	666	;# 
   616     029B                     PWM2CON         equ	667	;# 
   617     029C                     CCP2AS          equ	668	;# 
   618     029D                     PSTR2CON        equ	669	;# 
   619     029E                     CCPTMRS         equ	670	;# 
   620     029E                     CCPTMRS0        equ	670	;# 
   621     0311                     CCPR3           equ	785	;# 
   622     0311                     CCPR3L          equ	785	;# 
   623     0312                     CCPR3H          equ	786	;# 
   624     0313                     CCP3CON         equ	787	;# 
   625     0318                     CCPR4           equ	792	;# 
   626     0318                     CCPR4L          equ	792	;# 
   627     0319                     CCPR4H          equ	793	;# 
   628     031A                     CCP4CON         equ	794	;# 
   629     038C                     INLVLA          equ	908	;# 
   630     038E                     INLVLC          equ	910	;# 
   631     0391                     IOCAP           equ	913	;# 
   632     0392                     IOCAN           equ	914	;# 
   633     0393                     IOCAF           equ	915	;# 
   634     039A                     CLKRCON         equ	922	;# 
   635     039C                     MDCON           equ	924	;# 
   636     039D                     MDSRC           equ	925	;# 
   637     039E                     MDCARL          equ	926	;# 
   638     039F                     MDCARH          equ	927	;# 
   639     0415                     TMR4            equ	1045	;# 
   640     0416                     PR4             equ	1046	;# 
   641     0417                     T4CON           equ	1047	;# 
   642     041C                     TMR6            equ	1052	;# 
   643     041D                     PR6             equ	1053	;# 
   644     041E                     T6CON           equ	1054	;# 
   645     0FE4                     STATUS_SHAD     equ	4068	;# 
   646     0FE5                     WREG_SHAD       equ	4069	;# 
   647     0FE6                     BSR_SHAD        equ	4070	;# 
   648     0FE7                     PCLATH_SHAD     equ	4071	;# 
   649     0FE8                     FSR0L_SHAD      equ	4072	;# 
   650     0FE9                     FSR0H_SHAD      equ	4073	;# 
   651     0FEA                     FSR1L_SHAD      equ	4074	;# 
   652     0FEB                     FSR1H_SHAD      equ	4075	;# 
   653     0FED                     STKPTR          equ	4077	;# 
   654     0FEE                     TOSL            equ	4078	;# 
   655     0FEF                     TOSH            equ	4079	;# 
   656     0000                     INDF0           equ	0	;# 
   657     0001                     INDF1           equ	1	;# 
   658     0002                     PCL             equ	2	;# 
   659     0003                     STATUS          equ	3	;# 
   660     0004                     FSR0L           equ	4	;# 
   661     0005                     FSR0H           equ	5	;# 
   662     0006                     FSR1L           equ	6	;# 
   663     0007                     FSR1H           equ	7	;# 
   664     0008                     BSR             equ	8	;# 
   665     0009                     WREG            equ	9	;# 
   666     000A                     PCLATH          equ	10	;# 
   667     000B                     INTCON          equ	11	;# 
   668     000C                     PORTA           equ	12	;# 
   669     000E                     PORTC           equ	14	;# 
   670     0011                     PIR1            equ	17	;# 
   671     0012                     PIR2            equ	18	;# 
   672     0013                     PIR3            equ	19	;# 
   673     0015                     TMR0            equ	21	;# 
   674     0016                     TMR1            equ	22	;# 
   675     0016                     TMR1L           equ	22	;# 
   676     0017                     TMR1H           equ	23	;# 
   677     0018                     T1CON           equ	24	;# 
   678     0019                     T1GCON          equ	25	;# 
   679     001A                     TMR2            equ	26	;# 
   680     001B                     PR2             equ	27	;# 
   681     001C                     T2CON           equ	28	;# 
   682     001E                     CPSCON0         equ	30	;# 
   683     001F                     CPSCON1         equ	31	;# 
   684     008C                     TRISA           equ	140	;# 
   685     008E                     TRISC           equ	142	;# 
   686     0091                     PIE1            equ	145	;# 
   687     0092                     PIE2            equ	146	;# 
   688     0093                     PIE3            equ	147	;# 
   689     0095                     OPTION_REG      equ	149	;# 
   690     0096                     PCON            equ	150	;# 
   691     0097                     WDTCON          equ	151	;# 
   692     0098                     OSCTUNE         equ	152	;# 
   693     0099                     OSCCON          equ	153	;# 
   694     009A                     OSCSTAT         equ	154	;# 
   695     009B                     ADRES           equ	155	;# 
   696     009B                     ADRESL          equ	155	;# 
   697     009C                     ADRESH          equ	156	;# 
   698     009D                     ADCON0          equ	157	;# 
   699     009E                     ADCON1          equ	158	;# 
   700     010C                     LATA            equ	268	;# 
   701     010E                     LATC            equ	270	;# 
   702     0111                     CM1CON0         equ	273	;# 
   703     0112                     CM1CON1         equ	274	;# 
   704     0113                     CM2CON0         equ	275	;# 
   705     0114                     CM2CON1         equ	276	;# 
   706     0115                     CMOUT           equ	277	;# 
   707     0116                     BORCON          equ	278	;# 
   708     0117                     FVRCON          equ	279	;# 
   709     0118                     DACCON0         equ	280	;# 
   710     0119                     DACCON1         equ	281	;# 
   711     011A                     SRCON0          equ	282	;# 
   712     011B                     SRCON1          equ	283	;# 
   713     011D                     APFCON0         equ	285	;# 
   714     011E                     APFCON1         equ	286	;# 
   715     018C                     ANSELA          equ	396	;# 
   716     018E                     ANSELC          equ	398	;# 
   717     0191                     EEADR           equ	401	;# 
   718     0191                     EEADRL          equ	401	;# 
   719     0192                     EEADRH          equ	402	;# 
   720     0193                     EEDAT           equ	403	;# 
   721     0193                     EEDATL          equ	403	;# 
   722     0193                     EEDATA          equ	403	;# 
   723     0194                     EEDATH          equ	404	;# 
   724     0195                     EECON1          equ	405	;# 
   725     0196                     EECON2          equ	406	;# 
   726     0199                     RCREG           equ	409	;# 
   727     019A                     TXREG           equ	410	;# 
   728     019B                     SPBRG           equ	411	;# 
   729     019B                     SPBRGL          equ	411	;# 
   730     019C                     SPBRGH          equ	412	;# 
   731     019D                     RCSTA           equ	413	;# 
   732     019E                     TXSTA           equ	414	;# 
   733     019F                     BAUDCON         equ	415	;# 
   734     020C                     WPUA            equ	524	;# 
   735     020E                     WPUC            equ	526	;# 
   736     0211                     SSP1BUF         equ	529	;# 
   737     0211                     SSPBUF          equ	529	;# 
   738     0212                     SSP1ADD         equ	530	;# 
   739     0212                     SSPADD          equ	530	;# 
   740     0213                     SSP1MSK         equ	531	;# 
   741     0213                     SSPMSK          equ	531	;# 
   742     0214                     SSP1STAT        equ	532	;# 
   743     0214                     SSPSTAT         equ	532	;# 
   744     0215                     SSP1CON1        equ	533	;# 
   745     0215                     SSPCON1         equ	533	;# 
   746     0215                     SSPCON          equ	533	;# 
   747     0216                     SSP1CON2        equ	534	;# 
   748     0216                     SSPCON2         equ	534	;# 
   749     0217                     SSP1CON3        equ	535	;# 
   750     0217                     SSPCON3         equ	535	;# 
   751     0291                     CCPR1           equ	657	;# 
   752     0291                     CCPR1L          equ	657	;# 
   753     0292                     CCPR1H          equ	658	;# 
   754     0293                     CCP1CON         equ	659	;# 
   755     0294                     PWM1CON         equ	660	;# 
   756     0295                     CCP1AS          equ	661	;# 
   757     0295                     ECCP1AS         equ	661	;# 
   758     0296                     PSTR1CON        equ	662	;# 
   759     0298                     CCPR2           equ	664	;# 
   760     0298                     CCPR2L          equ	664	;# 
   761     0299                     CCPR2H          equ	665	;# 
   762     029A                     CCP2CON         equ	666	;# 
   763     029B                     PWM2CON         equ	667	;# 
   764     029C                     CCP2AS          equ	668	;# 
   765     029D                     PSTR2CON        equ	669	;# 
   766     029E                     CCPTMRS         equ	670	;# 
   767     029E                     CCPTMRS0        equ	670	;# 
   768     0311                     CCPR3           equ	785	;# 
   769     0311                     CCPR3L          equ	785	;# 
   770     0312                     CCPR3H          equ	786	;# 
   771     0313                     CCP3CON         equ	787	;# 
   772     0318                     CCPR4           equ	792	;# 
   773     0318                     CCPR4L          equ	792	;# 
   774     0319                     CCPR4H          equ	793	;# 
   775     031A                     CCP4CON         equ	794	;# 
   776     038C                     INLVLA          equ	908	;# 
   777     038E                     INLVLC          equ	910	;# 
   778     0391                     IOCAP           equ	913	;# 
   779     0392                     IOCAN           equ	914	;# 
   780     0393                     IOCAF           equ	915	;# 
   781     039A                     CLKRCON         equ	922	;# 
   782     039C                     MDCON           equ	924	;# 
   783     039D                     MDSRC           equ	925	;# 
   784     039E                     MDCARL          equ	926	;# 
   785     039F                     MDCARH          equ	927	;# 
   786     0415                     TMR4            equ	1045	;# 
   787     0416                     PR4             equ	1046	;# 
   788     0417                     T4CON           equ	1047	;# 
   789     041C                     TMR6            equ	1052	;# 
   790     041D                     PR6             equ	1053	;# 
   791     041E                     T6CON           equ	1054	;# 
   792     0FE4                     STATUS_SHAD     equ	4068	;# 
   793     0FE5                     WREG_SHAD       equ	4069	;# 
   794     0FE6                     BSR_SHAD        equ	4070	;# 
   795     0FE7                     PCLATH_SHAD     equ	4071	;# 
   796     0FE8                     FSR0L_SHAD      equ	4072	;# 
   797     0FE9                     FSR0H_SHAD      equ	4073	;# 
   798     0FEA                     FSR1L_SHAD      equ	4074	;# 
   799     0FEB                     FSR1H_SHAD      equ	4075	;# 
   800     0FED                     STKPTR          equ	4077	;# 
   801     0FEE                     TOSL            equ	4078	;# 
   802     0FEF                     TOSH            equ	4079	;# 
   803     0000                     INDF0           equ	0	;# 
   804     0001                     INDF1           equ	1	;# 
   805     0002                     PCL             equ	2	;# 
   806     0003                     STATUS          equ	3	;# 
   807     0004                     FSR0L           equ	4	;# 
   808     0005                     FSR0H           equ	5	;# 
   809     0006                     FSR1L           equ	6	;# 
   810     0007                     FSR1H           equ	7	;# 
   811     0008                     BSR             equ	8	;# 
   812     0009                     WREG            equ	9	;# 
   813     000A                     PCLATH          equ	10	;# 
   814     000B                     INTCON          equ	11	;# 
   815     000C                     PORTA           equ	12	;# 
   816     000E                     PORTC           equ	14	;# 
   817     0011                     PIR1            equ	17	;# 
   818     0012                     PIR2            equ	18	;# 
   819     0013                     PIR3            equ	19	;# 
   820     0015                     TMR0            equ	21	;# 
   821     0016                     TMR1            equ	22	;# 
   822     0016                     TMR1L           equ	22	;# 
   823     0017                     TMR1H           equ	23	;# 
   824     0018                     T1CON           equ	24	;# 
   825     0019                     T1GCON          equ	25	;# 
   826     001A                     TMR2            equ	26	;# 
   827     001B                     PR2             equ	27	;# 
   828     001C                     T2CON           equ	28	;# 
   829     001E                     CPSCON0         equ	30	;# 
   830     001F                     CPSCON1         equ	31	;# 
   831     008C                     TRISA           equ	140	;# 
   832     008E                     TRISC           equ	142	;# 
   833     0091                     PIE1            equ	145	;# 
   834     0092                     PIE2            equ	146	;# 
   835     0093                     PIE3            equ	147	;# 
   836     0095                     OPTION_REG      equ	149	;# 
   837     0096                     PCON            equ	150	;# 
   838     0097                     WDTCON          equ	151	;# 
   839     0098                     OSCTUNE         equ	152	;# 
   840     0099                     OSCCON          equ	153	;# 
   841     009A                     OSCSTAT         equ	154	;# 
   842     009B                     ADRES           equ	155	;# 
   843     009B                     ADRESL          equ	155	;# 
   844     009C                     ADRESH          equ	156	;# 
   845     009D                     ADCON0          equ	157	;# 
   846     009E                     ADCON1          equ	158	;# 
   847     010C                     LATA            equ	268	;# 
   848     010E                     LATC            equ	270	;# 
   849     0111                     CM1CON0         equ	273	;# 
   850     0112                     CM1CON1         equ	274	;# 
   851     0113                     CM2CON0         equ	275	;# 
   852     0114                     CM2CON1         equ	276	;# 
   853     0115                     CMOUT           equ	277	;# 
   854     0116                     BORCON          equ	278	;# 
   855     0117                     FVRCON          equ	279	;# 
   856     0118                     DACCON0         equ	280	;# 
   857     0119                     DACCON1         equ	281	;# 
   858     011A                     SRCON0          equ	282	;# 
   859     011B                     SRCON1          equ	283	;# 
   860     011D                     APFCON0         equ	285	;# 
   861     011E                     APFCON1         equ	286	;# 
   862     018C                     ANSELA          equ	396	;# 
   863     018E                     ANSELC          equ	398	;# 
   864     0191                     EEADR           equ	401	;# 
   865     0191                     EEADRL          equ	401	;# 
   866     0192                     EEADRH          equ	402	;# 
   867     0193                     EEDAT           equ	403	;# 
   868     0193                     EEDATL          equ	403	;# 
   869     0193                     EEDATA          equ	403	;# 
   870     0194                     EEDATH          equ	404	;# 
   871     0195                     EECON1          equ	405	;# 
   872     0196                     EECON2          equ	406	;# 
   873     0199                     RCREG           equ	409	;# 
   874     019A                     TXREG           equ	410	;# 
   875     019B                     SPBRG           equ	411	;# 
   876     019B                     SPBRGL          equ	411	;# 
   877     019C                     SPBRGH          equ	412	;# 
   878     019D                     RCSTA           equ	413	;# 
   879     019E                     TXSTA           equ	414	;# 
   880     019F                     BAUDCON         equ	415	;# 
   881     020C                     WPUA            equ	524	;# 
   882     020E                     WPUC            equ	526	;# 
   883     0211                     SSP1BUF         equ	529	;# 
   884     0211                     SSPBUF          equ	529	;# 
   885     0212                     SSP1ADD         equ	530	;# 
   886     0212                     SSPADD          equ	530	;# 
   887     0213                     SSP1MSK         equ	531	;# 
   888     0213                     SSPMSK          equ	531	;# 
   889     0214                     SSP1STAT        equ	532	;# 
   890     0214                     SSPSTAT         equ	532	;# 
   891     0215                     SSP1CON1        equ	533	;# 
   892     0215                     SSPCON1         equ	533	;# 
   893     0215                     SSPCON          equ	533	;# 
   894     0216                     SSP1CON2        equ	534	;# 
   895     0216                     SSPCON2         equ	534	;# 
   896     0217                     SSP1CON3        equ	535	;# 
   897     0217                     SSPCON3         equ	535	;# 
   898     0291                     CCPR1           equ	657	;# 
   899     0291                     CCPR1L          equ	657	;# 
   900     0292                     CCPR1H          equ	658	;# 
   901     0293                     CCP1CON         equ	659	;# 
   902     0294                     PWM1CON         equ	660	;# 
   903     0295                     CCP1AS          equ	661	;# 
   904     0295                     ECCP1AS         equ	661	;# 
   905     0296                     PSTR1CON        equ	662	;# 
   906     0298                     CCPR2           equ	664	;# 
   907     0298                     CCPR2L          equ	664	;# 
   908     0299                     CCPR2H          equ	665	;# 
   909     029A                     CCP2CON         equ	666	;# 
   910     029B                     PWM2CON         equ	667	;# 
   911     029C                     CCP2AS          equ	668	;# 
   912     029D                     PSTR2CON        equ	669	;# 
   913     029E                     CCPTMRS         equ	670	;# 
   914     029E                     CCPTMRS0        equ	670	;# 
   915     0311                     CCPR3           equ	785	;# 
   916     0311                     CCPR3L          equ	785	;# 
   917     0312                     CCPR3H          equ	786	;# 
   918     0313                     CCP3CON         equ	787	;# 
   919     0318                     CCPR4           equ	792	;# 
   920     0318                     CCPR4L          equ	792	;# 
   921     0319                     CCPR4H          equ	793	;# 
   922     031A                     CCP4CON         equ	794	;# 
   923     038C                     INLVLA          equ	908	;# 
   924     038E                     INLVLC          equ	910	;# 
   925     0391                     IOCAP           equ	913	;# 
   926     0392                     IOCAN           equ	914	;# 
   927     0393                     IOCAF           equ	915	;# 
   928     039A                     CLKRCON         equ	922	;# 
   929     039C                     MDCON           equ	924	;# 
   930     039D                     MDSRC           equ	925	;# 
   931     039E                     MDCARL          equ	926	;# 
   932     039F                     MDCARH          equ	927	;# 
   933     0415                     TMR4            equ	1045	;# 
   934     0416                     PR4             equ	1046	;# 
   935     0417                     T4CON           equ	1047	;# 
   936     041C                     TMR6            equ	1052	;# 
   937     041D                     PR6             equ	1053	;# 
   938     041E                     T6CON           equ	1054	;# 
   939     0FE4                     STATUS_SHAD     equ	4068	;# 
   940     0FE5                     WREG_SHAD       equ	4069	;# 
   941     0FE6                     BSR_SHAD        equ	4070	;# 
   942     0FE7                     PCLATH_SHAD     equ	4071	;# 
   943     0FE8                     FSR0L_SHAD      equ	4072	;# 
   944     0FE9                     FSR0H_SHAD      equ	4073	;# 
   945     0FEA                     FSR1L_SHAD      equ	4074	;# 
   946     0FEB                     FSR1H_SHAD      equ	4075	;# 
   947     0FED                     STKPTR          equ	4077	;# 
   948     0FEE                     TOSL            equ	4078	;# 
   949     0FEF                     TOSH            equ	4079	;# 
   950                           
   951 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
   952     0000                     _INT_DefaultInterruptHandler equ	0
   953                           
   954                           	psect	nvCOMMON
   955     0070                     __pnvCOMMON:
   956     0070                     _SW1_InterruptHandler:
   957     0070                     	ds	2
   958     0072                     _INT_InterruptHandler:
   959     0072                     	ds	2
   960     000C                     _PORTAbits      set	12
   961     000B                     _INTCONbits     set	11
   962     0097                     _WDTCONbits     set	151
   963     0098                     _OSCTUNE        set	152
   964     0099                     _OSCCON         set	153
   965     008E                     _TRISC          set	142
   966     008C                     _TRISA          set	140
   967     0095                     _OPTION_REGbits set	149
   968     0116                     _BORCON         set	278
   969     010C                     _LATAbits       set	268
   970     010E                     _LATC           set	270
   971     010C                     _LATA           set	268
   972     018E                     _ANSELC         set	398
   973     018C                     _ANSELA         set	396
   974     020E                     _WPUC           set	526
   975     020C                     _WPUA           set	524
   976     0393                     _IOCAFbits      set	915
   977     0393                     _IOCAF          set	915
   978     0392                     _IOCAN          set	914
   979     0391                     _IOCAP          set	913
   980     038E                     _INLVLC         set	910
   981     038C                     _INLVLA         set	908
   982                           
   983                           	psect	cinit
   984     07FD                     start_initialization:	
   985                           ; #config settings
   986                           
   987     07FD                     __initialization:
   988     07FD                     end_of_initialization:	
   989                           ;End of C runtime variable initialization code
   990                           
   991     07FD                     __end_of__initialization:
   992     07FD  0020               	movlb	0
   993     07FE  3187  2F98         	ljmp	_main	;jump to C main() function
   994                           
   995                           	psect	cstackCOMMON
   996     0074                     __pcstackCOMMON:
   997     0074                     ?_INT_SetInterruptHandler:
   998     0074                     ?_SW1_SetInterruptHandler:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001     0074                     ?_SW1_DefaultInterruptHandler:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004     0074                     ?_SW1_ISR:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007     0074                     ?_INTERRUPT_Initialize:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010     0074                     ?_PIN_MANAGER_Initialize:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013     0074                     ?_PIN_MANAGER_IOC:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016     0074                     ?_CLOCK_Initialize:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019     0074                     ?_SYSTEM_Initialize:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022     0074                     ?_main:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025     0074                     INT_SetInterruptHandler@InterruptHandler:	
  1026                           ; 2 bytes @ 0x0
  1027                           
  1028     0074                     SW1_SetInterruptHandler@InterruptHandler:	
  1029                           ; 2 bytes @ 0x0
  1030                           
  1031     0074                     ??_SW1_DefaultInterruptHandler:	
  1032                           ; 2 bytes @ 0x0
  1033                           
  1034     0074                     ??_CLOCK_Initialize:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037                           
  1038                           ; 1 bytes @ 0x0
  1039     0074                     	ds	1
  1040     0075                     ??_SW1_ISR:
  1041     0075                     ??_PIN_MANAGER_IOC:	
  1042                           ; 1 bytes @ 0x1
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x1
  1046     0075                     	ds	1
  1047     0076                     ??_INT_SetInterruptHandler:
  1048     0076                     ??_SW1_SetInterruptHandler:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051     0076                     ??_INTERRUPT_Initialize:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054     0076                     ??_PIN_MANAGER_Initialize:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057     0076                     ??_SYSTEM_Initialize:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060     0076                     ??_main:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063                           
  1064                           	psect	maintext
  1065     0798                     __pmaintext:	
  1066                           ; 1 bytes @ 0x2
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 41 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  2  124[None  ] int 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : B1F/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels required when called: 3
  1092 ;; This function calls:
  1093 ;;		_PIN_MANAGER_IOC
  1094 ;;		_SYSTEM_Initialize
  1095 ;; This function is called by:
  1096 ;;		Startup code after reset
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100     0798                     _main:	
  1101                           ;psect for function _main
  1102                           
  1103     0798                     l840:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1106                           
  1107                           
  1108                           ;main.c: 43:     SYSTEM_Initialize();
  1109     0798  3187  27B1  3187   	fcall	_SYSTEM_Initialize
  1110     079B                     l125:	
  1111                           ;main.c: 62:     while(1)
  1112                           
  1113                           
  1114                           ;main.c: 63:     {;main.c: 66:         PIN_MANAGER_IOC();
  1115     079B  3187  2784  3187   	fcall	_PIN_MANAGER_IOC
  1116     079E                     l842:
  1117                           
  1118                           ;main.c: 68:         __nop();
  1119     079E  0000               	nop
  1120     079F  0063               	sleep	;# 
  1121     07A0  2F9B               	goto	l125
  1122     07A1  3180  2802         	ljmp	start
  1123     07A3                     __end_of_main:
  1124                           
  1125                           	psect	text1
  1126     07B1                     __ptext1:	
  1127 ;; *************** function _SYSTEM_Initialize *****************
  1128 ;; Defined at:
  1129 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		_CLOCK_Initialize
  1152 ;;		_INTERRUPT_Initialize
  1153 ;;		_PIN_MANAGER_Initialize
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     07B1                     _SYSTEM_Initialize:	
  1160                           ;psect for function _SYSTEM_Initialize
  1161                           
  1162     07B1                     l830:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1165                           
  1166                           
  1167                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1168     07B1  3187  277C  3187   	fcall	_CLOCK_Initialize
  1169     07B4                     l832:
  1170                           
  1171                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1172     07B4  3187  27DB  3187   	fcall	_PIN_MANAGER_Initialize
  1173     07B7                     l834:
  1174                           
  1175                           ;mcc_generated_files/system/src/system.c: 43:     INTERRUPT_Initialize();
  1176     07B7  3187  278D  3187   	fcall	_INTERRUPT_Initialize
  1177     07BA                     l836:
  1178                           
  1179                           ;mcc_generated_files/system/src/system.c: 45:     WDTCONbits.SWDTEN = 1;
  1180     07BA  0021               	movlb	1	; select bank1
  1181     07BB  1417               	bsf	23,0	;volatile
  1182     07BC                     l838:
  1183                           
  1184                           ;mcc_generated_files/system/src/system.c: 46:     WDTCONbits.WDTPS = 0b01100;
  1185     07BC  0817               	movf	23,w	;volatile
  1186     07BD  39C1               	andlw	-63
  1187     07BE  3818               	iorlw	24
  1188     07BF  0097               	movwf	23	;volatile
  1189     07C0                     l114:
  1190     07C0  0008               	return
  1191     07C1                     __end_of_SYSTEM_Initialize:
  1192                           
  1193                           	psect	text2
  1194     07DB                     __ptext2:	
  1195 ;; *************** function _PIN_MANAGER_Initialize *****************
  1196 ;; Defined at:
  1197 ;;		line 40 in file "mcc_generated_files/system/src/pins.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 1
  1218 ;; This function calls:
  1219 ;;		_SW1_SetInterruptHandler
  1220 ;; This function is called by:
  1221 ;;		_SYSTEM_Initialize
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225     07DB                     _PIN_MANAGER_Initialize:	
  1226                           ;psect for function _PIN_MANAGER_Initialize
  1227                           
  1228     07DB                     l812:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1231                           
  1232                           
  1233                           ;mcc_generated_files/system/src/pins.c: 45:     LATA = 0x0;
  1234     07DB  0022               	movlb	2	; select bank2
  1235     07DC  018C               	clrf	12	;volatile
  1236     07DD                     l814:
  1237                           
  1238                           ;mcc_generated_files/system/src/pins.c: 46:     LATC = 0x18;
  1239     07DD  3018               	movlw	24
  1240     07DE  008E               	movwf	14	;volatile
  1241     07DF                     l816:
  1242                           
  1243                           ;mcc_generated_files/system/src/pins.c: 51:     TRISA = 0xF;
  1244     07DF  300F               	movlw	15
  1245     07E0  0021               	movlb	1	; select bank1
  1246     07E1  008C               	movwf	12	;volatile
  1247     07E2                     l818:
  1248                           
  1249                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x2;
  1250     07E2  3002               	movlw	2
  1251     07E3  008E               	movwf	14	;volatile
  1252                           
  1253                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  1254     07E4  0023               	movlb	3	; select bank3
  1255     07E5  018C               	clrf	12	;volatile
  1256                           
  1257                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELC = 0x0;
  1258     07E6  018E               	clrf	14	;volatile
  1259     07E7                     l820:
  1260                           
  1261                           ;mcc_generated_files/system/src/pins.c: 63:     WPUA = 0xA;
  1262     07E7  300A               	movlw	10
  1263     07E8  0024               	movlb	4	; select bank4
  1264     07E9  008C               	movwf	12	;volatile
  1265                           
  1266                           ;mcc_generated_files/system/src/pins.c: 64:     WPUC = 0x0;
  1267     07EA  018E               	clrf	14	;volatile
  1268     07EB                     l822:
  1269                           
  1270                           ;mcc_generated_files/system/src/pins.c: 65:     OPTION_REGbits.nWPUEN = 0x0;
  1271     07EB  0021               	movlb	1	; select bank1
  1272     07EC  1395               	bcf	21,7	;volatile
  1273                           
  1274                           ;mcc_generated_files/system/src/pins.c: 77:     INLVLA = 0x0;
  1275     07ED  0027               	movlb	7	; select bank7
  1276     07EE  018C               	clrf	12	;volatile
  1277                           
  1278                           ;mcc_generated_files/system/src/pins.c: 78:     INLVLC = 0x0;
  1279     07EF  018E               	clrf	14	;volatile
  1280                           
  1281                           ;mcc_generated_files/system/src/pins.c: 91:     IOCAP = 0x0;
  1282     07F0  0191               	clrf	17	;volatile
  1283     07F1                     l824:
  1284                           
  1285                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAN = 0x2;
  1286     07F1  3002               	movlw	2
  1287     07F2  0092               	movwf	18	;volatile
  1288                           
  1289                           ;mcc_generated_files/system/src/pins.c: 93:     IOCAF = 0x0;
  1290     07F3  0193               	clrf	19	;volatile
  1291     07F4                     l826:
  1292                           
  1293                           ;mcc_generated_files/system/src/pins.c: 95:     SW1_SetInterruptHandler(SW1_DefaultInter
      +                          ruptHandler);
  1294     07F4  30C1               	movlw	low _SW1_DefaultInterruptHandler
  1295     07F5  00F4               	movwf	SW1_SetInterruptHandler@InterruptHandler
  1296     07F6  3007               	movlw	high _SW1_DefaultInterruptHandler
  1297     07F7  00F5               	movwf	SW1_SetInterruptHandler@InterruptHandler+1
  1298     07F8  3187  2777  3187   	fcall	_SW1_SetInterruptHandler
  1299     07FB                     l828:
  1300                           
  1301                           ;mcc_generated_files/system/src/pins.c: 98:     INTCONbits.IOCIE = 1;
  1302     07FB  158B               	bsf	11,3	;volatile
  1303     07FC                     l77:
  1304     07FC  0008               	return
  1305     07FD                     __end_of_PIN_MANAGER_Initialize:
  1306                           
  1307                           	psect	text3
  1308     0777                     __ptext3:	
  1309 ;; *************** function _SW1_SetInterruptHandler *****************
  1310 ;; Defined at:
  1311 ;;		line 128 in file "mcc_generated_files/system/src/pins.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1314 ;;		 -> SW1_DefaultInterruptHandler(1), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_PIN_MANAGER_Initialize
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339     0777                     _SW1_SetInterruptHandler:	
  1340                           ;psect for function _SW1_SetInterruptHandler
  1341                           
  1342     0777                     l806:	
  1343                           ;incstack = 0
  1344                           ; Regs used in _SW1_SetInterruptHandler: [wreg]
  1345                           
  1346                           
  1347                           ;mcc_generated_files/system/src/pins.c: 129:     SW1_InterruptHandler = InterruptHandler
      +                          ;
  1348     0777  0875               	movf	SW1_SetInterruptHandler@InterruptHandler+1,w
  1349     0778  00F1               	movwf	_SW1_InterruptHandler+1
  1350     0779  0874               	movf	SW1_SetInterruptHandler@InterruptHandler,w
  1351     077A  00F0               	movwf	_SW1_InterruptHandler
  1352     077B                     l88:
  1353     077B  0008               	return
  1354     077C                     __end_of_SW1_SetInterruptHandler:
  1355                           
  1356                           	psect	text4
  1357     078D                     __ptext4:	
  1358 ;; *************** function _INTERRUPT_Initialize *****************
  1359 ;; Defined at:
  1360 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 1
  1381 ;; This function calls:
  1382 ;;		_INT_SetInterruptHandler
  1383 ;; This function is called by:
  1384 ;;		_SYSTEM_Initialize
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     078D                     _INTERRUPT_Initialize:	
  1389                           ;psect for function _INTERRUPT_Initialize
  1390                           
  1391     078D                     l808:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1394                           
  1395                           
  1396                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  1397     078D  108B               	bcf	11,1	;volatile
  1398                           
  1399                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  1400     078E  0021               	movlb	1	; select bank1
  1401     078F  1715               	bsf	21,6	;volatile
  1402     0790                     l810:
  1403                           
  1404                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  1405     0790  3000               	movlw	0
  1406     0791  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler
  1407     0792  3000               	movlw	0
  1408     0793  00F5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  1409     0794  3187  2772  3187   	fcall	_INT_SetInterruptHandler
  1410     0797                     l15:
  1411     0797  0008               	return
  1412     0798                     __end_of_INTERRUPT_Initialize:
  1413                           
  1414                           	psect	text5
  1415     0772                     __ptext5:	
  1416 ;; *************** function _INT_SetInterruptHandler *****************
  1417 ;; Defined at:
  1418 ;;		line 71 in file "mcc_generated_files/system/src/interrupt.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1421 ;;		 -> INT_DefaultInterruptHandler(1), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;Total ram usage:        2 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_INTERRUPT_Initialize
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446     0772                     _INT_SetInterruptHandler:	
  1447                           ;psect for function _INT_SetInterruptHandler
  1448                           
  1449     0772                     l804:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  1452                           
  1453                           
  1454                           ;mcc_generated_files/system/src/interrupt.c: 72:     INT_InterruptHandler = InterruptHan
      +                          dler;
  1455     0772  0875               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  1456     0773  00F3               	movwf	_INT_InterruptHandler+1
  1457     0774  0874               	movf	INT_SetInterruptHandler@InterruptHandler,w
  1458     0775  00F2               	movwf	_INT_InterruptHandler
  1459     0776                     l25:
  1460     0776  0008               	return
  1461     0777                     __end_of_INT_SetInterruptHandler:
  1462                           
  1463                           	psect	text6
  1464     077C                     __ptext6:	
  1465 ;; *************** function _CLOCK_Initialize *****************
  1466 ;; Defined at:
  1467 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		status,2
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_SYSTEM_Initialize
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     077C                     _CLOCK_Initialize:	
  1495                           ;psect for function _CLOCK_Initialize
  1496                           
  1497     077C                     l774:	
  1498                           ;incstack = 0
  1499                           ; Regs used in _CLOCK_Initialize: [status,2]
  1500                           
  1501                           
  1502                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
  1503     077C  306A               	movlw	106
  1504     077D  0021               	movlb	1	; select bank1
  1505     077E  0099               	movwf	25	;volatile
  1506     077F                     l776:
  1507                           
  1508                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7);
  1509     077F  0022               	movlb	2	; select bank2
  1510     0780  0196               	clrf	22	;volatile
  1511                           
  1512                           ;mcc_generated_files/system/src/clock.c: 45:     OSCTUNE = (0 << 0x0);
  1513     0781  0021               	movlb	1	; select bank1
  1514     0782  0198               	clrf	24	;volatile
  1515     0783                     l103:
  1516     0783  0008               	return
  1517     0784                     __end_of_CLOCK_Initialize:
  1518                           
  1519                           	psect	text7
  1520     0784                     __ptext7:	
  1521 ;; *************** function _PIN_MANAGER_IOC *****************
  1522 ;; Defined at:
  1523 ;;		line 101 in file "mcc_generated_files/system/src/pins.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 2
  1544 ;; This function calls:
  1545 ;;		_SW1_ISR
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551     0784                     _PIN_MANAGER_IOC:	
  1552                           ;psect for function _PIN_MANAGER_IOC
  1553                           
  1554     0784                     l778:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  1557                           
  1558                           
  1559                           ;mcc_generated_files/system/src/pins.c: 104:     if(IOCAFbits.IOCAF1 == 1)
  1560     0784  0027               	movlb	7	; select bank7
  1561     0785  1C93               	btfss	19,1	;volatile
  1562     0786  2F88               	goto	u51
  1563     0787  2F89               	goto	u50
  1564     0788                     u51:
  1565     0788  2F8C               	goto	l81
  1566     0789                     u50:
  1567     0789                     l780:
  1568                           
  1569                           ;mcc_generated_files/system/src/pins.c: 105:     {;mcc_generated_files/system/src/pins.c
      +                          : 106:         SW1_ISR();
  1570     0789  3187  27A3  3187   	fcall	_SW1_ISR
  1571     078C                     l81:
  1572     078C  0008               	return
  1573     078D                     __end_of_PIN_MANAGER_IOC:
  1574                           
  1575                           	psect	text8
  1576     07A3                     __ptext8:	
  1577 ;; *************** function _SW1_ISR *****************
  1578 ;; Defined at:
  1579 ;;		line 113 in file "mcc_generated_files/system/src/pins.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 1
  1600 ;; This function calls:
  1601 ;;		NULL
  1602 ;;		_SW1_DefaultInterruptHandler
  1603 ;; This function is called by:
  1604 ;;		_PIN_MANAGER_IOC
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608     07A3                     _SW1_ISR:	
  1609                           ;psect for function _SW1_ISR
  1610                           
  1611     07A3                     l768:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _SW1_ISR: [wreg+status,2+status,0+pclath+cstack]
  1614                           
  1615                           
  1616                           ;mcc_generated_files/system/src/pins.c: 118:     if(SW1_InterruptHandler)
  1617     07A3  0870               	movf	_SW1_InterruptHandler,w
  1618     07A4  0471               	iorwf	_SW1_InterruptHandler+1,w
  1619     07A5  1903               	btfsc	3,2
  1620     07A6  2FA8               	goto	u41
  1621     07A7  2FA9               	goto	u40
  1622     07A8                     u41:
  1623     07A8  2FAE               	goto	l772
  1624     07A9                     u40:
  1625     07A9                     l770:
  1626                           
  1627                           ;mcc_generated_files/system/src/pins.c: 119:     {;mcc_generated_files/system/src/pins.c
      +                          : 120:         SW1_InterruptHandler();
  1628     07A9  0871               	movf	_SW1_InterruptHandler+1,w
  1629     07AA  008A               	movwf	10
  1630     07AB  0870               	movf	_SW1_InterruptHandler,w
  1631     07AC  000A               	callw
  1632     07AD  3187               	pagesel	$
  1633     07AE                     l772:
  1634                           
  1635                           ;mcc_generated_files/system/src/pins.c: 122:     IOCAFbits.IOCAF1 = 0;
  1636     07AE  0027               	movlb	7	; select bank7
  1637     07AF  1093               	bcf	19,1	;volatile
  1638     07B0                     l85:
  1639     07B0  0008               	return
  1640     07B1                     __end_of_SW1_ISR:
  1641                           
  1642                           	psect	text9
  1643     07C1                     __ptext9:	
  1644 ;; *************** function _SW1_DefaultInterruptHandler *****************
  1645 ;; Defined at:
  1646 ;;		line 135 in file "mcc_generated_files/system/src/pins.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;Total ram usage:        1 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_PIN_MANAGER_Initialize
  1670 ;;		_SW1_ISR
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     07C1                     _SW1_DefaultInterruptHandler:	
  1675                           ;psect for function _SW1_DefaultInterruptHandler
  1676                           
  1677     07C1                     l740:	
  1678                           ;incstack = 0
  1679                           ; Regs used in _SW1_DefaultInterruptHandler: [wreg+status,0]
  1680                           
  1681                           
  1682                           ;mcc_generated_files/system/src/pins.c: 138:     _delay((unsigned long)((60)*(4000000/40
      +                          00.0)));
  1683     07C1  304E               	movlw	78
  1684     07C2  00F4               	movwf	??_SW1_DefaultInterruptHandler
  1685     07C3  30EB               	movlw	235
  1686     07C4                     u77:
  1687     07C4  0B89               	decfsz	9,f
  1688     07C5  2FC4               	goto	u77
  1689     07C6  0BF4               	decfsz	??_SW1_DefaultInterruptHandler,f
  1690     07C7  2FC4               	goto	u77
  1691     07C8  0000               	nop
  1692     07C9                     l742:
  1693                           
  1694                           ;mcc_generated_files/system/src/pins.c: 139:     if (PORTAbits.RA1 == 0) {
  1695     07C9  0020               	movlb	0	; select bank0
  1696     07CA  188C               	btfsc	12,1	;volatile
  1697     07CB  2FCD               	goto	u11
  1698     07CC  2FCE               	goto	u10
  1699     07CD                     u11:
  1700     07CD  2FDA               	goto	l94
  1701     07CE                     u10:
  1702     07CE                     l744:
  1703     07CE  1003               	clrc
  1704     07CF  0022               	movlb	2	; select bank2
  1705     07D0  1E0C               	btfss	12,4	;volatile
  1706     07D1  1403               	setc
  1707     07D2  1803               	btfsc	3,0
  1708     07D3  2FD5               	goto	u21
  1709     07D4  2FD8               	goto	u20
  1710     07D5                     u21:
  1711     07D5  0022               	movlb	2	; select bank2
  1712     07D6  160C               	bsf	12,4	;volatile
  1713     07D7  2FDA               	goto	u34
  1714     07D8                     u20:
  1715     07D8  0022               	movlb	2	; select bank2
  1716     07D9  120C               	bcf	12,4	;volatile
  1717     07DA                     u34:
  1718     07DA                     l94:
  1719     07DA  0008               	return
  1720     07DB                     __end_of_SW1_DefaultInterruptHandler:
  1721     0002                     ___latbits      equ	2
  1722     007E                     btemp           set	126	;btemp
  1723     007E                     wtemp0          set	126
  1724                           
  1725                           	psect	config
  1726                           
  1727                           ;Config register CONFIG1 @ 0x8007
  1728                           ;	Oscillator Selection
  1729                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1730                           ;	Watchdog Timer Enable
  1731                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  1732                           ;	Power-up Timer Enable
  1733                           ;	PWRTE = ON, PWRT enabled
  1734                           ;	MCLR Pin Function Select
  1735                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1736                           ;	Flash Program Memory Code Protection
  1737                           ;	CP = OFF, Program memory code protection is disabled
  1738                           ;	Data Memory Code Protection
  1739                           ;	CPD = OFF, Data memory code protection is disabled
  1740                           ;	Brown-out Reset Enable
  1741                           ;	BOREN = ON, Brown-out Reset enabled
  1742                           ;	Clock Out Enable
  1743                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1744                           ;	Internal/External Switchover
  1745                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1746                           ;	Fail-Safe Clock Monitor Enable
  1747                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1748     8007                     	org	32775
  1749     8007  3FCC               	dw	16332
  1750                           
  1751                           ;Config register CONFIG2 @ 0x8008
  1752                           ;	Flash Memory Self-Write Protection
  1753                           ;	WRT = OFF, Write protection off
  1754                           ;	PLL Enable
  1755                           ;	PLLEN = OFF, 4x PLL disabled
  1756                           ;	Stack Overflow/Underflow Reset Enable
  1757                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1758                           ;	Brown-out Reset Voltage Selection
  1759                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1760                           ;	In-Circuit Debugger Mode
  1761                           ;	DEBUG = 0x1, unprogrammed default
  1762                           ;	Low-Voltage Programming Enable
  1763                           ;	LVP = ON, Low-voltage programming enabled
  1764     8008                     	org	32776
  1765     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    SW1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), NULL(), 

    SW1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_SW1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _SW1_ISR->_SW1_DefaultInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      46
                    _PIN_MANAGER_IOC
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      23
            _SW1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _SW1_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_IOC                                      0     0      0       0
                            _SW1_ISR
 ---------------------------------------------------------------------------------
 (2) _SW1_ISR                                              0     0      0       0
                                NULL *
        _SW1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (3) _SW1_DefaultInterruptHandler                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PIN_MANAGER_IOC
     _SW1_ISR
       NULL(Fake) *
       _SW1_DefaultInterruptHandler *
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _SW1_SetInterruptHandler

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      2       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jan 28 14:43:53 2025

                                     l15 0797                                       l25 0776  
                                     l81 078C                                       l85 07B0  
                                     l77 07FC                                       l94 07DA  
                                     l88 077B                                       u10 07CE  
                                     u11 07CD                                       u20 07D8  
                                     u21 07D5                                       u40 07A9  
                                     u41 07A8                                       u34 07DA  
                                     u50 0789                                       u51 0788  
                                     u77 07C4                                      l103 0783  
                                    l114 07C0                                      l125 079B  
                                    l810 0790                                      l740 07C1  
                                    l804 0772                                      l820 07E7  
                                    l812 07DB                                      l742 07C9  
                                    l806 0777                                      l822 07EB  
                                    l814 07DD                                      l830 07B1  
                                    l744 07CE                                      l808 078D  
                                    l824 07F1                                      l816 07DF  
                                    l832 07B4                                      l840 0798  
                                    l770 07A9                                      l826 07F4  
                                    l818 07E2                                      l834 07B7  
                                    l842 079E                                      l772 07AE  
                                    l780 0789                                      l828 07FB  
                                    l836 07BA                                      l774 077C  
                                    l838 07BC                                      l768 07A3  
                                    l776 077F                                      l778 0784  
                                    wreg 0009                                     _LATA 010C  
                                   _LATC 010E                                     _WPUA 020C  
                                   _WPUC 020E                          __end_of_SW1_ISR 07B1  
                                   _main 0798                                     btemp 007E  
            _INT_DefaultInterruptHandler 0000                                     start 0002  
        __end_of_INT_SetInterruptHandler 0777                                    ?_main 0074  
                                  _IOCAF 0393                                    _IOCAN 0392  
                                  _IOCAP 0391                                    _TRISA 008C  
                                  _TRISC 008E                  __end_of_PIN_MANAGER_IOC 078D  
                _SW1_SetInterruptHandler 0777                                    pclath 000A  
                                  status 0003                                    wtemp0 007E  
                        __initialization 07FD                             __end_of_main 07A3  
                                 ??_main 0076                                ??_SW1_ISR 0075  
                                 _ANSELA 018C                                   _ANSELC 018E  
                                 _BORCON 0116                                   _INLVLA 038C  
                                 _INLVLC 038E                                   _OSCCON 0099  
                      ?_CLOCK_Initialize 0074                       ??_CLOCK_Initialize 0074  
              ??_SW1_SetInterruptHandler 0076  SW1_SetInterruptHandler@InterruptHandler 0074  
INT_SetInterruptHandler@InterruptHandler 0074                         ?_PIN_MANAGER_IOC 0074  
                      _SYSTEM_Initialize 07B1                  __end_of__initialization 07FD  
                     ?_SYSTEM_Initialize 0074                           __pcstackCOMMON 0074  
                    ??_SYSTEM_Initialize 0076                           _OPTION_REGbits 0095  
              __end_of_SYSTEM_Initialize 07C1                               __pnvCOMMON 0070  
                             __pmaintext 0798                                  _OSCTUNE 0098  
                                _SW1_ISR 07A3                                  __ptext1 07B1  
                                __ptext2 07DB                                  __ptext3 0777  
                                __ptext4 078D                                  __ptext5 0772  
                                __ptext6 077C                                  __ptext7 0784  
                                __ptext8 07A3                                  __ptext9 07C1  
               ??_PIN_MANAGER_Initialize 0076                                _IOCAFbits 0393  
                _INT_SetInterruptHandler 0772                     end_of_initialization 07FD  
           ?_SW1_DefaultInterruptHandler 0074                                _PORTAbits 000C  
          ??_SW1_DefaultInterruptHandler 0074             __end_of_INTERRUPT_Initialize 0798  
              ??_INT_SetInterruptHandler 0076                      start_initialization 07FD  
               ?_SW1_SetInterruptHandler 0074                                ___latbits 0002  
                               ?_SW1_ISR 0074                   _PIN_MANAGER_Initialize 07DB  
                   _INTERRUPT_Initialize 078D                         _CLOCK_Initialize 077C  
                               _LATAbits 010C                     _SW1_InterruptHandler 0070  
        __end_of_SW1_SetInterruptHandler 077C                        ??_PIN_MANAGER_IOC 0075  
                  ?_INTERRUPT_Initialize 0074                               _INTCONbits 000B  
                   _INT_InterruptHandler 0072                   ??_INTERRUPT_Initialize 0076  
    __end_of_SW1_DefaultInterruptHandler 07DB              _SW1_DefaultInterruptHandler 07C1  
                ?_PIN_MANAGER_Initialize 0074                 ?_INT_SetInterruptHandler 0074  
               __end_of_CLOCK_Initialize 0784                               _WDTCONbits 0097  
         __end_of_PIN_MANAGER_Initialize 07FD                          _PIN_MANAGER_IOC 0784  
