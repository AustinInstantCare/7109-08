

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 05 12:27:25 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16LF1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,space=0,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x620,48
    52                           	dabs	1,0x5A0,80
    53                           	dabs	1,0x520,80
    54                           	dabs	1,0x4C0,48
    55                           	dabs	1,0x22F0,0,_dataBuffer
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Generated 07/09/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16LF1825 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92     0008                     bsr             equ	8
    93     0005                     fsr0h           equ	5
    94     0004                     fsr0l           equ	4
    95     0007                     fsr1h           equ	7
    96     0006                     fsr1l           equ	6
    97     0000                     indf            equ	0
    98     0000                     indf0           equ	0
    99     0001                     indf1           equ	1
   100     000B                     intcon          equ	11
   101     0002                     pc              equ	2
   102     0002                     pcl             equ	2
   103     000A                     pclath          equ	10
   104     0003                     status          equ	3
   105     0009                     wreg            equ	9
   106     0000                     INDF0           equ	0	;# 
   107     0001                     INDF1           equ	1	;# 
   108     0002                     PCL             equ	2	;# 
   109     0003                     STATUS          equ	3	;# 
   110     0004                     FSR0L           equ	4	;# 
   111     0005                     FSR0H           equ	5	;# 
   112     0006                     FSR1L           equ	6	;# 
   113     0007                     FSR1H           equ	7	;# 
   114     0008                     BSR             equ	8	;# 
   115     0009                     WREG            equ	9	;# 
   116     000A                     PCLATH          equ	10	;# 
   117     000B                     INTCON          equ	11	;# 
   118     000C                     PORTA           equ	12	;# 
   119     000E                     PORTC           equ	14	;# 
   120     0011                     PIR1            equ	17	;# 
   121     0012                     PIR2            equ	18	;# 
   122     0013                     PIR3            equ	19	;# 
   123     0015                     TMR0            equ	21	;# 
   124     0016                     TMR1            equ	22	;# 
   125     0016                     TMR1L           equ	22	;# 
   126     0017                     TMR1H           equ	23	;# 
   127     0018                     T1CON           equ	24	;# 
   128     0019                     T1GCON          equ	25	;# 
   129     001A                     TMR2            equ	26	;# 
   130     001B                     PR2             equ	27	;# 
   131     001C                     T2CON           equ	28	;# 
   132     001E                     CPSCON0         equ	30	;# 
   133     001F                     CPSCON1         equ	31	;# 
   134     008C                     TRISA           equ	140	;# 
   135     008E                     TRISC           equ	142	;# 
   136     0091                     PIE1            equ	145	;# 
   137     0092                     PIE2            equ	146	;# 
   138     0093                     PIE3            equ	147	;# 
   139     0095                     OPTION_REG      equ	149	;# 
   140     0096                     PCON            equ	150	;# 
   141     0097                     WDTCON          equ	151	;# 
   142     0098                     OSCTUNE         equ	152	;# 
   143     0099                     OSCCON          equ	153	;# 
   144     009A                     OSCSTAT         equ	154	;# 
   145     009B                     ADRES           equ	155	;# 
   146     009B                     ADRESL          equ	155	;# 
   147     009C                     ADRESH          equ	156	;# 
   148     009D                     ADCON0          equ	157	;# 
   149     009E                     ADCON1          equ	158	;# 
   150     010C                     LATA            equ	268	;# 
   151     010E                     LATC            equ	270	;# 
   152     0111                     CM1CON0         equ	273	;# 
   153     0112                     CM1CON1         equ	274	;# 
   154     0113                     CM2CON0         equ	275	;# 
   155     0114                     CM2CON1         equ	276	;# 
   156     0115                     CMOUT           equ	277	;# 
   157     0116                     BORCON          equ	278	;# 
   158     0117                     FVRCON          equ	279	;# 
   159     0118                     DACCON0         equ	280	;# 
   160     0119                     DACCON1         equ	281	;# 
   161     011A                     SRCON0          equ	282	;# 
   162     011B                     SRCON1          equ	283	;# 
   163     011D                     APFCON0         equ	285	;# 
   164     011E                     APFCON1         equ	286	;# 
   165     018C                     ANSELA          equ	396	;# 
   166     018E                     ANSELC          equ	398	;# 
   167     0191                     EEADR           equ	401	;# 
   168     0191                     EEADRL          equ	401	;# 
   169     0192                     EEADRH          equ	402	;# 
   170     0193                     EEDAT           equ	403	;# 
   171     0193                     EEDATL          equ	403	;# 
   172     0193                     EEDATA          equ	403	;# 
   173     0194                     EEDATH          equ	404	;# 
   174     0195                     EECON1          equ	405	;# 
   175     0196                     EECON2          equ	406	;# 
   176     0199                     RCREG           equ	409	;# 
   177     019A                     TXREG           equ	410	;# 
   178     019B                     SPBRG           equ	411	;# 
   179     019B                     SPBRGL          equ	411	;# 
   180     019C                     SPBRGH          equ	412	;# 
   181     019D                     RCSTA           equ	413	;# 
   182     019E                     TXSTA           equ	414	;# 
   183     019F                     BAUDCON         equ	415	;# 
   184     020C                     WPUA            equ	524	;# 
   185     020E                     WPUC            equ	526	;# 
   186     0211                     SSP1BUF         equ	529	;# 
   187     0211                     SSPBUF          equ	529	;# 
   188     0212                     SSP1ADD         equ	530	;# 
   189     0212                     SSPADD          equ	530	;# 
   190     0213                     SSP1MSK         equ	531	;# 
   191     0213                     SSPMSK          equ	531	;# 
   192     0214                     SSP1STAT        equ	532	;# 
   193     0214                     SSPSTAT         equ	532	;# 
   194     0215                     SSP1CON1        equ	533	;# 
   195     0215                     SSPCON1         equ	533	;# 
   196     0215                     SSPCON          equ	533	;# 
   197     0216                     SSP1CON2        equ	534	;# 
   198     0216                     SSPCON2         equ	534	;# 
   199     0217                     SSP1CON3        equ	535	;# 
   200     0217                     SSPCON3         equ	535	;# 
   201     0291                     CCPR1           equ	657	;# 
   202     0291                     CCPR1L          equ	657	;# 
   203     0292                     CCPR1H          equ	658	;# 
   204     0293                     CCP1CON         equ	659	;# 
   205     0294                     PWM1CON         equ	660	;# 
   206     0295                     CCP1AS          equ	661	;# 
   207     0295                     ECCP1AS         equ	661	;# 
   208     0296                     PSTR1CON        equ	662	;# 
   209     0298                     CCPR2           equ	664	;# 
   210     0298                     CCPR2L          equ	664	;# 
   211     0299                     CCPR2H          equ	665	;# 
   212     029A                     CCP2CON         equ	666	;# 
   213     029B                     PWM2CON         equ	667	;# 
   214     029C                     CCP2AS          equ	668	;# 
   215     029D                     PSTR2CON        equ	669	;# 
   216     029E                     CCPTMRS         equ	670	;# 
   217     029E                     CCPTMRS0        equ	670	;# 
   218     0311                     CCPR3           equ	785	;# 
   219     0311                     CCPR3L          equ	785	;# 
   220     0312                     CCPR3H          equ	786	;# 
   221     0313                     CCP3CON         equ	787	;# 
   222     0318                     CCPR4           equ	792	;# 
   223     0318                     CCPR4L          equ	792	;# 
   224     0319                     CCPR4H          equ	793	;# 
   225     031A                     CCP4CON         equ	794	;# 
   226     038C                     INLVLA          equ	908	;# 
   227     038E                     INLVLC          equ	910	;# 
   228     0391                     IOCAP           equ	913	;# 
   229     0392                     IOCAN           equ	914	;# 
   230     0393                     IOCAF           equ	915	;# 
   231     039A                     CLKRCON         equ	922	;# 
   232     039C                     MDCON           equ	924	;# 
   233     039D                     MDSRC           equ	925	;# 
   234     039E                     MDCARL          equ	926	;# 
   235     039F                     MDCARH          equ	927	;# 
   236     0415                     TMR4            equ	1045	;# 
   237     0416                     PR4             equ	1046	;# 
   238     0417                     T4CON           equ	1047	;# 
   239     041C                     TMR6            equ	1052	;# 
   240     041D                     PR6             equ	1053	;# 
   241     041E                     T6CON           equ	1054	;# 
   242     0FE4                     STATUS_SHAD     equ	4068	;# 
   243     0FE5                     WREG_SHAD       equ	4069	;# 
   244     0FE6                     BSR_SHAD        equ	4070	;# 
   245     0FE7                     PCLATH_SHAD     equ	4071	;# 
   246     0FE8                     FSR0L_SHAD      equ	4072	;# 
   247     0FE9                     FSR0H_SHAD      equ	4073	;# 
   248     0FEA                     FSR1L_SHAD      equ	4074	;# 
   249     0FEB                     FSR1H_SHAD      equ	4075	;# 
   250     0FED                     STKPTR          equ	4077	;# 
   251     0FEE                     TOSL            equ	4078	;# 
   252     0FEF                     TOSH            equ	4079	;# 
   253     0000                     INDF0           equ	0	;# 
   254     0001                     INDF1           equ	1	;# 
   255     0002                     PCL             equ	2	;# 
   256     0003                     STATUS          equ	3	;# 
   257     0004                     FSR0L           equ	4	;# 
   258     0005                     FSR0H           equ	5	;# 
   259     0006                     FSR1L           equ	6	;# 
   260     0007                     FSR1H           equ	7	;# 
   261     0008                     BSR             equ	8	;# 
   262     0009                     WREG            equ	9	;# 
   263     000A                     PCLATH          equ	10	;# 
   264     000B                     INTCON          equ	11	;# 
   265     000C                     PORTA           equ	12	;# 
   266     000E                     PORTC           equ	14	;# 
   267     0011                     PIR1            equ	17	;# 
   268     0012                     PIR2            equ	18	;# 
   269     0013                     PIR3            equ	19	;# 
   270     0015                     TMR0            equ	21	;# 
   271     0016                     TMR1            equ	22	;# 
   272     0016                     TMR1L           equ	22	;# 
   273     0017                     TMR1H           equ	23	;# 
   274     0018                     T1CON           equ	24	;# 
   275     0019                     T1GCON          equ	25	;# 
   276     001A                     TMR2            equ	26	;# 
   277     001B                     PR2             equ	27	;# 
   278     001C                     T2CON           equ	28	;# 
   279     001E                     CPSCON0         equ	30	;# 
   280     001F                     CPSCON1         equ	31	;# 
   281     008C                     TRISA           equ	140	;# 
   282     008E                     TRISC           equ	142	;# 
   283     0091                     PIE1            equ	145	;# 
   284     0092                     PIE2            equ	146	;# 
   285     0093                     PIE3            equ	147	;# 
   286     0095                     OPTION_REG      equ	149	;# 
   287     0096                     PCON            equ	150	;# 
   288     0097                     WDTCON          equ	151	;# 
   289     0098                     OSCTUNE         equ	152	;# 
   290     0099                     OSCCON          equ	153	;# 
   291     009A                     OSCSTAT         equ	154	;# 
   292     009B                     ADRES           equ	155	;# 
   293     009B                     ADRESL          equ	155	;# 
   294     009C                     ADRESH          equ	156	;# 
   295     009D                     ADCON0          equ	157	;# 
   296     009E                     ADCON1          equ	158	;# 
   297     010C                     LATA            equ	268	;# 
   298     010E                     LATC            equ	270	;# 
   299     0111                     CM1CON0         equ	273	;# 
   300     0112                     CM1CON1         equ	274	;# 
   301     0113                     CM2CON0         equ	275	;# 
   302     0114                     CM2CON1         equ	276	;# 
   303     0115                     CMOUT           equ	277	;# 
   304     0116                     BORCON          equ	278	;# 
   305     0117                     FVRCON          equ	279	;# 
   306     0118                     DACCON0         equ	280	;# 
   307     0119                     DACCON1         equ	281	;# 
   308     011A                     SRCON0          equ	282	;# 
   309     011B                     SRCON1          equ	283	;# 
   310     011D                     APFCON0         equ	285	;# 
   311     011E                     APFCON1         equ	286	;# 
   312     018C                     ANSELA          equ	396	;# 
   313     018E                     ANSELC          equ	398	;# 
   314     0191                     EEADR           equ	401	;# 
   315     0191                     EEADRL          equ	401	;# 
   316     0192                     EEADRH          equ	402	;# 
   317     0193                     EEDAT           equ	403	;# 
   318     0193                     EEDATL          equ	403	;# 
   319     0193                     EEDATA          equ	403	;# 
   320     0194                     EEDATH          equ	404	;# 
   321     0195                     EECON1          equ	405	;# 
   322     0196                     EECON2          equ	406	;# 
   323     0199                     RCREG           equ	409	;# 
   324     019A                     TXREG           equ	410	;# 
   325     019B                     SPBRG           equ	411	;# 
   326     019B                     SPBRGL          equ	411	;# 
   327     019C                     SPBRGH          equ	412	;# 
   328     019D                     RCSTA           equ	413	;# 
   329     019E                     TXSTA           equ	414	;# 
   330     019F                     BAUDCON         equ	415	;# 
   331     020C                     WPUA            equ	524	;# 
   332     020E                     WPUC            equ	526	;# 
   333     0211                     SSP1BUF         equ	529	;# 
   334     0211                     SSPBUF          equ	529	;# 
   335     0212                     SSP1ADD         equ	530	;# 
   336     0212                     SSPADD          equ	530	;# 
   337     0213                     SSP1MSK         equ	531	;# 
   338     0213                     SSPMSK          equ	531	;# 
   339     0214                     SSP1STAT        equ	532	;# 
   340     0214                     SSPSTAT         equ	532	;# 
   341     0215                     SSP1CON1        equ	533	;# 
   342     0215                     SSPCON1         equ	533	;# 
   343     0215                     SSPCON          equ	533	;# 
   344     0216                     SSP1CON2        equ	534	;# 
   345     0216                     SSPCON2         equ	534	;# 
   346     0217                     SSP1CON3        equ	535	;# 
   347     0217                     SSPCON3         equ	535	;# 
   348     0291                     CCPR1           equ	657	;# 
   349     0291                     CCPR1L          equ	657	;# 
   350     0292                     CCPR1H          equ	658	;# 
   351     0293                     CCP1CON         equ	659	;# 
   352     0294                     PWM1CON         equ	660	;# 
   353     0295                     CCP1AS          equ	661	;# 
   354     0295                     ECCP1AS         equ	661	;# 
   355     0296                     PSTR1CON        equ	662	;# 
   356     0298                     CCPR2           equ	664	;# 
   357     0298                     CCPR2L          equ	664	;# 
   358     0299                     CCPR2H          equ	665	;# 
   359     029A                     CCP2CON         equ	666	;# 
   360     029B                     PWM2CON         equ	667	;# 
   361     029C                     CCP2AS          equ	668	;# 
   362     029D                     PSTR2CON        equ	669	;# 
   363     029E                     CCPTMRS         equ	670	;# 
   364     029E                     CCPTMRS0        equ	670	;# 
   365     0311                     CCPR3           equ	785	;# 
   366     0311                     CCPR3L          equ	785	;# 
   367     0312                     CCPR3H          equ	786	;# 
   368     0313                     CCP3CON         equ	787	;# 
   369     0318                     CCPR4           equ	792	;# 
   370     0318                     CCPR4L          equ	792	;# 
   371     0319                     CCPR4H          equ	793	;# 
   372     031A                     CCP4CON         equ	794	;# 
   373     038C                     INLVLA          equ	908	;# 
   374     038E                     INLVLC          equ	910	;# 
   375     0391                     IOCAP           equ	913	;# 
   376     0392                     IOCAN           equ	914	;# 
   377     0393                     IOCAF           equ	915	;# 
   378     039A                     CLKRCON         equ	922	;# 
   379     039C                     MDCON           equ	924	;# 
   380     039D                     MDSRC           equ	925	;# 
   381     039E                     MDCARL          equ	926	;# 
   382     039F                     MDCARH          equ	927	;# 
   383     0415                     TMR4            equ	1045	;# 
   384     0416                     PR4             equ	1046	;# 
   385     0417                     T4CON           equ	1047	;# 
   386     041C                     TMR6            equ	1052	;# 
   387     041D                     PR6             equ	1053	;# 
   388     041E                     T6CON           equ	1054	;# 
   389     0FE4                     STATUS_SHAD     equ	4068	;# 
   390     0FE5                     WREG_SHAD       equ	4069	;# 
   391     0FE6                     BSR_SHAD        equ	4070	;# 
   392     0FE7                     PCLATH_SHAD     equ	4071	;# 
   393     0FE8                     FSR0L_SHAD      equ	4072	;# 
   394     0FE9                     FSR0H_SHAD      equ	4073	;# 
   395     0FEA                     FSR1L_SHAD      equ	4074	;# 
   396     0FEB                     FSR1H_SHAD      equ	4075	;# 
   397     0FED                     STKPTR          equ	4077	;# 
   398     0FEE                     TOSL            equ	4078	;# 
   399     0FEF                     TOSH            equ	4079	;# 
   400     0000                     INDF0           equ	0	;# 
   401     0001                     INDF1           equ	1	;# 
   402     0002                     PCL             equ	2	;# 
   403     0003                     STATUS          equ	3	;# 
   404     0004                     FSR0L           equ	4	;# 
   405     0005                     FSR0H           equ	5	;# 
   406     0006                     FSR1L           equ	6	;# 
   407     0007                     FSR1H           equ	7	;# 
   408     0008                     BSR             equ	8	;# 
   409     0009                     WREG            equ	9	;# 
   410     000A                     PCLATH          equ	10	;# 
   411     000B                     INTCON          equ	11	;# 
   412     000C                     PORTA           equ	12	;# 
   413     000E                     PORTC           equ	14	;# 
   414     0011                     PIR1            equ	17	;# 
   415     0012                     PIR2            equ	18	;# 
   416     0013                     PIR3            equ	19	;# 
   417     0015                     TMR0            equ	21	;# 
   418     0016                     TMR1            equ	22	;# 
   419     0016                     TMR1L           equ	22	;# 
   420     0017                     TMR1H           equ	23	;# 
   421     0018                     T1CON           equ	24	;# 
   422     0019                     T1GCON          equ	25	;# 
   423     001A                     TMR2            equ	26	;# 
   424     001B                     PR2             equ	27	;# 
   425     001C                     T2CON           equ	28	;# 
   426     001E                     CPSCON0         equ	30	;# 
   427     001F                     CPSCON1         equ	31	;# 
   428     008C                     TRISA           equ	140	;# 
   429     008E                     TRISC           equ	142	;# 
   430     0091                     PIE1            equ	145	;# 
   431     0092                     PIE2            equ	146	;# 
   432     0093                     PIE3            equ	147	;# 
   433     0095                     OPTION_REG      equ	149	;# 
   434     0096                     PCON            equ	150	;# 
   435     0097                     WDTCON          equ	151	;# 
   436     0098                     OSCTUNE         equ	152	;# 
   437     0099                     OSCCON          equ	153	;# 
   438     009A                     OSCSTAT         equ	154	;# 
   439     009B                     ADRES           equ	155	;# 
   440     009B                     ADRESL          equ	155	;# 
   441     009C                     ADRESH          equ	156	;# 
   442     009D                     ADCON0          equ	157	;# 
   443     009E                     ADCON1          equ	158	;# 
   444     010C                     LATA            equ	268	;# 
   445     010E                     LATC            equ	270	;# 
   446     0111                     CM1CON0         equ	273	;# 
   447     0112                     CM1CON1         equ	274	;# 
   448     0113                     CM2CON0         equ	275	;# 
   449     0114                     CM2CON1         equ	276	;# 
   450     0115                     CMOUT           equ	277	;# 
   451     0116                     BORCON          equ	278	;# 
   452     0117                     FVRCON          equ	279	;# 
   453     0118                     DACCON0         equ	280	;# 
   454     0119                     DACCON1         equ	281	;# 
   455     011A                     SRCON0          equ	282	;# 
   456     011B                     SRCON1          equ	283	;# 
   457     011D                     APFCON0         equ	285	;# 
   458     011E                     APFCON1         equ	286	;# 
   459     018C                     ANSELA          equ	396	;# 
   460     018E                     ANSELC          equ	398	;# 
   461     0191                     EEADR           equ	401	;# 
   462     0191                     EEADRL          equ	401	;# 
   463     0192                     EEADRH          equ	402	;# 
   464     0193                     EEDAT           equ	403	;# 
   465     0193                     EEDATL          equ	403	;# 
   466     0193                     EEDATA          equ	403	;# 
   467     0194                     EEDATH          equ	404	;# 
   468     0195                     EECON1          equ	405	;# 
   469     0196                     EECON2          equ	406	;# 
   470     0199                     RCREG           equ	409	;# 
   471     019A                     TXREG           equ	410	;# 
   472     019B                     SPBRG           equ	411	;# 
   473     019B                     SPBRGL          equ	411	;# 
   474     019C                     SPBRGH          equ	412	;# 
   475     019D                     RCSTA           equ	413	;# 
   476     019E                     TXSTA           equ	414	;# 
   477     019F                     BAUDCON         equ	415	;# 
   478     020C                     WPUA            equ	524	;# 
   479     020E                     WPUC            equ	526	;# 
   480     0211                     SSP1BUF         equ	529	;# 
   481     0211                     SSPBUF          equ	529	;# 
   482     0212                     SSP1ADD         equ	530	;# 
   483     0212                     SSPADD          equ	530	;# 
   484     0213                     SSP1MSK         equ	531	;# 
   485     0213                     SSPMSK          equ	531	;# 
   486     0214                     SSP1STAT        equ	532	;# 
   487     0214                     SSPSTAT         equ	532	;# 
   488     0215                     SSP1CON1        equ	533	;# 
   489     0215                     SSPCON1         equ	533	;# 
   490     0215                     SSPCON          equ	533	;# 
   491     0216                     SSP1CON2        equ	534	;# 
   492     0216                     SSPCON2         equ	534	;# 
   493     0217                     SSP1CON3        equ	535	;# 
   494     0217                     SSPCON3         equ	535	;# 
   495     0291                     CCPR1           equ	657	;# 
   496     0291                     CCPR1L          equ	657	;# 
   497     0292                     CCPR1H          equ	658	;# 
   498     0293                     CCP1CON         equ	659	;# 
   499     0294                     PWM1CON         equ	660	;# 
   500     0295                     CCP1AS          equ	661	;# 
   501     0295                     ECCP1AS         equ	661	;# 
   502     0296                     PSTR1CON        equ	662	;# 
   503     0298                     CCPR2           equ	664	;# 
   504     0298                     CCPR2L          equ	664	;# 
   505     0299                     CCPR2H          equ	665	;# 
   506     029A                     CCP2CON         equ	666	;# 
   507     029B                     PWM2CON         equ	667	;# 
   508     029C                     CCP2AS          equ	668	;# 
   509     029D                     PSTR2CON        equ	669	;# 
   510     029E                     CCPTMRS         equ	670	;# 
   511     029E                     CCPTMRS0        equ	670	;# 
   512     0311                     CCPR3           equ	785	;# 
   513     0311                     CCPR3L          equ	785	;# 
   514     0312                     CCPR3H          equ	786	;# 
   515     0313                     CCP3CON         equ	787	;# 
   516     0318                     CCPR4           equ	792	;# 
   517     0318                     CCPR4L          equ	792	;# 
   518     0319                     CCPR4H          equ	793	;# 
   519     031A                     CCP4CON         equ	794	;# 
   520     038C                     INLVLA          equ	908	;# 
   521     038E                     INLVLC          equ	910	;# 
   522     0391                     IOCAP           equ	913	;# 
   523     0392                     IOCAN           equ	914	;# 
   524     0393                     IOCAF           equ	915	;# 
   525     039A                     CLKRCON         equ	922	;# 
   526     039C                     MDCON           equ	924	;# 
   527     039D                     MDSRC           equ	925	;# 
   528     039E                     MDCARL          equ	926	;# 
   529     039F                     MDCARH          equ	927	;# 
   530     0415                     TMR4            equ	1045	;# 
   531     0416                     PR4             equ	1046	;# 
   532     0417                     T4CON           equ	1047	;# 
   533     041C                     TMR6            equ	1052	;# 
   534     041D                     PR6             equ	1053	;# 
   535     041E                     T6CON           equ	1054	;# 
   536     0FE4                     STATUS_SHAD     equ	4068	;# 
   537     0FE5                     WREG_SHAD       equ	4069	;# 
   538     0FE6                     BSR_SHAD        equ	4070	;# 
   539     0FE7                     PCLATH_SHAD     equ	4071	;# 
   540     0FE8                     FSR0L_SHAD      equ	4072	;# 
   541     0FE9                     FSR0H_SHAD      equ	4073	;# 
   542     0FEA                     FSR1L_SHAD      equ	4074	;# 
   543     0FEB                     FSR1H_SHAD      equ	4075	;# 
   544     0FED                     STKPTR          equ	4077	;# 
   545     0FEE                     TOSL            equ	4078	;# 
   546     0FEF                     TOSH            equ	4079	;# 
   547     0000                     INDF0           equ	0	;# 
   548     0001                     INDF1           equ	1	;# 
   549     0002                     PCL             equ	2	;# 
   550     0003                     STATUS          equ	3	;# 
   551     0004                     FSR0L           equ	4	;# 
   552     0005                     FSR0H           equ	5	;# 
   553     0006                     FSR1L           equ	6	;# 
   554     0007                     FSR1H           equ	7	;# 
   555     0008                     BSR             equ	8	;# 
   556     0009                     WREG            equ	9	;# 
   557     000A                     PCLATH          equ	10	;# 
   558     000B                     INTCON          equ	11	;# 
   559     000C                     PORTA           equ	12	;# 
   560     000E                     PORTC           equ	14	;# 
   561     0011                     PIR1            equ	17	;# 
   562     0012                     PIR2            equ	18	;# 
   563     0013                     PIR3            equ	19	;# 
   564     0015                     TMR0            equ	21	;# 
   565     0016                     TMR1            equ	22	;# 
   566     0016                     TMR1L           equ	22	;# 
   567     0017                     TMR1H           equ	23	;# 
   568     0018                     T1CON           equ	24	;# 
   569     0019                     T1GCON          equ	25	;# 
   570     001A                     TMR2            equ	26	;# 
   571     001B                     PR2             equ	27	;# 
   572     001C                     T2CON           equ	28	;# 
   573     001E                     CPSCON0         equ	30	;# 
   574     001F                     CPSCON1         equ	31	;# 
   575     008C                     TRISA           equ	140	;# 
   576     008E                     TRISC           equ	142	;# 
   577     0091                     PIE1            equ	145	;# 
   578     0092                     PIE2            equ	146	;# 
   579     0093                     PIE3            equ	147	;# 
   580     0095                     OPTION_REG      equ	149	;# 
   581     0096                     PCON            equ	150	;# 
   582     0097                     WDTCON          equ	151	;# 
   583     0098                     OSCTUNE         equ	152	;# 
   584     0099                     OSCCON          equ	153	;# 
   585     009A                     OSCSTAT         equ	154	;# 
   586     009B                     ADRES           equ	155	;# 
   587     009B                     ADRESL          equ	155	;# 
   588     009C                     ADRESH          equ	156	;# 
   589     009D                     ADCON0          equ	157	;# 
   590     009E                     ADCON1          equ	158	;# 
   591     010C                     LATA            equ	268	;# 
   592     010E                     LATC            equ	270	;# 
   593     0111                     CM1CON0         equ	273	;# 
   594     0112                     CM1CON1         equ	274	;# 
   595     0113                     CM2CON0         equ	275	;# 
   596     0114                     CM2CON1         equ	276	;# 
   597     0115                     CMOUT           equ	277	;# 
   598     0116                     BORCON          equ	278	;# 
   599     0117                     FVRCON          equ	279	;# 
   600     0118                     DACCON0         equ	280	;# 
   601     0119                     DACCON1         equ	281	;# 
   602     011A                     SRCON0          equ	282	;# 
   603     011B                     SRCON1          equ	283	;# 
   604     011D                     APFCON0         equ	285	;# 
   605     011E                     APFCON1         equ	286	;# 
   606     018C                     ANSELA          equ	396	;# 
   607     018E                     ANSELC          equ	398	;# 
   608     0191                     EEADR           equ	401	;# 
   609     0191                     EEADRL          equ	401	;# 
   610     0192                     EEADRH          equ	402	;# 
   611     0193                     EEDAT           equ	403	;# 
   612     0193                     EEDATL          equ	403	;# 
   613     0193                     EEDATA          equ	403	;# 
   614     0194                     EEDATH          equ	404	;# 
   615     0195                     EECON1          equ	405	;# 
   616     0196                     EECON2          equ	406	;# 
   617     0199                     RCREG           equ	409	;# 
   618     019A                     TXREG           equ	410	;# 
   619     019B                     SPBRG           equ	411	;# 
   620     019B                     SPBRGL          equ	411	;# 
   621     019C                     SPBRGH          equ	412	;# 
   622     019D                     RCSTA           equ	413	;# 
   623     019E                     TXSTA           equ	414	;# 
   624     019F                     BAUDCON         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020E                     WPUC            equ	526	;# 
   627     0211                     SSP1BUF         equ	529	;# 
   628     0211                     SSPBUF          equ	529	;# 
   629     0212                     SSP1ADD         equ	530	;# 
   630     0212                     SSPADD          equ	530	;# 
   631     0213                     SSP1MSK         equ	531	;# 
   632     0213                     SSPMSK          equ	531	;# 
   633     0214                     SSP1STAT        equ	532	;# 
   634     0214                     SSPSTAT         equ	532	;# 
   635     0215                     SSP1CON1        equ	533	;# 
   636     0215                     SSPCON1         equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0216                     SSP1CON2        equ	534	;# 
   639     0216                     SSPCON2         equ	534	;# 
   640     0217                     SSP1CON3        equ	535	;# 
   641     0217                     SSPCON3         equ	535	;# 
   642     0291                     CCPR1           equ	657	;# 
   643     0291                     CCPR1L          equ	657	;# 
   644     0292                     CCPR1H          equ	658	;# 
   645     0293                     CCP1CON         equ	659	;# 
   646     0294                     PWM1CON         equ	660	;# 
   647     0295                     CCP1AS          equ	661	;# 
   648     0295                     ECCP1AS         equ	661	;# 
   649     0296                     PSTR1CON        equ	662	;# 
   650     0298                     CCPR2           equ	664	;# 
   651     0298                     CCPR2L          equ	664	;# 
   652     0299                     CCPR2H          equ	665	;# 
   653     029A                     CCP2CON         equ	666	;# 
   654     029B                     PWM2CON         equ	667	;# 
   655     029C                     CCP2AS          equ	668	;# 
   656     029D                     PSTR2CON        equ	669	;# 
   657     029E                     CCPTMRS         equ	670	;# 
   658     029E                     CCPTMRS0        equ	670	;# 
   659     0311                     CCPR3           equ	785	;# 
   660     0311                     CCPR3L          equ	785	;# 
   661     0312                     CCPR3H          equ	786	;# 
   662     0313                     CCP3CON         equ	787	;# 
   663     0318                     CCPR4           equ	792	;# 
   664     0318                     CCPR4L          equ	792	;# 
   665     0319                     CCPR4H          equ	793	;# 
   666     031A                     CCP4CON         equ	794	;# 
   667     038C                     INLVLA          equ	908	;# 
   668     038E                     INLVLC          equ	910	;# 
   669     0391                     IOCAP           equ	913	;# 
   670     0392                     IOCAN           equ	914	;# 
   671     0393                     IOCAF           equ	915	;# 
   672     039A                     CLKRCON         equ	922	;# 
   673     039C                     MDCON           equ	924	;# 
   674     039D                     MDSRC           equ	925	;# 
   675     039E                     MDCARL          equ	926	;# 
   676     039F                     MDCARH          equ	927	;# 
   677     0415                     TMR4            equ	1045	;# 
   678     0416                     PR4             equ	1046	;# 
   679     0417                     T4CON           equ	1047	;# 
   680     041C                     TMR6            equ	1052	;# 
   681     041D                     PR6             equ	1053	;# 
   682     041E                     T6CON           equ	1054	;# 
   683     0FE4                     STATUS_SHAD     equ	4068	;# 
   684     0FE5                     WREG_SHAD       equ	4069	;# 
   685     0FE6                     BSR_SHAD        equ	4070	;# 
   686     0FE7                     PCLATH_SHAD     equ	4071	;# 
   687     0FE8                     FSR0L_SHAD      equ	4072	;# 
   688     0FE9                     FSR0H_SHAD      equ	4073	;# 
   689     0FEA                     FSR1L_SHAD      equ	4074	;# 
   690     0FEB                     FSR1H_SHAD      equ	4075	;# 
   691     0FED                     STKPTR          equ	4077	;# 
   692     0FEE                     TOSL            equ	4078	;# 
   693     0FEF                     TOSH            equ	4079	;# 
   694     0000                     INDF0           equ	0	;# 
   695     0001                     INDF1           equ	1	;# 
   696     0002                     PCL             equ	2	;# 
   697     0003                     STATUS          equ	3	;# 
   698     0004                     FSR0L           equ	4	;# 
   699     0005                     FSR0H           equ	5	;# 
   700     0006                     FSR1L           equ	6	;# 
   701     0007                     FSR1H           equ	7	;# 
   702     0008                     BSR             equ	8	;# 
   703     0009                     WREG            equ	9	;# 
   704     000A                     PCLATH          equ	10	;# 
   705     000B                     INTCON          equ	11	;# 
   706     000C                     PORTA           equ	12	;# 
   707     000E                     PORTC           equ	14	;# 
   708     0011                     PIR1            equ	17	;# 
   709     0012                     PIR2            equ	18	;# 
   710     0013                     PIR3            equ	19	;# 
   711     0015                     TMR0            equ	21	;# 
   712     0016                     TMR1            equ	22	;# 
   713     0016                     TMR1L           equ	22	;# 
   714     0017                     TMR1H           equ	23	;# 
   715     0018                     T1CON           equ	24	;# 
   716     0019                     T1GCON          equ	25	;# 
   717     001A                     TMR2            equ	26	;# 
   718     001B                     PR2             equ	27	;# 
   719     001C                     T2CON           equ	28	;# 
   720     001E                     CPSCON0         equ	30	;# 
   721     001F                     CPSCON1         equ	31	;# 
   722     008C                     TRISA           equ	140	;# 
   723     008E                     TRISC           equ	142	;# 
   724     0091                     PIE1            equ	145	;# 
   725     0092                     PIE2            equ	146	;# 
   726     0093                     PIE3            equ	147	;# 
   727     0095                     OPTION_REG      equ	149	;# 
   728     0096                     PCON            equ	150	;# 
   729     0097                     WDTCON          equ	151	;# 
   730     0098                     OSCTUNE         equ	152	;# 
   731     0099                     OSCCON          equ	153	;# 
   732     009A                     OSCSTAT         equ	154	;# 
   733     009B                     ADRES           equ	155	;# 
   734     009B                     ADRESL          equ	155	;# 
   735     009C                     ADRESH          equ	156	;# 
   736     009D                     ADCON0          equ	157	;# 
   737     009E                     ADCON1          equ	158	;# 
   738     010C                     LATA            equ	268	;# 
   739     010E                     LATC            equ	270	;# 
   740     0111                     CM1CON0         equ	273	;# 
   741     0112                     CM1CON1         equ	274	;# 
   742     0113                     CM2CON0         equ	275	;# 
   743     0114                     CM2CON1         equ	276	;# 
   744     0115                     CMOUT           equ	277	;# 
   745     0116                     BORCON          equ	278	;# 
   746     0117                     FVRCON          equ	279	;# 
   747     0118                     DACCON0         equ	280	;# 
   748     0119                     DACCON1         equ	281	;# 
   749     011A                     SRCON0          equ	282	;# 
   750     011B                     SRCON1          equ	283	;# 
   751     011D                     APFCON0         equ	285	;# 
   752     011E                     APFCON1         equ	286	;# 
   753     018C                     ANSELA          equ	396	;# 
   754     018E                     ANSELC          equ	398	;# 
   755     0191                     EEADR           equ	401	;# 
   756     0191                     EEADRL          equ	401	;# 
   757     0192                     EEADRH          equ	402	;# 
   758     0193                     EEDAT           equ	403	;# 
   759     0193                     EEDATL          equ	403	;# 
   760     0193                     EEDATA          equ	403	;# 
   761     0194                     EEDATH          equ	404	;# 
   762     0195                     EECON1          equ	405	;# 
   763     0196                     EECON2          equ	406	;# 
   764     0199                     RCREG           equ	409	;# 
   765     019A                     TXREG           equ	410	;# 
   766     019B                     SPBRG           equ	411	;# 
   767     019B                     SPBRGL          equ	411	;# 
   768     019C                     SPBRGH          equ	412	;# 
   769     019D                     RCSTA           equ	413	;# 
   770     019E                     TXSTA           equ	414	;# 
   771     019F                     BAUDCON         equ	415	;# 
   772     020C                     WPUA            equ	524	;# 
   773     020E                     WPUC            equ	526	;# 
   774     0211                     SSP1BUF         equ	529	;# 
   775     0211                     SSPBUF          equ	529	;# 
   776     0212                     SSP1ADD         equ	530	;# 
   777     0212                     SSPADD          equ	530	;# 
   778     0213                     SSP1MSK         equ	531	;# 
   779     0213                     SSPMSK          equ	531	;# 
   780     0214                     SSP1STAT        equ	532	;# 
   781     0214                     SSPSTAT         equ	532	;# 
   782     0215                     SSP1CON1        equ	533	;# 
   783     0215                     SSPCON1         equ	533	;# 
   784     0215                     SSPCON          equ	533	;# 
   785     0216                     SSP1CON2        equ	534	;# 
   786     0216                     SSPCON2         equ	534	;# 
   787     0217                     SSP1CON3        equ	535	;# 
   788     0217                     SSPCON3         equ	535	;# 
   789     0291                     CCPR1           equ	657	;# 
   790     0291                     CCPR1L          equ	657	;# 
   791     0292                     CCPR1H          equ	658	;# 
   792     0293                     CCP1CON         equ	659	;# 
   793     0294                     PWM1CON         equ	660	;# 
   794     0295                     CCP1AS          equ	661	;# 
   795     0295                     ECCP1AS         equ	661	;# 
   796     0296                     PSTR1CON        equ	662	;# 
   797     0298                     CCPR2           equ	664	;# 
   798     0298                     CCPR2L          equ	664	;# 
   799     0299                     CCPR2H          equ	665	;# 
   800     029A                     CCP2CON         equ	666	;# 
   801     029B                     PWM2CON         equ	667	;# 
   802     029C                     CCP2AS          equ	668	;# 
   803     029D                     PSTR2CON        equ	669	;# 
   804     029E                     CCPTMRS         equ	670	;# 
   805     029E                     CCPTMRS0        equ	670	;# 
   806     0311                     CCPR3           equ	785	;# 
   807     0311                     CCPR3L          equ	785	;# 
   808     0312                     CCPR3H          equ	786	;# 
   809     0313                     CCP3CON         equ	787	;# 
   810     0318                     CCPR4           equ	792	;# 
   811     0318                     CCPR4L          equ	792	;# 
   812     0319                     CCPR4H          equ	793	;# 
   813     031A                     CCP4CON         equ	794	;# 
   814     038C                     INLVLA          equ	908	;# 
   815     038E                     INLVLC          equ	910	;# 
   816     0391                     IOCAP           equ	913	;# 
   817     0392                     IOCAN           equ	914	;# 
   818     0393                     IOCAF           equ	915	;# 
   819     039A                     CLKRCON         equ	922	;# 
   820     039C                     MDCON           equ	924	;# 
   821     039D                     MDSRC           equ	925	;# 
   822     039E                     MDCARL          equ	926	;# 
   823     039F                     MDCARH          equ	927	;# 
   824     0415                     TMR4            equ	1045	;# 
   825     0416                     PR4             equ	1046	;# 
   826     0417                     T4CON           equ	1047	;# 
   827     041C                     TMR6            equ	1052	;# 
   828     041D                     PR6             equ	1053	;# 
   829     041E                     T6CON           equ	1054	;# 
   830     0FE4                     STATUS_SHAD     equ	4068	;# 
   831     0FE5                     WREG_SHAD       equ	4069	;# 
   832     0FE6                     BSR_SHAD        equ	4070	;# 
   833     0FE7                     PCLATH_SHAD     equ	4071	;# 
   834     0FE8                     FSR0L_SHAD      equ	4072	;# 
   835     0FE9                     FSR0H_SHAD      equ	4073	;# 
   836     0FEA                     FSR1L_SHAD      equ	4074	;# 
   837     0FEB                     FSR1H_SHAD      equ	4075	;# 
   838     0FED                     STKPTR          equ	4077	;# 
   839     0FEE                     TOSL            equ	4078	;# 
   840     0FEF                     TOSH            equ	4079	;# 
   841     0000                     INDF0           equ	0	;# 
   842     0001                     INDF1           equ	1	;# 
   843     0002                     PCL             equ	2	;# 
   844     0003                     STATUS          equ	3	;# 
   845     0004                     FSR0L           equ	4	;# 
   846     0005                     FSR0H           equ	5	;# 
   847     0006                     FSR1L           equ	6	;# 
   848     0007                     FSR1H           equ	7	;# 
   849     0008                     BSR             equ	8	;# 
   850     0009                     WREG            equ	9	;# 
   851     000A                     PCLATH          equ	10	;# 
   852     000B                     INTCON          equ	11	;# 
   853     000C                     PORTA           equ	12	;# 
   854     000E                     PORTC           equ	14	;# 
   855     0011                     PIR1            equ	17	;# 
   856     0012                     PIR2            equ	18	;# 
   857     0013                     PIR3            equ	19	;# 
   858     0015                     TMR0            equ	21	;# 
   859     0016                     TMR1            equ	22	;# 
   860     0016                     TMR1L           equ	22	;# 
   861     0017                     TMR1H           equ	23	;# 
   862     0018                     T1CON           equ	24	;# 
   863     0019                     T1GCON          equ	25	;# 
   864     001A                     TMR2            equ	26	;# 
   865     001B                     PR2             equ	27	;# 
   866     001C                     T2CON           equ	28	;# 
   867     001E                     CPSCON0         equ	30	;# 
   868     001F                     CPSCON1         equ	31	;# 
   869     008C                     TRISA           equ	140	;# 
   870     008E                     TRISC           equ	142	;# 
   871     0091                     PIE1            equ	145	;# 
   872     0092                     PIE2            equ	146	;# 
   873     0093                     PIE3            equ	147	;# 
   874     0095                     OPTION_REG      equ	149	;# 
   875     0096                     PCON            equ	150	;# 
   876     0097                     WDTCON          equ	151	;# 
   877     0098                     OSCTUNE         equ	152	;# 
   878     0099                     OSCCON          equ	153	;# 
   879     009A                     OSCSTAT         equ	154	;# 
   880     009B                     ADRES           equ	155	;# 
   881     009B                     ADRESL          equ	155	;# 
   882     009C                     ADRESH          equ	156	;# 
   883     009D                     ADCON0          equ	157	;# 
   884     009E                     ADCON1          equ	158	;# 
   885     010C                     LATA            equ	268	;# 
   886     010E                     LATC            equ	270	;# 
   887     0111                     CM1CON0         equ	273	;# 
   888     0112                     CM1CON1         equ	274	;# 
   889     0113                     CM2CON0         equ	275	;# 
   890     0114                     CM2CON1         equ	276	;# 
   891     0115                     CMOUT           equ	277	;# 
   892     0116                     BORCON          equ	278	;# 
   893     0117                     FVRCON          equ	279	;# 
   894     0118                     DACCON0         equ	280	;# 
   895     0119                     DACCON1         equ	281	;# 
   896     011A                     SRCON0          equ	282	;# 
   897     011B                     SRCON1          equ	283	;# 
   898     011D                     APFCON0         equ	285	;# 
   899     011E                     APFCON1         equ	286	;# 
   900     018C                     ANSELA          equ	396	;# 
   901     018E                     ANSELC          equ	398	;# 
   902     0191                     EEADR           equ	401	;# 
   903     0191                     EEADRL          equ	401	;# 
   904     0192                     EEADRH          equ	402	;# 
   905     0193                     EEDAT           equ	403	;# 
   906     0193                     EEDATL          equ	403	;# 
   907     0193                     EEDATA          equ	403	;# 
   908     0194                     EEDATH          equ	404	;# 
   909     0195                     EECON1          equ	405	;# 
   910     0196                     EECON2          equ	406	;# 
   911     0199                     RCREG           equ	409	;# 
   912     019A                     TXREG           equ	410	;# 
   913     019B                     SPBRG           equ	411	;# 
   914     019B                     SPBRGL          equ	411	;# 
   915     019C                     SPBRGH          equ	412	;# 
   916     019D                     RCSTA           equ	413	;# 
   917     019E                     TXSTA           equ	414	;# 
   918     019F                     BAUDCON         equ	415	;# 
   919     020C                     WPUA            equ	524	;# 
   920     020E                     WPUC            equ	526	;# 
   921     0211                     SSP1BUF         equ	529	;# 
   922     0211                     SSPBUF          equ	529	;# 
   923     0212                     SSP1ADD         equ	530	;# 
   924     0212                     SSPADD          equ	530	;# 
   925     0213                     SSP1MSK         equ	531	;# 
   926     0213                     SSPMSK          equ	531	;# 
   927     0214                     SSP1STAT        equ	532	;# 
   928     0214                     SSPSTAT         equ	532	;# 
   929     0215                     SSP1CON1        equ	533	;# 
   930     0215                     SSPCON1         equ	533	;# 
   931     0215                     SSPCON          equ	533	;# 
   932     0216                     SSP1CON2        equ	534	;# 
   933     0216                     SSPCON2         equ	534	;# 
   934     0217                     SSP1CON3        equ	535	;# 
   935     0217                     SSPCON3         equ	535	;# 
   936     0291                     CCPR1           equ	657	;# 
   937     0291                     CCPR1L          equ	657	;# 
   938     0292                     CCPR1H          equ	658	;# 
   939     0293                     CCP1CON         equ	659	;# 
   940     0294                     PWM1CON         equ	660	;# 
   941     0295                     CCP1AS          equ	661	;# 
   942     0295                     ECCP1AS         equ	661	;# 
   943     0296                     PSTR1CON        equ	662	;# 
   944     0298                     CCPR2           equ	664	;# 
   945     0298                     CCPR2L          equ	664	;# 
   946     0299                     CCPR2H          equ	665	;# 
   947     029A                     CCP2CON         equ	666	;# 
   948     029B                     PWM2CON         equ	667	;# 
   949     029C                     CCP2AS          equ	668	;# 
   950     029D                     PSTR2CON        equ	669	;# 
   951     029E                     CCPTMRS         equ	670	;# 
   952     029E                     CCPTMRS0        equ	670	;# 
   953     0311                     CCPR3           equ	785	;# 
   954     0311                     CCPR3L          equ	785	;# 
   955     0312                     CCPR3H          equ	786	;# 
   956     0313                     CCP3CON         equ	787	;# 
   957     0318                     CCPR4           equ	792	;# 
   958     0318                     CCPR4L          equ	792	;# 
   959     0319                     CCPR4H          equ	793	;# 
   960     031A                     CCP4CON         equ	794	;# 
   961     038C                     INLVLA          equ	908	;# 
   962     038E                     INLVLC          equ	910	;# 
   963     0391                     IOCAP           equ	913	;# 
   964     0392                     IOCAN           equ	914	;# 
   965     0393                     IOCAF           equ	915	;# 
   966     039A                     CLKRCON         equ	922	;# 
   967     039C                     MDCON           equ	924	;# 
   968     039D                     MDSRC           equ	925	;# 
   969     039E                     MDCARL          equ	926	;# 
   970     039F                     MDCARH          equ	927	;# 
   971     0415                     TMR4            equ	1045	;# 
   972     0416                     PR4             equ	1046	;# 
   973     0417                     T4CON           equ	1047	;# 
   974     041C                     TMR6            equ	1052	;# 
   975     041D                     PR6             equ	1053	;# 
   976     041E                     T6CON           equ	1054	;# 
   977     0FE4                     STATUS_SHAD     equ	4068	;# 
   978     0FE5                     WREG_SHAD       equ	4069	;# 
   979     0FE6                     BSR_SHAD        equ	4070	;# 
   980     0FE7                     PCLATH_SHAD     equ	4071	;# 
   981     0FE8                     FSR0L_SHAD      equ	4072	;# 
   982     0FE9                     FSR0H_SHAD      equ	4073	;# 
   983     0FEA                     FSR1L_SHAD      equ	4074	;# 
   984     0FEB                     FSR1H_SHAD      equ	4075	;# 
   985     0FED                     STKPTR          equ	4077	;# 
   986     0FEE                     TOSL            equ	4078	;# 
   987     0FEF                     TOSH            equ	4079	;# 
   988     0000                     INDF0           equ	0	;# 
   989     0001                     INDF1           equ	1	;# 
   990     0002                     PCL             equ	2	;# 
   991     0003                     STATUS          equ	3	;# 
   992     0004                     FSR0L           equ	4	;# 
   993     0005                     FSR0H           equ	5	;# 
   994     0006                     FSR1L           equ	6	;# 
   995     0007                     FSR1H           equ	7	;# 
   996     0008                     BSR             equ	8	;# 
   997     0009                     WREG            equ	9	;# 
   998     000A                     PCLATH          equ	10	;# 
   999     000B                     INTCON          equ	11	;# 
  1000     000C                     PORTA           equ	12	;# 
  1001     000E                     PORTC           equ	14	;# 
  1002     0011                     PIR1            equ	17	;# 
  1003     0012                     PIR2            equ	18	;# 
  1004     0013                     PIR3            equ	19	;# 
  1005     0015                     TMR0            equ	21	;# 
  1006     0016                     TMR1            equ	22	;# 
  1007     0016                     TMR1L           equ	22	;# 
  1008     0017                     TMR1H           equ	23	;# 
  1009     0018                     T1CON           equ	24	;# 
  1010     0019                     T1GCON          equ	25	;# 
  1011     001A                     TMR2            equ	26	;# 
  1012     001B                     PR2             equ	27	;# 
  1013     001C                     T2CON           equ	28	;# 
  1014     001E                     CPSCON0         equ	30	;# 
  1015     001F                     CPSCON1         equ	31	;# 
  1016     008C                     TRISA           equ	140	;# 
  1017     008E                     TRISC           equ	142	;# 
  1018     0091                     PIE1            equ	145	;# 
  1019     0092                     PIE2            equ	146	;# 
  1020     0093                     PIE3            equ	147	;# 
  1021     0095                     OPTION_REG      equ	149	;# 
  1022     0096                     PCON            equ	150	;# 
  1023     0097                     WDTCON          equ	151	;# 
  1024     0098                     OSCTUNE         equ	152	;# 
  1025     0099                     OSCCON          equ	153	;# 
  1026     009A                     OSCSTAT         equ	154	;# 
  1027     009B                     ADRES           equ	155	;# 
  1028     009B                     ADRESL          equ	155	;# 
  1029     009C                     ADRESH          equ	156	;# 
  1030     009D                     ADCON0          equ	157	;# 
  1031     009E                     ADCON1          equ	158	;# 
  1032     010C                     LATA            equ	268	;# 
  1033     010E                     LATC            equ	270	;# 
  1034     0111                     CM1CON0         equ	273	;# 
  1035     0112                     CM1CON1         equ	274	;# 
  1036     0113                     CM2CON0         equ	275	;# 
  1037     0114                     CM2CON1         equ	276	;# 
  1038     0115                     CMOUT           equ	277	;# 
  1039     0116                     BORCON          equ	278	;# 
  1040     0117                     FVRCON          equ	279	;# 
  1041     0118                     DACCON0         equ	280	;# 
  1042     0119                     DACCON1         equ	281	;# 
  1043     011A                     SRCON0          equ	282	;# 
  1044     011B                     SRCON1          equ	283	;# 
  1045     011D                     APFCON0         equ	285	;# 
  1046     011E                     APFCON1         equ	286	;# 
  1047     018C                     ANSELA          equ	396	;# 
  1048     018E                     ANSELC          equ	398	;# 
  1049     0191                     EEADR           equ	401	;# 
  1050     0191                     EEADRL          equ	401	;# 
  1051     0192                     EEADRH          equ	402	;# 
  1052     0193                     EEDAT           equ	403	;# 
  1053     0193                     EEDATL          equ	403	;# 
  1054     0193                     EEDATA          equ	403	;# 
  1055     0194                     EEDATH          equ	404	;# 
  1056     0195                     EECON1          equ	405	;# 
  1057     0196                     EECON2          equ	406	;# 
  1058     0199                     RCREG           equ	409	;# 
  1059     019A                     TXREG           equ	410	;# 
  1060     019B                     SPBRG           equ	411	;# 
  1061     019B                     SPBRGL          equ	411	;# 
  1062     019C                     SPBRGH          equ	412	;# 
  1063     019D                     RCSTA           equ	413	;# 
  1064     019E                     TXSTA           equ	414	;# 
  1065     019F                     BAUDCON         equ	415	;# 
  1066     020C                     WPUA            equ	524	;# 
  1067     020E                     WPUC            equ	526	;# 
  1068     0211                     SSP1BUF         equ	529	;# 
  1069     0211                     SSPBUF          equ	529	;# 
  1070     0212                     SSP1ADD         equ	530	;# 
  1071     0212                     SSPADD          equ	530	;# 
  1072     0213                     SSP1MSK         equ	531	;# 
  1073     0213                     SSPMSK          equ	531	;# 
  1074     0214                     SSP1STAT        equ	532	;# 
  1075     0214                     SSPSTAT         equ	532	;# 
  1076     0215                     SSP1CON1        equ	533	;# 
  1077     0215                     SSPCON1         equ	533	;# 
  1078     0215                     SSPCON          equ	533	;# 
  1079     0216                     SSP1CON2        equ	534	;# 
  1080     0216                     SSPCON2         equ	534	;# 
  1081     0217                     SSP1CON3        equ	535	;# 
  1082     0217                     SSPCON3         equ	535	;# 
  1083     0291                     CCPR1           equ	657	;# 
  1084     0291                     CCPR1L          equ	657	;# 
  1085     0292                     CCPR1H          equ	658	;# 
  1086     0293                     CCP1CON         equ	659	;# 
  1087     0294                     PWM1CON         equ	660	;# 
  1088     0295                     CCP1AS          equ	661	;# 
  1089     0295                     ECCP1AS         equ	661	;# 
  1090     0296                     PSTR1CON        equ	662	;# 
  1091     0298                     CCPR2           equ	664	;# 
  1092     0298                     CCPR2L          equ	664	;# 
  1093     0299                     CCPR2H          equ	665	;# 
  1094     029A                     CCP2CON         equ	666	;# 
  1095     029B                     PWM2CON         equ	667	;# 
  1096     029C                     CCP2AS          equ	668	;# 
  1097     029D                     PSTR2CON        equ	669	;# 
  1098     029E                     CCPTMRS         equ	670	;# 
  1099     029E                     CCPTMRS0        equ	670	;# 
  1100     0311                     CCPR3           equ	785	;# 
  1101     0311                     CCPR3L          equ	785	;# 
  1102     0312                     CCPR3H          equ	786	;# 
  1103     0313                     CCP3CON         equ	787	;# 
  1104     0318                     CCPR4           equ	792	;# 
  1105     0318                     CCPR4L          equ	792	;# 
  1106     0319                     CCPR4H          equ	793	;# 
  1107     031A                     CCP4CON         equ	794	;# 
  1108     038C                     INLVLA          equ	908	;# 
  1109     038E                     INLVLC          equ	910	;# 
  1110     0391                     IOCAP           equ	913	;# 
  1111     0392                     IOCAN           equ	914	;# 
  1112     0393                     IOCAF           equ	915	;# 
  1113     039A                     CLKRCON         equ	922	;# 
  1114     039C                     MDCON           equ	924	;# 
  1115     039D                     MDSRC           equ	925	;# 
  1116     039E                     MDCARL          equ	926	;# 
  1117     039F                     MDCARH          equ	927	;# 
  1118     0415                     TMR4            equ	1045	;# 
  1119     0416                     PR4             equ	1046	;# 
  1120     0417                     T4CON           equ	1047	;# 
  1121     041C                     TMR6            equ	1052	;# 
  1122     041D                     PR6             equ	1053	;# 
  1123     041E                     T6CON           equ	1054	;# 
  1124     0FE4                     STATUS_SHAD     equ	4068	;# 
  1125     0FE5                     WREG_SHAD       equ	4069	;# 
  1126     0FE6                     BSR_SHAD        equ	4070	;# 
  1127     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1128     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1129     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1130     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1131     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1132     0FED                     STKPTR          equ	4077	;# 
  1133     0FEE                     TOSL            equ	4078	;# 
  1134     0FEF                     TOSH            equ	4079	;# 
  1135     0000                     INDF0           equ	0	;# 
  1136     0001                     INDF1           equ	1	;# 
  1137     0002                     PCL             equ	2	;# 
  1138     0003                     STATUS          equ	3	;# 
  1139     0004                     FSR0L           equ	4	;# 
  1140     0005                     FSR0H           equ	5	;# 
  1141     0006                     FSR1L           equ	6	;# 
  1142     0007                     FSR1H           equ	7	;# 
  1143     0008                     BSR             equ	8	;# 
  1144     0009                     WREG            equ	9	;# 
  1145     000A                     PCLATH          equ	10	;# 
  1146     000B                     INTCON          equ	11	;# 
  1147     000C                     PORTA           equ	12	;# 
  1148     000E                     PORTC           equ	14	;# 
  1149     0011                     PIR1            equ	17	;# 
  1150     0012                     PIR2            equ	18	;# 
  1151     0013                     PIR3            equ	19	;# 
  1152     0015                     TMR0            equ	21	;# 
  1153     0016                     TMR1            equ	22	;# 
  1154     0016                     TMR1L           equ	22	;# 
  1155     0017                     TMR1H           equ	23	;# 
  1156     0018                     T1CON           equ	24	;# 
  1157     0019                     T1GCON          equ	25	;# 
  1158     001A                     TMR2            equ	26	;# 
  1159     001B                     PR2             equ	27	;# 
  1160     001C                     T2CON           equ	28	;# 
  1161     001E                     CPSCON0         equ	30	;# 
  1162     001F                     CPSCON1         equ	31	;# 
  1163     008C                     TRISA           equ	140	;# 
  1164     008E                     TRISC           equ	142	;# 
  1165     0091                     PIE1            equ	145	;# 
  1166     0092                     PIE2            equ	146	;# 
  1167     0093                     PIE3            equ	147	;# 
  1168     0095                     OPTION_REG      equ	149	;# 
  1169     0096                     PCON            equ	150	;# 
  1170     0097                     WDTCON          equ	151	;# 
  1171     0098                     OSCTUNE         equ	152	;# 
  1172     0099                     OSCCON          equ	153	;# 
  1173     009A                     OSCSTAT         equ	154	;# 
  1174     009B                     ADRES           equ	155	;# 
  1175     009B                     ADRESL          equ	155	;# 
  1176     009C                     ADRESH          equ	156	;# 
  1177     009D                     ADCON0          equ	157	;# 
  1178     009E                     ADCON1          equ	158	;# 
  1179     010C                     LATA            equ	268	;# 
  1180     010E                     LATC            equ	270	;# 
  1181     0111                     CM1CON0         equ	273	;# 
  1182     0112                     CM1CON1         equ	274	;# 
  1183     0113                     CM2CON0         equ	275	;# 
  1184     0114                     CM2CON1         equ	276	;# 
  1185     0115                     CMOUT           equ	277	;# 
  1186     0116                     BORCON          equ	278	;# 
  1187     0117                     FVRCON          equ	279	;# 
  1188     0118                     DACCON0         equ	280	;# 
  1189     0119                     DACCON1         equ	281	;# 
  1190     011A                     SRCON0          equ	282	;# 
  1191     011B                     SRCON1          equ	283	;# 
  1192     011D                     APFCON0         equ	285	;# 
  1193     011E                     APFCON1         equ	286	;# 
  1194     018C                     ANSELA          equ	396	;# 
  1195     018E                     ANSELC          equ	398	;# 
  1196     0191                     EEADR           equ	401	;# 
  1197     0191                     EEADRL          equ	401	;# 
  1198     0192                     EEADRH          equ	402	;# 
  1199     0193                     EEDAT           equ	403	;# 
  1200     0193                     EEDATL          equ	403	;# 
  1201     0193                     EEDATA          equ	403	;# 
  1202     0194                     EEDATH          equ	404	;# 
  1203     0195                     EECON1          equ	405	;# 
  1204     0196                     EECON2          equ	406	;# 
  1205     0199                     RCREG           equ	409	;# 
  1206     019A                     TXREG           equ	410	;# 
  1207     019B                     SPBRG           equ	411	;# 
  1208     019B                     SPBRGL          equ	411	;# 
  1209     019C                     SPBRGH          equ	412	;# 
  1210     019D                     RCSTA           equ	413	;# 
  1211     019E                     TXSTA           equ	414	;# 
  1212     019F                     BAUDCON         equ	415	;# 
  1213     020C                     WPUA            equ	524	;# 
  1214     020E                     WPUC            equ	526	;# 
  1215     0211                     SSP1BUF         equ	529	;# 
  1216     0211                     SSPBUF          equ	529	;# 
  1217     0212                     SSP1ADD         equ	530	;# 
  1218     0212                     SSPADD          equ	530	;# 
  1219     0213                     SSP1MSK         equ	531	;# 
  1220     0213                     SSPMSK          equ	531	;# 
  1221     0214                     SSP1STAT        equ	532	;# 
  1222     0214                     SSPSTAT         equ	532	;# 
  1223     0215                     SSP1CON1        equ	533	;# 
  1224     0215                     SSPCON1         equ	533	;# 
  1225     0215                     SSPCON          equ	533	;# 
  1226     0216                     SSP1CON2        equ	534	;# 
  1227     0216                     SSPCON2         equ	534	;# 
  1228     0217                     SSP1CON3        equ	535	;# 
  1229     0217                     SSPCON3         equ	535	;# 
  1230     0291                     CCPR1           equ	657	;# 
  1231     0291                     CCPR1L          equ	657	;# 
  1232     0292                     CCPR1H          equ	658	;# 
  1233     0293                     CCP1CON         equ	659	;# 
  1234     0294                     PWM1CON         equ	660	;# 
  1235     0295                     CCP1AS          equ	661	;# 
  1236     0295                     ECCP1AS         equ	661	;# 
  1237     0296                     PSTR1CON        equ	662	;# 
  1238     0298                     CCPR2           equ	664	;# 
  1239     0298                     CCPR2L          equ	664	;# 
  1240     0299                     CCPR2H          equ	665	;# 
  1241     029A                     CCP2CON         equ	666	;# 
  1242     029B                     PWM2CON         equ	667	;# 
  1243     029C                     CCP2AS          equ	668	;# 
  1244     029D                     PSTR2CON        equ	669	;# 
  1245     029E                     CCPTMRS         equ	670	;# 
  1246     029E                     CCPTMRS0        equ	670	;# 
  1247     0311                     CCPR3           equ	785	;# 
  1248     0311                     CCPR3L          equ	785	;# 
  1249     0312                     CCPR3H          equ	786	;# 
  1250     0313                     CCP3CON         equ	787	;# 
  1251     0318                     CCPR4           equ	792	;# 
  1252     0318                     CCPR4L          equ	792	;# 
  1253     0319                     CCPR4H          equ	793	;# 
  1254     031A                     CCP4CON         equ	794	;# 
  1255     038C                     INLVLA          equ	908	;# 
  1256     038E                     INLVLC          equ	910	;# 
  1257     0391                     IOCAP           equ	913	;# 
  1258     0392                     IOCAN           equ	914	;# 
  1259     0393                     IOCAF           equ	915	;# 
  1260     039A                     CLKRCON         equ	922	;# 
  1261     039C                     MDCON           equ	924	;# 
  1262     039D                     MDSRC           equ	925	;# 
  1263     039E                     MDCARL          equ	926	;# 
  1264     039F                     MDCARH          equ	927	;# 
  1265     0415                     TMR4            equ	1045	;# 
  1266     0416                     PR4             equ	1046	;# 
  1267     0417                     T4CON           equ	1047	;# 
  1268     041C                     TMR6            equ	1052	;# 
  1269     041D                     PR6             equ	1053	;# 
  1270     041E                     T6CON           equ	1054	;# 
  1271     0FE4                     STATUS_SHAD     equ	4068	;# 
  1272     0FE5                     WREG_SHAD       equ	4069	;# 
  1273     0FE6                     BSR_SHAD        equ	4070	;# 
  1274     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1275     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1276     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1277     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1278     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1279     0FED                     STKPTR          equ	4077	;# 
  1280     0FEE                     TOSL            equ	4078	;# 
  1281     0FEF                     TOSH            equ	4079	;# 
  1282     0000                     INDF0           equ	0	;# 
  1283     0001                     INDF1           equ	1	;# 
  1284     0002                     PCL             equ	2	;# 
  1285     0003                     STATUS          equ	3	;# 
  1286     0004                     FSR0L           equ	4	;# 
  1287     0005                     FSR0H           equ	5	;# 
  1288     0006                     FSR1L           equ	6	;# 
  1289     0007                     FSR1H           equ	7	;# 
  1290     0008                     BSR             equ	8	;# 
  1291     0009                     WREG            equ	9	;# 
  1292     000A                     PCLATH          equ	10	;# 
  1293     000B                     INTCON          equ	11	;# 
  1294     000C                     PORTA           equ	12	;# 
  1295     000E                     PORTC           equ	14	;# 
  1296     0011                     PIR1            equ	17	;# 
  1297     0012                     PIR2            equ	18	;# 
  1298     0013                     PIR3            equ	19	;# 
  1299     0015                     TMR0            equ	21	;# 
  1300     0016                     TMR1            equ	22	;# 
  1301     0016                     TMR1L           equ	22	;# 
  1302     0017                     TMR1H           equ	23	;# 
  1303     0018                     T1CON           equ	24	;# 
  1304     0019                     T1GCON          equ	25	;# 
  1305     001A                     TMR2            equ	26	;# 
  1306     001B                     PR2             equ	27	;# 
  1307     001C                     T2CON           equ	28	;# 
  1308     001E                     CPSCON0         equ	30	;# 
  1309     001F                     CPSCON1         equ	31	;# 
  1310     008C                     TRISA           equ	140	;# 
  1311     008E                     TRISC           equ	142	;# 
  1312     0091                     PIE1            equ	145	;# 
  1313     0092                     PIE2            equ	146	;# 
  1314     0093                     PIE3            equ	147	;# 
  1315     0095                     OPTION_REG      equ	149	;# 
  1316     0096                     PCON            equ	150	;# 
  1317     0097                     WDTCON          equ	151	;# 
  1318     0098                     OSCTUNE         equ	152	;# 
  1319     0099                     OSCCON          equ	153	;# 
  1320     009A                     OSCSTAT         equ	154	;# 
  1321     009B                     ADRES           equ	155	;# 
  1322     009B                     ADRESL          equ	155	;# 
  1323     009C                     ADRESH          equ	156	;# 
  1324     009D                     ADCON0          equ	157	;# 
  1325     009E                     ADCON1          equ	158	;# 
  1326     010C                     LATA            equ	268	;# 
  1327     010E                     LATC            equ	270	;# 
  1328     0111                     CM1CON0         equ	273	;# 
  1329     0112                     CM1CON1         equ	274	;# 
  1330     0113                     CM2CON0         equ	275	;# 
  1331     0114                     CM2CON1         equ	276	;# 
  1332     0115                     CMOUT           equ	277	;# 
  1333     0116                     BORCON          equ	278	;# 
  1334     0117                     FVRCON          equ	279	;# 
  1335     0118                     DACCON0         equ	280	;# 
  1336     0119                     DACCON1         equ	281	;# 
  1337     011A                     SRCON0          equ	282	;# 
  1338     011B                     SRCON1          equ	283	;# 
  1339     011D                     APFCON0         equ	285	;# 
  1340     011E                     APFCON1         equ	286	;# 
  1341     018C                     ANSELA          equ	396	;# 
  1342     018E                     ANSELC          equ	398	;# 
  1343     0191                     EEADR           equ	401	;# 
  1344     0191                     EEADRL          equ	401	;# 
  1345     0192                     EEADRH          equ	402	;# 
  1346     0193                     EEDAT           equ	403	;# 
  1347     0193                     EEDATL          equ	403	;# 
  1348     0193                     EEDATA          equ	403	;# 
  1349     0194                     EEDATH          equ	404	;# 
  1350     0195                     EECON1          equ	405	;# 
  1351     0196                     EECON2          equ	406	;# 
  1352     0199                     RCREG           equ	409	;# 
  1353     019A                     TXREG           equ	410	;# 
  1354     019B                     SPBRG           equ	411	;# 
  1355     019B                     SPBRGL          equ	411	;# 
  1356     019C                     SPBRGH          equ	412	;# 
  1357     019D                     RCSTA           equ	413	;# 
  1358     019E                     TXSTA           equ	414	;# 
  1359     019F                     BAUDCON         equ	415	;# 
  1360     020C                     WPUA            equ	524	;# 
  1361     020E                     WPUC            equ	526	;# 
  1362     0211                     SSP1BUF         equ	529	;# 
  1363     0211                     SSPBUF          equ	529	;# 
  1364     0212                     SSP1ADD         equ	530	;# 
  1365     0212                     SSPADD          equ	530	;# 
  1366     0213                     SSP1MSK         equ	531	;# 
  1367     0213                     SSPMSK          equ	531	;# 
  1368     0214                     SSP1STAT        equ	532	;# 
  1369     0214                     SSPSTAT         equ	532	;# 
  1370     0215                     SSP1CON1        equ	533	;# 
  1371     0215                     SSPCON1         equ	533	;# 
  1372     0215                     SSPCON          equ	533	;# 
  1373     0216                     SSP1CON2        equ	534	;# 
  1374     0216                     SSPCON2         equ	534	;# 
  1375     0217                     SSP1CON3        equ	535	;# 
  1376     0217                     SSPCON3         equ	535	;# 
  1377     0291                     CCPR1           equ	657	;# 
  1378     0291                     CCPR1L          equ	657	;# 
  1379     0292                     CCPR1H          equ	658	;# 
  1380     0293                     CCP1CON         equ	659	;# 
  1381     0294                     PWM1CON         equ	660	;# 
  1382     0295                     CCP1AS          equ	661	;# 
  1383     0295                     ECCP1AS         equ	661	;# 
  1384     0296                     PSTR1CON        equ	662	;# 
  1385     0298                     CCPR2           equ	664	;# 
  1386     0298                     CCPR2L          equ	664	;# 
  1387     0299                     CCPR2H          equ	665	;# 
  1388     029A                     CCP2CON         equ	666	;# 
  1389     029B                     PWM2CON         equ	667	;# 
  1390     029C                     CCP2AS          equ	668	;# 
  1391     029D                     PSTR2CON        equ	669	;# 
  1392     029E                     CCPTMRS         equ	670	;# 
  1393     029E                     CCPTMRS0        equ	670	;# 
  1394     0311                     CCPR3           equ	785	;# 
  1395     0311                     CCPR3L          equ	785	;# 
  1396     0312                     CCPR3H          equ	786	;# 
  1397     0313                     CCP3CON         equ	787	;# 
  1398     0318                     CCPR4           equ	792	;# 
  1399     0318                     CCPR4L          equ	792	;# 
  1400     0319                     CCPR4H          equ	793	;# 
  1401     031A                     CCP4CON         equ	794	;# 
  1402     038C                     INLVLA          equ	908	;# 
  1403     038E                     INLVLC          equ	910	;# 
  1404     0391                     IOCAP           equ	913	;# 
  1405     0392                     IOCAN           equ	914	;# 
  1406     0393                     IOCAF           equ	915	;# 
  1407     039A                     CLKRCON         equ	922	;# 
  1408     039C                     MDCON           equ	924	;# 
  1409     039D                     MDSRC           equ	925	;# 
  1410     039E                     MDCARL          equ	926	;# 
  1411     039F                     MDCARH          equ	927	;# 
  1412     0415                     TMR4            equ	1045	;# 
  1413     0416                     PR4             equ	1046	;# 
  1414     0417                     T4CON           equ	1047	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     0FE4                     STATUS_SHAD     equ	4068	;# 
  1419     0FE5                     WREG_SHAD       equ	4069	;# 
  1420     0FE6                     BSR_SHAD        equ	4070	;# 
  1421     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1422     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1423     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1424     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1425     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1426     0FED                     STKPTR          equ	4077	;# 
  1427     0FEE                     TOSL            equ	4078	;# 
  1428     0FEF                     TOSH            equ	4079	;# 
  1429     0000                     INDF0           equ	0	;# 
  1430     0001                     INDF1           equ	1	;# 
  1431     0002                     PCL             equ	2	;# 
  1432     0003                     STATUS          equ	3	;# 
  1433     0004                     FSR0L           equ	4	;# 
  1434     0005                     FSR0H           equ	5	;# 
  1435     0006                     FSR1L           equ	6	;# 
  1436     0007                     FSR1H           equ	7	;# 
  1437     0008                     BSR             equ	8	;# 
  1438     0009                     WREG            equ	9	;# 
  1439     000A                     PCLATH          equ	10	;# 
  1440     000B                     INTCON          equ	11	;# 
  1441     000C                     PORTA           equ	12	;# 
  1442     000E                     PORTC           equ	14	;# 
  1443     0011                     PIR1            equ	17	;# 
  1444     0012                     PIR2            equ	18	;# 
  1445     0013                     PIR3            equ	19	;# 
  1446     0015                     TMR0            equ	21	;# 
  1447     0016                     TMR1            equ	22	;# 
  1448     0016                     TMR1L           equ	22	;# 
  1449     0017                     TMR1H           equ	23	;# 
  1450     0018                     T1CON           equ	24	;# 
  1451     0019                     T1GCON          equ	25	;# 
  1452     001A                     TMR2            equ	26	;# 
  1453     001B                     PR2             equ	27	;# 
  1454     001C                     T2CON           equ	28	;# 
  1455     001E                     CPSCON0         equ	30	;# 
  1456     001F                     CPSCON1         equ	31	;# 
  1457     008C                     TRISA           equ	140	;# 
  1458     008E                     TRISC           equ	142	;# 
  1459     0091                     PIE1            equ	145	;# 
  1460     0092                     PIE2            equ	146	;# 
  1461     0093                     PIE3            equ	147	;# 
  1462     0095                     OPTION_REG      equ	149	;# 
  1463     0096                     PCON            equ	150	;# 
  1464     0097                     WDTCON          equ	151	;# 
  1465     0098                     OSCTUNE         equ	152	;# 
  1466     0099                     OSCCON          equ	153	;# 
  1467     009A                     OSCSTAT         equ	154	;# 
  1468     009B                     ADRES           equ	155	;# 
  1469     009B                     ADRESL          equ	155	;# 
  1470     009C                     ADRESH          equ	156	;# 
  1471     009D                     ADCON0          equ	157	;# 
  1472     009E                     ADCON1          equ	158	;# 
  1473     010C                     LATA            equ	268	;# 
  1474     010E                     LATC            equ	270	;# 
  1475     0111                     CM1CON0         equ	273	;# 
  1476     0112                     CM1CON1         equ	274	;# 
  1477     0113                     CM2CON0         equ	275	;# 
  1478     0114                     CM2CON1         equ	276	;# 
  1479     0115                     CMOUT           equ	277	;# 
  1480     0116                     BORCON          equ	278	;# 
  1481     0117                     FVRCON          equ	279	;# 
  1482     0118                     DACCON0         equ	280	;# 
  1483     0119                     DACCON1         equ	281	;# 
  1484     011A                     SRCON0          equ	282	;# 
  1485     011B                     SRCON1          equ	283	;# 
  1486     011D                     APFCON0         equ	285	;# 
  1487     011E                     APFCON1         equ	286	;# 
  1488     018C                     ANSELA          equ	396	;# 
  1489     018E                     ANSELC          equ	398	;# 
  1490     0191                     EEADR           equ	401	;# 
  1491     0191                     EEADRL          equ	401	;# 
  1492     0192                     EEADRH          equ	402	;# 
  1493     0193                     EEDAT           equ	403	;# 
  1494     0193                     EEDATL          equ	403	;# 
  1495     0193                     EEDATA          equ	403	;# 
  1496     0194                     EEDATH          equ	404	;# 
  1497     0195                     EECON1          equ	405	;# 
  1498     0196                     EECON2          equ	406	;# 
  1499     0199                     RCREG           equ	409	;# 
  1500     019A                     TXREG           equ	410	;# 
  1501     019B                     SPBRG           equ	411	;# 
  1502     019B                     SPBRGL          equ	411	;# 
  1503     019C                     SPBRGH          equ	412	;# 
  1504     019D                     RCSTA           equ	413	;# 
  1505     019E                     TXSTA           equ	414	;# 
  1506     019F                     BAUDCON         equ	415	;# 
  1507     020C                     WPUA            equ	524	;# 
  1508     020E                     WPUC            equ	526	;# 
  1509     0211                     SSP1BUF         equ	529	;# 
  1510     0211                     SSPBUF          equ	529	;# 
  1511     0212                     SSP1ADD         equ	530	;# 
  1512     0212                     SSPADD          equ	530	;# 
  1513     0213                     SSP1MSK         equ	531	;# 
  1514     0213                     SSPMSK          equ	531	;# 
  1515     0214                     SSP1STAT        equ	532	;# 
  1516     0214                     SSPSTAT         equ	532	;# 
  1517     0215                     SSP1CON1        equ	533	;# 
  1518     0215                     SSPCON1         equ	533	;# 
  1519     0215                     SSPCON          equ	533	;# 
  1520     0216                     SSP1CON2        equ	534	;# 
  1521     0216                     SSPCON2         equ	534	;# 
  1522     0217                     SSP1CON3        equ	535	;# 
  1523     0217                     SSPCON3         equ	535	;# 
  1524     0291                     CCPR1           equ	657	;# 
  1525     0291                     CCPR1L          equ	657	;# 
  1526     0292                     CCPR1H          equ	658	;# 
  1527     0293                     CCP1CON         equ	659	;# 
  1528     0294                     PWM1CON         equ	660	;# 
  1529     0295                     CCP1AS          equ	661	;# 
  1530     0295                     ECCP1AS         equ	661	;# 
  1531     0296                     PSTR1CON        equ	662	;# 
  1532     0298                     CCPR2           equ	664	;# 
  1533     0298                     CCPR2L          equ	664	;# 
  1534     0299                     CCPR2H          equ	665	;# 
  1535     029A                     CCP2CON         equ	666	;# 
  1536     029B                     PWM2CON         equ	667	;# 
  1537     029C                     CCP2AS          equ	668	;# 
  1538     029D                     PSTR2CON        equ	669	;# 
  1539     029E                     CCPTMRS         equ	670	;# 
  1540     029E                     CCPTMRS0        equ	670	;# 
  1541     0311                     CCPR3           equ	785	;# 
  1542     0311                     CCPR3L          equ	785	;# 
  1543     0312                     CCPR3H          equ	786	;# 
  1544     0313                     CCP3CON         equ	787	;# 
  1545     0318                     CCPR4           equ	792	;# 
  1546     0318                     CCPR4L          equ	792	;# 
  1547     0319                     CCPR4H          equ	793	;# 
  1548     031A                     CCP4CON         equ	794	;# 
  1549     038C                     INLVLA          equ	908	;# 
  1550     038E                     INLVLC          equ	910	;# 
  1551     0391                     IOCAP           equ	913	;# 
  1552     0392                     IOCAN           equ	914	;# 
  1553     0393                     IOCAF           equ	915	;# 
  1554     039A                     CLKRCON         equ	922	;# 
  1555     039C                     MDCON           equ	924	;# 
  1556     039D                     MDSRC           equ	925	;# 
  1557     039E                     MDCARL          equ	926	;# 
  1558     039F                     MDCARH          equ	927	;# 
  1559     0415                     TMR4            equ	1045	;# 
  1560     0416                     PR4             equ	1046	;# 
  1561     0417                     T4CON           equ	1047	;# 
  1562     041C                     TMR6            equ	1052	;# 
  1563     041D                     PR6             equ	1053	;# 
  1564     041E                     T6CON           equ	1054	;# 
  1565     0FE4                     STATUS_SHAD     equ	4068	;# 
  1566     0FE5                     WREG_SHAD       equ	4069	;# 
  1567     0FE6                     BSR_SHAD        equ	4070	;# 
  1568     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1569     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1570     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1571     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1572     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1573     0FED                     STKPTR          equ	4077	;# 
  1574     0FEE                     TOSL            equ	4078	;# 
  1575     0FEF                     TOSH            equ	4079	;# 
  1576     0000                     INDF0           equ	0	;# 
  1577     0001                     INDF1           equ	1	;# 
  1578     0002                     PCL             equ	2	;# 
  1579     0003                     STATUS          equ	3	;# 
  1580     0004                     FSR0L           equ	4	;# 
  1581     0005                     FSR0H           equ	5	;# 
  1582     0006                     FSR1L           equ	6	;# 
  1583     0007                     FSR1H           equ	7	;# 
  1584     0008                     BSR             equ	8	;# 
  1585     0009                     WREG            equ	9	;# 
  1586     000A                     PCLATH          equ	10	;# 
  1587     000B                     INTCON          equ	11	;# 
  1588     000C                     PORTA           equ	12	;# 
  1589     000E                     PORTC           equ	14	;# 
  1590     0011                     PIR1            equ	17	;# 
  1591     0012                     PIR2            equ	18	;# 
  1592     0013                     PIR3            equ	19	;# 
  1593     0015                     TMR0            equ	21	;# 
  1594     0016                     TMR1            equ	22	;# 
  1595     0016                     TMR1L           equ	22	;# 
  1596     0017                     TMR1H           equ	23	;# 
  1597     0018                     T1CON           equ	24	;# 
  1598     0019                     T1GCON          equ	25	;# 
  1599     001A                     TMR2            equ	26	;# 
  1600     001B                     PR2             equ	27	;# 
  1601     001C                     T2CON           equ	28	;# 
  1602     001E                     CPSCON0         equ	30	;# 
  1603     001F                     CPSCON1         equ	31	;# 
  1604     008C                     TRISA           equ	140	;# 
  1605     008E                     TRISC           equ	142	;# 
  1606     0091                     PIE1            equ	145	;# 
  1607     0092                     PIE2            equ	146	;# 
  1608     0093                     PIE3            equ	147	;# 
  1609     0095                     OPTION_REG      equ	149	;# 
  1610     0096                     PCON            equ	150	;# 
  1611     0097                     WDTCON          equ	151	;# 
  1612     0098                     OSCTUNE         equ	152	;# 
  1613     0099                     OSCCON          equ	153	;# 
  1614     009A                     OSCSTAT         equ	154	;# 
  1615     009B                     ADRES           equ	155	;# 
  1616     009B                     ADRESL          equ	155	;# 
  1617     009C                     ADRESH          equ	156	;# 
  1618     009D                     ADCON0          equ	157	;# 
  1619     009E                     ADCON1          equ	158	;# 
  1620     010C                     LATA            equ	268	;# 
  1621     010E                     LATC            equ	270	;# 
  1622     0111                     CM1CON0         equ	273	;# 
  1623     0112                     CM1CON1         equ	274	;# 
  1624     0113                     CM2CON0         equ	275	;# 
  1625     0114                     CM2CON1         equ	276	;# 
  1626     0115                     CMOUT           equ	277	;# 
  1627     0116                     BORCON          equ	278	;# 
  1628     0117                     FVRCON          equ	279	;# 
  1629     0118                     DACCON0         equ	280	;# 
  1630     0119                     DACCON1         equ	281	;# 
  1631     011A                     SRCON0          equ	282	;# 
  1632     011B                     SRCON1          equ	283	;# 
  1633     011D                     APFCON0         equ	285	;# 
  1634     011E                     APFCON1         equ	286	;# 
  1635     018C                     ANSELA          equ	396	;# 
  1636     018E                     ANSELC          equ	398	;# 
  1637     0191                     EEADR           equ	401	;# 
  1638     0191                     EEADRL          equ	401	;# 
  1639     0192                     EEADRH          equ	402	;# 
  1640     0193                     EEDAT           equ	403	;# 
  1641     0193                     EEDATL          equ	403	;# 
  1642     0193                     EEDATA          equ	403	;# 
  1643     0194                     EEDATH          equ	404	;# 
  1644     0195                     EECON1          equ	405	;# 
  1645     0196                     EECON2          equ	406	;# 
  1646     0199                     RCREG           equ	409	;# 
  1647     019A                     TXREG           equ	410	;# 
  1648     019B                     SPBRG           equ	411	;# 
  1649     019B                     SPBRGL          equ	411	;# 
  1650     019C                     SPBRGH          equ	412	;# 
  1651     019D                     RCSTA           equ	413	;# 
  1652     019E                     TXSTA           equ	414	;# 
  1653     019F                     BAUDCON         equ	415	;# 
  1654     020C                     WPUA            equ	524	;# 
  1655     020E                     WPUC            equ	526	;# 
  1656     0211                     SSP1BUF         equ	529	;# 
  1657     0211                     SSPBUF          equ	529	;# 
  1658     0212                     SSP1ADD         equ	530	;# 
  1659     0212                     SSPADD          equ	530	;# 
  1660     0213                     SSP1MSK         equ	531	;# 
  1661     0213                     SSPMSK          equ	531	;# 
  1662     0214                     SSP1STAT        equ	532	;# 
  1663     0214                     SSPSTAT         equ	532	;# 
  1664     0215                     SSP1CON1        equ	533	;# 
  1665     0215                     SSPCON1         equ	533	;# 
  1666     0215                     SSPCON          equ	533	;# 
  1667     0216                     SSP1CON2        equ	534	;# 
  1668     0216                     SSPCON2         equ	534	;# 
  1669     0217                     SSP1CON3        equ	535	;# 
  1670     0217                     SSPCON3         equ	535	;# 
  1671     0291                     CCPR1           equ	657	;# 
  1672     0291                     CCPR1L          equ	657	;# 
  1673     0292                     CCPR1H          equ	658	;# 
  1674     0293                     CCP1CON         equ	659	;# 
  1675     0294                     PWM1CON         equ	660	;# 
  1676     0295                     CCP1AS          equ	661	;# 
  1677     0295                     ECCP1AS         equ	661	;# 
  1678     0296                     PSTR1CON        equ	662	;# 
  1679     0298                     CCPR2           equ	664	;# 
  1680     0298                     CCPR2L          equ	664	;# 
  1681     0299                     CCPR2H          equ	665	;# 
  1682     029A                     CCP2CON         equ	666	;# 
  1683     029B                     PWM2CON         equ	667	;# 
  1684     029C                     CCP2AS          equ	668	;# 
  1685     029D                     PSTR2CON        equ	669	;# 
  1686     029E                     CCPTMRS         equ	670	;# 
  1687     029E                     CCPTMRS0        equ	670	;# 
  1688     0311                     CCPR3           equ	785	;# 
  1689     0311                     CCPR3L          equ	785	;# 
  1690     0312                     CCPR3H          equ	786	;# 
  1691     0313                     CCP3CON         equ	787	;# 
  1692     0318                     CCPR4           equ	792	;# 
  1693     0318                     CCPR4L          equ	792	;# 
  1694     0319                     CCPR4H          equ	793	;# 
  1695     031A                     CCP4CON         equ	794	;# 
  1696     038C                     INLVLA          equ	908	;# 
  1697     038E                     INLVLC          equ	910	;# 
  1698     0391                     IOCAP           equ	913	;# 
  1699     0392                     IOCAN           equ	914	;# 
  1700     0393                     IOCAF           equ	915	;# 
  1701     039A                     CLKRCON         equ	922	;# 
  1702     039C                     MDCON           equ	924	;# 
  1703     039D                     MDSRC           equ	925	;# 
  1704     039E                     MDCARL          equ	926	;# 
  1705     039F                     MDCARH          equ	927	;# 
  1706     0415                     TMR4            equ	1045	;# 
  1707     0416                     PR4             equ	1046	;# 
  1708     0417                     T4CON           equ	1047	;# 
  1709     041C                     TMR6            equ	1052	;# 
  1710     041D                     PR6             equ	1053	;# 
  1711     041E                     T6CON           equ	1054	;# 
  1712     0FE4                     STATUS_SHAD     equ	4068	;# 
  1713     0FE5                     WREG_SHAD       equ	4069	;# 
  1714     0FE6                     BSR_SHAD        equ	4070	;# 
  1715     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1716     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1717     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1718     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1719     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1720     0FED                     STKPTR          equ	4077	;# 
  1721     0FEE                     TOSL            equ	4078	;# 
  1722     0FEF                     TOSH            equ	4079	;# 
  1723     0000                     INDF0           equ	0	;# 
  1724     0001                     INDF1           equ	1	;# 
  1725     0002                     PCL             equ	2	;# 
  1726     0003                     STATUS          equ	3	;# 
  1727     0004                     FSR0L           equ	4	;# 
  1728     0005                     FSR0H           equ	5	;# 
  1729     0006                     FSR1L           equ	6	;# 
  1730     0007                     FSR1H           equ	7	;# 
  1731     0008                     BSR             equ	8	;# 
  1732     0009                     WREG            equ	9	;# 
  1733     000A                     PCLATH          equ	10	;# 
  1734     000B                     INTCON          equ	11	;# 
  1735     000C                     PORTA           equ	12	;# 
  1736     000E                     PORTC           equ	14	;# 
  1737     0011                     PIR1            equ	17	;# 
  1738     0012                     PIR2            equ	18	;# 
  1739     0013                     PIR3            equ	19	;# 
  1740     0015                     TMR0            equ	21	;# 
  1741     0016                     TMR1            equ	22	;# 
  1742     0016                     TMR1L           equ	22	;# 
  1743     0017                     TMR1H           equ	23	;# 
  1744     0018                     T1CON           equ	24	;# 
  1745     0019                     T1GCON          equ	25	;# 
  1746     001A                     TMR2            equ	26	;# 
  1747     001B                     PR2             equ	27	;# 
  1748     001C                     T2CON           equ	28	;# 
  1749     001E                     CPSCON0         equ	30	;# 
  1750     001F                     CPSCON1         equ	31	;# 
  1751     008C                     TRISA           equ	140	;# 
  1752     008E                     TRISC           equ	142	;# 
  1753     0091                     PIE1            equ	145	;# 
  1754     0092                     PIE2            equ	146	;# 
  1755     0093                     PIE3            equ	147	;# 
  1756     0095                     OPTION_REG      equ	149	;# 
  1757     0096                     PCON            equ	150	;# 
  1758     0097                     WDTCON          equ	151	;# 
  1759     0098                     OSCTUNE         equ	152	;# 
  1760     0099                     OSCCON          equ	153	;# 
  1761     009A                     OSCSTAT         equ	154	;# 
  1762     009B                     ADRES           equ	155	;# 
  1763     009B                     ADRESL          equ	155	;# 
  1764     009C                     ADRESH          equ	156	;# 
  1765     009D                     ADCON0          equ	157	;# 
  1766     009E                     ADCON1          equ	158	;# 
  1767     010C                     LATA            equ	268	;# 
  1768     010E                     LATC            equ	270	;# 
  1769     0111                     CM1CON0         equ	273	;# 
  1770     0112                     CM1CON1         equ	274	;# 
  1771     0113                     CM2CON0         equ	275	;# 
  1772     0114                     CM2CON1         equ	276	;# 
  1773     0115                     CMOUT           equ	277	;# 
  1774     0116                     BORCON          equ	278	;# 
  1775     0117                     FVRCON          equ	279	;# 
  1776     0118                     DACCON0         equ	280	;# 
  1777     0119                     DACCON1         equ	281	;# 
  1778     011A                     SRCON0          equ	282	;# 
  1779     011B                     SRCON1          equ	283	;# 
  1780     011D                     APFCON0         equ	285	;# 
  1781     011E                     APFCON1         equ	286	;# 
  1782     018C                     ANSELA          equ	396	;# 
  1783     018E                     ANSELC          equ	398	;# 
  1784     0191                     EEADR           equ	401	;# 
  1785     0191                     EEADRL          equ	401	;# 
  1786     0192                     EEADRH          equ	402	;# 
  1787     0193                     EEDAT           equ	403	;# 
  1788     0193                     EEDATL          equ	403	;# 
  1789     0193                     EEDATA          equ	403	;# 
  1790     0194                     EEDATH          equ	404	;# 
  1791     0195                     EECON1          equ	405	;# 
  1792     0196                     EECON2          equ	406	;# 
  1793     0199                     RCREG           equ	409	;# 
  1794     019A                     TXREG           equ	410	;# 
  1795     019B                     SPBRG           equ	411	;# 
  1796     019B                     SPBRGL          equ	411	;# 
  1797     019C                     SPBRGH          equ	412	;# 
  1798     019D                     RCSTA           equ	413	;# 
  1799     019E                     TXSTA           equ	414	;# 
  1800     019F                     BAUDCON         equ	415	;# 
  1801     020C                     WPUA            equ	524	;# 
  1802     020E                     WPUC            equ	526	;# 
  1803     0211                     SSP1BUF         equ	529	;# 
  1804     0211                     SSPBUF          equ	529	;# 
  1805     0212                     SSP1ADD         equ	530	;# 
  1806     0212                     SSPADD          equ	530	;# 
  1807     0213                     SSP1MSK         equ	531	;# 
  1808     0213                     SSPMSK          equ	531	;# 
  1809     0214                     SSP1STAT        equ	532	;# 
  1810     0214                     SSPSTAT         equ	532	;# 
  1811     0215                     SSP1CON1        equ	533	;# 
  1812     0215                     SSPCON1         equ	533	;# 
  1813     0215                     SSPCON          equ	533	;# 
  1814     0216                     SSP1CON2        equ	534	;# 
  1815     0216                     SSPCON2         equ	534	;# 
  1816     0217                     SSP1CON3        equ	535	;# 
  1817     0217                     SSPCON3         equ	535	;# 
  1818     0291                     CCPR1           equ	657	;# 
  1819     0291                     CCPR1L          equ	657	;# 
  1820     0292                     CCPR1H          equ	658	;# 
  1821     0293                     CCP1CON         equ	659	;# 
  1822     0294                     PWM1CON         equ	660	;# 
  1823     0295                     CCP1AS          equ	661	;# 
  1824     0295                     ECCP1AS         equ	661	;# 
  1825     0296                     PSTR1CON        equ	662	;# 
  1826     0298                     CCPR2           equ	664	;# 
  1827     0298                     CCPR2L          equ	664	;# 
  1828     0299                     CCPR2H          equ	665	;# 
  1829     029A                     CCP2CON         equ	666	;# 
  1830     029B                     PWM2CON         equ	667	;# 
  1831     029C                     CCP2AS          equ	668	;# 
  1832     029D                     PSTR2CON        equ	669	;# 
  1833     029E                     CCPTMRS         equ	670	;# 
  1834     029E                     CCPTMRS0        equ	670	;# 
  1835     0311                     CCPR3           equ	785	;# 
  1836     0311                     CCPR3L          equ	785	;# 
  1837     0312                     CCPR3H          equ	786	;# 
  1838     0313                     CCP3CON         equ	787	;# 
  1839     0318                     CCPR4           equ	792	;# 
  1840     0318                     CCPR4L          equ	792	;# 
  1841     0319                     CCPR4H          equ	793	;# 
  1842     031A                     CCP4CON         equ	794	;# 
  1843     038C                     INLVLA          equ	908	;# 
  1844     038E                     INLVLC          equ	910	;# 
  1845     0391                     IOCAP           equ	913	;# 
  1846     0392                     IOCAN           equ	914	;# 
  1847     0393                     IOCAF           equ	915	;# 
  1848     039A                     CLKRCON         equ	922	;# 
  1849     039C                     MDCON           equ	924	;# 
  1850     039D                     MDSRC           equ	925	;# 
  1851     039E                     MDCARL          equ	926	;# 
  1852     039F                     MDCARH          equ	927	;# 
  1853     0415                     TMR4            equ	1045	;# 
  1854     0416                     PR4             equ	1046	;# 
  1855     0417                     T4CON           equ	1047	;# 
  1856     041C                     TMR6            equ	1052	;# 
  1857     041D                     PR6             equ	1053	;# 
  1858     041E                     T6CON           equ	1054	;# 
  1859     0FE4                     STATUS_SHAD     equ	4068	;# 
  1860     0FE5                     WREG_SHAD       equ	4069	;# 
  1861     0FE6                     BSR_SHAD        equ	4070	;# 
  1862     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1863     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1864     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1865     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1866     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1867     0FED                     STKPTR          equ	4077	;# 
  1868     0FEE                     TOSL            equ	4078	;# 
  1869     0FEF                     TOSH            equ	4079	;_dataBuffer
  1870                           
  1871 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1872     0000                     _SPI1_Deinitialize equ	0
  1873                           
  1874 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1875     0000                     _SPI1_BufferExchange equ	0
  1876                           
  1877 ;; Function _SPI1_ByteRead is unused but had its address taken
  1878     0000                     _SPI1_ByteRead  equ	0
  1879                           
  1880 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1881     0000                     _SPI1_IsRxReady equ	0
  1882                           
  1883 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1884     0000                     _SPI1_IsTxReady equ	0
  1885                           
  1886 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1887     0000                     _INT_DefaultInterruptHandler equ	0
  1888                           
  1889 ;; Function _NVM_IsBusy is unused but had its address taken
  1890     0000                     _NVM_IsBusy     equ	0
  1891                           
  1892 ;; Function _EEPROM_ByteWrite is unused but had its address taken
  1893     0000                     _EEPROM_ByteWrite equ	0
  1894                           
  1895 ;; Function _EEPROM_ByteRead is unused but had its address taken
  1896     0000                     _EEPROM_ByteRead equ	0
  1897                           
  1898                           	psect	stringtext1
  1899     0800                     __pstringtext1:
  1900     0800                     _SPI1_Host:
  1901     0800  3473               	retlw	low _SPI1_Initialize
  1902     0801  3402               	retlw	high _SPI1_Initialize
  1903     0802  3400               	retlw	0
  1904     0803  3400               	retlw	0
  1905     0804  3480               	retlw	low _SPI1_Open
  1906     0805  3404               	retlw	high _SPI1_Open
  1907     0806  3444               	retlw	low _SPI1_Close
  1908     0807  3402               	retlw	high _SPI1_Close
  1909     0808  3400               	retlw	0
  1910     0809  3400               	retlw	0
  1911     080A  346A               	retlw	low _SPI1_BufferRead
  1912     080B  3403               	retlw	high _SPI1_BufferRead
  1913     080C  344A               	retlw	low _SPI1_BufferWrite
  1914     080D  3403               	retlw	high _SPI1_BufferWrite
  1915     080E  3488               	retlw	low _SPI1_ByteExchange
  1916     080F  3402               	retlw	high _SPI1_ByteExchange
  1917     0810  3400               	retlw	0
  1918     0811  3400               	retlw	0
  1919     0812  344A               	retlw	low _SPI1_ByteWrite
  1920     0813  3402               	retlw	high _SPI1_ByteWrite
  1921     0814  3400               	retlw	0
  1922     0815  3400               	retlw	0
  1923     0816  3400               	retlw	0
  1924     0817  3400               	retlw	0
  1925     0818  3400               	retlw	0
  1926     0819  3400               	retlw	0
  1927     081A  3400               	retlw	0
  1928     081B  3400               	retlw	0
  1929     081C                     __end_of_SPI1_Host:
  1930                           
  1931                           	psect	stringtext2
  1932     081C                     __pstringtext2:
  1933     081C                     _spi1_configuration:
  1934     081C  3400               	retlw	0
  1935     081D  341A               	retlw	26
  1936     081E  3410               	retlw	16
  1937     081F  3407               	retlw	7
  1938     0820  3400               	retlw	0
  1939     0821  3440               	retlw	64
  1940     0822  340A               	retlw	10
  1941     0823  3410               	retlw	16
  1942     0824  3407               	retlw	7
  1943     0825  3400               	retlw	0
  1944     0826  3464               	retlw	100
  1945     0827  3400               	retlw	0
  1946     0828  3410               	retlw	16
  1947     0829  3401               	retlw	1
  1948     082A  3400               	retlw	0
  1949     082B                     __end_of_spi1_configuration:
  1950                           
  1951                           	psect	stringtext3
  1952     082B                     __pstringtext3:
  1953     082B                     _eeprom_interface:
  1954     082B  3400               	retlw	0
  1955     082C  3400               	retlw	0
  1956     082D  3400               	retlw	0
  1957     082E  3400               	retlw	0
  1958     082F  3400               	retlw	0
  1959     0830  3400               	retlw	0
  1960     0831  3400               	retlw	0
  1961     0832  3400               	retlw	0
  1962     0833  3400               	retlw	0
  1963     0834  3400               	retlw	0
  1964     0835  3400               	retlw	0
  1965     0836  3400               	retlw	0
  1966     0837  3400               	retlw	0
  1967     0838  3400               	retlw	0
  1968     0839                     __end_of_eeprom_interface:
  1969                           
  1970                           	psect	stringtext4
  1971     0851                     __pstringtext4:
  1972     0851                     _acceleration_squared_threshold:
  1973     0851  34B0               	retlw	176
  1974     0852  3404               	retlw	4
  1975     0853                     __end_of_acceleration_squared_threshold:
  1976                           
  1977                           	psect	stringtext5
  1978     0839                     __pstringtext5:
  1979     0839                     _ADXL345_init_settings:
  1980     0839  3418               	retlw	24
  1981     083A  3403               	retlw	3
  1982     083B  34FF               	retlw	255
  1983     083C  347F               	retlw	127
  1984     083D  3407               	retlw	7
  1985     083E  3418               	retlw	24
  1986     083F  3400               	retlw	0
  1987     0840  3400               	retlw	0
  1988     0841  3417               	retlw	23
  1989     0842  3408               	retlw	8
  1990     0843  3404               	retlw	4
  1991     0844  3400               	retlw	0
  1992     0845                     __end_of_ADXL345_init_settings:
  1993                           
  1994                           	psect	stringtext6
  1995     0845                     __pstringtext6:
  1996     0845                     _no_motion_init:
  1997     0845  3408               	retlw	8
  1998     0846  3403               	retlw	3
  1999     0847  3402               	retlw	2
  2000     0848  34FF               	retlw	255
  2001     0849                     __end_of_no_motion_init:
  2002                           
  2003                           	psect	stringtext7
  2004     0849                     __pstringtext7:
  2005     0849                     _impact_init:
  2006     0849  3430               	retlw	48
  2007     084A  3403               	retlw	3
  2008     084B  3401               	retlw	1
  2009     084C  347F               	retlw	127
  2010     084D                     __end_of_impact_init:
  2011                           
  2012                           	psect	stringtext8
  2013     084D                     __pstringtext8:
  2014     084D                     _fall_init:
  2015     084D  3418               	retlw	24
  2016     084E  3403               	retlw	3
  2017     084F  34FF               	retlw	255
  2018     0850  347F               	retlw	127
  2019     0851                     __end_of_fall_init:
  2020                           
  2021                           	psect	nvBANK0
  2022     0059                     __pnvBANK0:
  2023     0059                     _SW1_InterruptHandler:
  2024     0059                     	ds	2
  2025     005B                     _INT_InterruptHandler:
  2026     005B                     	ds	2
  2027     000C                     _PORTAbits      set	12
  2028     000B                     _INTCONbits     set	11
  2029     0011                     _PIR1bits       set	17
  2030     0097                     _WDTCON         set	151
  2031     0098                     _OSCTUNE        set	152
  2032     0099                     _OSCCON         set	153
  2033     008E                     _TRISC          set	142
  2034     008C                     _TRISA          set	140
  2035     0095                     _OPTION_REGbits set	149
  2036     0091                     _PIE1bits       set	145
  2037     010E                     _LATCbits       set	270
  2038     0116                     _BORCON         set	278
  2039     010C                     _LATAbits       set	268
  2040     011D                     _APFCON0        set	285
  2041     010E                     _LATC           set	270
  2042     010C                     _LATA           set	268
  2043     0196                     _EECON2         set	406
  2044     0193                     _EEDATL         set	403
  2045     0194                     _EEDATH         set	404
  2046     0191                     _EEADRL         set	401
  2047     0192                     _EEADRH         set	402
  2048     0195                     _EECON1bits     set	405
  2049     018E                     _ANSELC         set	398
  2050     018C                     _ANSELA         set	396
  2051     0CAD                     _LWLO           set	3245
  2052     020E                     _WPUC           set	526
  2053     020C                     _WPUA           set	524
  2054     0211                     _SSP1BUF        set	529
  2055     0215                     _SSP1CON1bits   set	533
  2056     0212                     _SSP1ADD        set	530
  2057     0217                     _SSP1CON3       set	535
  2058     0215                     _SSP1CON1       set	533
  2059     0214                     _SSP1STAT       set	532
  2060     0393                     _IOCAFbits      set	915
  2061     0393                     _IOCAF          set	915
  2062     0392                     _IOCAN          set	914
  2063     0391                     _IOCAP          set	913
  2064     038E                     _INLVLC         set	910
  2065     038C                     _INLVLA         set	908
  2066                           
  2067                           	psect	cinit
  2068     07E5                     start_initialization:	
  2069                           ; #config settings
  2070                           
  2071     07E5                     __initialization:	;BIGRAM
  2072                           
  2073                           ; Clear objects allocated to BIGRAM
  2074     07E5  30F0               	movlw	low (0+8944)
  2075     07E6  0084               	movwf	4
  2076     07E7  3022               	movlw	high (0+8944)
  2077     07E8  0085               	movwf	5
  2078     07E9  3000               	movlw	0
  2079     07EA  00FE               	movwf	btemp
  2080     07EB  3001               	movlw	1
  2081     07EC  00FF               	movwf	btemp+1
  2082     07ED  3182  2294  3187   	fcall	clear_ram0
  2083                           
  2084                           ; Clear objects allocated to COMMON
  2085     07F0  01FC               	clrf	__pbssCOMMON& (0+127)
  2086     07F1  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2087                           
  2088                           ; Clear objects allocated to BANK0
  2089     07F2  304E               	movlw	low __pbssBANK0
  2090     07F3  0084               	movwf	4
  2091     07F4  3000               	movlw	high __pbssBANK0
  2092     07F5  0085               	movwf	5
  2093     07F6  300B               	movlw	11
  2094     07F7  00FE               	movwf	btemp
  2095     07F8  3000               	movlw	0
  2096     07F9  00FF               	movwf	btemp+1
  2097     07FA  3182  2294  3187   	fcall	clear_ram0
  2098     07FD                     end_of_initialization:	
  2099                           ;End of C runtime variable initialization code
  2100                           
  2101     07FD                     __end_of__initialization:
  2102     07FD  0020               	movlb	0
  2103     07FE  3183  2BD6         	ljmp	_main	;jump to C main() function
  2104                           
  2105                           	psect	bssCOMMON
  2106     007C                     __pbssCOMMON:
  2107     007C                     _unlockKeyHigh:
  2108     007C                     	ds	1
  2109     007D                     _unlockKeyLow:
  2110     007D                     	ds	1
  2111                           
  2112                           	psect	bssBANK0
  2113     004E                     __pbssBANK0:
  2114     004E                     orientation_Up@F2709:
  2115     004E                     	ds	6
  2116     0054                     _orientation_check_timer_20ms:
  2117     0054                     	ds	2
  2118     0056                     _timer_20ms:
  2119     0056                     	ds	2
  2120     0058                     _good_orientation_count:
  2121     0058                     	ds	1
  2122                           
  2123                           	psect	clrtext
  2124     0294                     clear_ram0:	
  2125                           ;	Called with FSR0 containing the base address, and
  2126                           ;	btemp/btemp+1 has the size to clear
  2127                           
  2128     0294  0064               	clrwdt	;clear the watchdog before getting into this loop
  2129     0295                     clrloop0:
  2130     0295  0180               	clrf	0	;clear RAM location pointed to by FSR
  2131     0296  3101               	addfsr 0,1
  2132     0297  3001               	movlw	1
  2133     0298  02FE               	subwf	btemp,f
  2134     0299  3000               	movlw	0
  2135     029A  3BFF               	subwfb	btemp+1,f
  2136     029B  087F               	movf	btemp+1,w
  2137     029C  047E               	iorwf	btemp,w
  2138     029D  1D03               	skipz
  2139     029E  2A95               	goto	clrloop0	;have we reached the end yet?
  2140     029F  3400               	retlw	0	;all done for this memory range, return
  2141                           
  2142                           	psect	cstackCOMMON
  2143     0070                     __pcstackCOMMON:
  2144     0070                     ?_SPI1_Initialize:
  2145     0070                     ?_SPI1_Close:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?_SPI1_BufferRead:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ?_SPI1_BufferWrite:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     ?_SPI1_ByteExchange:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157     0070                     ?_SPI1_ByteWrite:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     ?_INT_SetInterruptHandler:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163     0070                     ?_SW1_SetInterruptHandler:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166     0070                     ?_SW1_DefaultInterruptHandler:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169     0070                     ?_SW1_ISR:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172     0070                     ?_NVM_Initialize:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175     0070                     ?_WDT_Initialize:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178     0070                     ?_ADXL345_validation:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181     0070                     ?_ADXL345_init:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184     0070                     ?_NVM_StatusClear:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187     0070                     ?_INTERRUPT_Initialize:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190     0070                     ?_PIN_MANAGER_Initialize:	
  2191                           ; 1 bytes @ 0x0
  2192                           
  2193     0070                     ?_PIN_MANAGER_IOC:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196     0070                     ?_CLOCK_Initialize:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199     0070                     ?_SYSTEM_Initialize:	
  2200                           ; 1 bytes @ 0x0
  2201                           
  2202     0070                     ?_ADXL345_ClearInterrupt:	
  2203                           ; 1 bytes @ 0x0
  2204                           
  2205     0070                     ?_setupForFreefall:	
  2206                           ; 1 bytes @ 0x0
  2207                           
  2208     0070                     ?_setupForImpact:	
  2209                           ; 1 bytes @ 0x0
  2210                           
  2211     0070                     ?_setupForInactivity:	
  2212                           ; 1 bytes @ 0x0
  2213                           
  2214     0070                     ?_orientation_Up:	
  2215                           ; 1 bytes @ 0x0
  2216                           
  2217     0070                     ?_memset:	
  2218                           ; 1 bytes @ 0x0
  2219                           
  2220     0070                     ?_memcpy:	
  2221                           ; 2 bytes @ 0x0
  2222                           
  2223     0070                     ?_main:	
  2224                           ; 2 bytes @ 0x0
  2225                           
  2226     0070                     ?___wmul:	
  2227                           ; 2 bytes @ 0x0
  2228                           
  2229     0070                     SPI1_BufferRead@bufferData:	
  2230                           ; 2 bytes @ 0x0
  2231                           
  2232     0070                     SPI1_ByteExchange@byteData:	
  2233                           ; 1 bytes @ 0x0
  2234                           
  2235     0070                     SPI1_ByteWrite@byteData:	
  2236                           ; 1 bytes @ 0x0
  2237                           
  2238     0070                     SPI1_BufferWrite@bufferData:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241     0070                     INT_SetInterruptHandler@InterruptHandler:	
  2242                           ; 2 bytes @ 0x0
  2243                           
  2244     0070                     SW1_SetInterruptHandler@InterruptHandler:	
  2245                           ; 2 bytes @ 0x0
  2246                           
  2247     0070                     ___wmul@multiplier:	
  2248                           ; 2 bytes @ 0x0
  2249                           
  2250     0070                     memcpy@d1:	
  2251                           ; 2 bytes @ 0x0
  2252                           
  2253     0070                     memset@dest:	
  2254                           ; 2 bytes @ 0x0
  2255                           
  2256     0070                     ??_SPI1_Initialize:	
  2257                           ; 2 bytes @ 0x0
  2258                           
  2259     0070                     ??_SPI1_Close:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262     0070                     ??_SW1_DefaultInterruptHandler:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265     0070                     ??_NVM_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268     0070                     ??_WDT_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271     0070                     ??_NVM_StatusClear:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274     0070                     ??_CLOCK_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277                           
  2278                           ; 1 bytes @ 0x0
  2279     0070                     	ds	1
  2280     0071                     SPI1_BufferRead@bufferSize:
  2281     0071                     ??_SPI1_ByteExchange:	
  2282                           ; 2 bytes @ 0x1
  2283                           
  2284     0071                     ??_SPI1_ByteWrite:	
  2285                           ; 1 bytes @ 0x1
  2286                           
  2287     0071                     ??_SW1_ISR:	
  2288                           ; 1 bytes @ 0x1
  2289                           
  2290     0071                     ??_PIN_MANAGER_IOC:	
  2291                           ; 1 bytes @ 0x1
  2292                           
  2293                           
  2294                           ; 1 bytes @ 0x1
  2295     0071                     	ds	1
  2296     0072                     SPI1_BufferWrite@bufferSize:
  2297     0072                     ___wmul@multiplicand:	
  2298                           ; 2 bytes @ 0x2
  2299                           
  2300     0072                     memcpy@s1:	
  2301                           ; 2 bytes @ 0x2
  2302                           
  2303     0072                     memset@c:	
  2304                           ; 2 bytes @ 0x2
  2305                           
  2306     0072                     ??_INT_SetInterruptHandler:	
  2307                           ; 2 bytes @ 0x2
  2308                           
  2309     0072                     ??_SW1_SetInterruptHandler:	
  2310                           ; 1 bytes @ 0x2
  2311                           
  2312     0072                     ??_INTERRUPT_Initialize:	
  2313                           ; 1 bytes @ 0x2
  2314                           
  2315     0072                     ??_PIN_MANAGER_Initialize:	
  2316                           ; 1 bytes @ 0x2
  2317                           
  2318     0072                     ??_SYSTEM_Initialize:	
  2319                           ; 1 bytes @ 0x2
  2320                           
  2321                           
  2322                           ; 1 bytes @ 0x2
  2323     0072                     	ds	1
  2324     0073                     SPI1_BufferRead@bufferInputSize:
  2325     0073                     ??_SPI1_BufferRead:	
  2326                           ; 2 bytes @ 0x3
  2327                           
  2328                           
  2329                           ; 1 bytes @ 0x3
  2330     0073                     	ds	1
  2331     0074                     SPI1_BufferWrite@bufferInputSize:
  2332     0074                     ___wmul@product:	
  2333                           ; 2 bytes @ 0x4
  2334                           
  2335     0074                     memcpy@n:	
  2336                           ; 2 bytes @ 0x4
  2337                           
  2338     0074                     memset@n:	
  2339                           ; 2 bytes @ 0x4
  2340                           
  2341     0074                     ??_SPI1_BufferWrite:	
  2342                           ; 2 bytes @ 0x4
  2343                           
  2344     0074                     ??___wmul:	
  2345                           ; 1 bytes @ 0x4
  2346                           
  2347                           
  2348                           ; 1 bytes @ 0x4
  2349     0074                     	ds	1
  2350     0075                     SPI1_BufferRead@bufferInput:
  2351                           
  2352                           ; 1 bytes @ 0x5
  2353     0075                     	ds	1
  2354     0076                     ?_SPI1_Open:
  2355     0076                     SPI1_Open@spiConfigIndex:	
  2356                           ; 1 bytes @ 0x6
  2357                           
  2358     0076                     SPI1_BufferWrite@bufferInput:	
  2359                           ; 1 bytes @ 0x6
  2360                           
  2361     0076                     memset@p:	
  2362                           ; 1 bytes @ 0x6
  2363                           
  2364     0076                     memcpy@s:	
  2365                           ; 1 bytes @ 0x6
  2366                           
  2367     0076                     ??_memset:	
  2368                           ; 2 bytes @ 0x6
  2369                           
  2370     0076                     ??_memcpy:	
  2371                           ; 1 bytes @ 0x6
  2372                           
  2373                           
  2374                           ; 1 bytes @ 0x6
  2375     0076                     	ds	1
  2376     0077                     ??_SPI1_Open:
  2377                           
  2378                           ; 1 bytes @ 0x7
  2379     0077                     	ds	1
  2380     0078                     memcpy@tmp:
  2381                           
  2382                           ; 1 bytes @ 0x8
  2383     0078                     	ds	1
  2384     0079                     SPI1_Open@returnValue:
  2385     0079                     memcpy@d:	
  2386                           ; 1 bytes @ 0x9
  2387                           
  2388                           
  2389                           ; 1 bytes @ 0x9
  2390     0079                     	ds	1
  2391     007A                     ADXL345_validation@passed:
  2392     007A                     ??_ADXL345_validation:	
  2393                           ; 1 bytes @ 0xA
  2394                           
  2395     007A                     ??_ADXL345_init:	
  2396                           ; 1 bytes @ 0xA
  2397                           
  2398     007A                     ??_ADXL345_ClearInterrupt:	
  2399                           ; 1 bytes @ 0xA
  2400                           
  2401     007A                     ??_setupForFreefall:	
  2402                           ; 1 bytes @ 0xA
  2403                           
  2404     007A                     ??_setupForImpact:	
  2405                           ; 1 bytes @ 0xA
  2406                           
  2407     007A                     ??_setupForInactivity:	
  2408                           ; 1 bytes @ 0xA
  2409                           
  2410     007A                     ??_orientation_Up:	
  2411                           ; 1 bytes @ 0xA
  2412                           
  2413                           
  2414                           ; 1 bytes @ 0xA
  2415     007A                     	ds	2
  2416                           
  2417                           	psect	cstackBANK0
  2418     0020                     __pcstackBANK0:
  2419     0020                     orientation_Up@acc_data:
  2420     0020                     ADXL345_init@msg:	
  2421                           ; 6 bytes @ 0x0
  2422                           
  2423     0020                     setupForFreefall@msg:	
  2424                           ; 26 bytes @ 0x0
  2425                           
  2426     0020                     setupForImpact@msg:	
  2427                           ; 26 bytes @ 0x0
  2428                           
  2429     0020                     setupForInactivity@msg:	
  2430                           ; 26 bytes @ 0x0
  2431                           
  2432                           
  2433                           ; 26 bytes @ 0x0
  2434     0020                     	ds	6
  2435     0026                     orientation_Up@g_magnitude:
  2436                           
  2437                           ; 2 bytes @ 0x6
  2438     0026                     	ds	2
  2439     0028                     orientation_Up@msg:
  2440                           
  2441                           ; 26 bytes @ 0x8
  2442     0028                     	ds	26
  2443     0042                     orientation_Up@g_deltaX:
  2444                           
  2445                           ; 2 bytes @ 0x22
  2446     0042                     	ds	2
  2447     0044                     orientation_Up@g_deltaY:
  2448                           
  2449                           ; 2 bytes @ 0x24
  2450     0044                     	ds	2
  2451     0046                     orientation_Up@g_deltaZ:
  2452                           
  2453                           ; 2 bytes @ 0x26
  2454     0046                     	ds	2
  2455     0048                     ?_MotionEventHandler:
  2456     0048                     MotionEventHandler@state:	
  2457                           ; 1 bytes @ 0x28
  2458                           
  2459                           
  2460                           ; 1 bytes @ 0x28
  2461     0048                     	ds	1
  2462     0049                     ??_MotionEventHandler:
  2463                           
  2464                           ; 1 bytes @ 0x29
  2465     0049                     	ds	2
  2466     004B                     ??_main:
  2467                           
  2468                           ; 1 bytes @ 0x2B
  2469     004B                     	ds	2
  2470     004D                     main@current_state:
  2471                           
  2472                           ; 1 bytes @ 0x2D
  2473     004D                     	ds	1
  2474                           
  2475                           	psect	maintext
  2476     03D6                     __pmaintext:	
  2477 ;;
  2478 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2479 ;;
  2480 ;; *************** function _main *****************
  2481 ;; Defined at:
  2482 ;;		line 45 in file "main.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  current_stat    1   45[BANK0 ] enum E2687
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2  259[None  ] int 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : B1F/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels required when called: 4
  2502 ;; This function calls:
  2503 ;;		_ADXL345_init
  2504 ;;		_ADXL345_validation
  2505 ;;		_MotionEventHandler
  2506 ;;		_PIN_MANAGER_IOC
  2507 ;;		_SPI1_Initialize
  2508 ;;		_SYSTEM_Initialize
  2509 ;; This function is called by:
  2510 ;;		Startup code after reset
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514     03D6                     _main:	
  2515                           ;psect for function _main
  2516                           
  2517     03D6                     l2577:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2520                           
  2521                           
  2522                           ;main.c: 47:     SYSTEM_Initialize();
  2523     03D6  3182  22AF  3183   	fcall	_SYSTEM_Initialize
  2524     03D9                     l2579:
  2525                           
  2526                           ;main.c: 48:     SPI1_Initialize();
  2527     03D9  3182  2273  3183   	fcall	_SPI1_Initialize
  2528     03DC                     l2581:
  2529     03DC  0022               	movlb	2	; select bank2
  2530     03DD  160E               	bsf	14,4	;volatile
  2531     03DE                     l2583:
  2532     03DE  158E               	bsf	14,3	;volatile
  2533     03DF                     l2585:
  2534                           
  2535                           ;main.c: 53:     if (ADXL345_validation()) {
  2536     03DF  3183  230D  3183   	fcall	_ADXL345_validation
  2537     03E2  3A00               	xorlw	0
  2538     03E3  1903               	skipnz
  2539     03E4  2BE6               	goto	u831
  2540     03E5  2BE7               	goto	u830
  2541     03E6                     u831:
  2542     03E6  2BF9               	goto	l270
  2543     03E7                     u830:
  2544     03E7                     l265:	
  2545                           ;main.c: 54:         do { LATAbits.LATA4 = 1; } while(0);
  2546                           
  2547     03E7  0022               	movlb	2	; select bank2
  2548     03E8  160C               	bsf	12,4	;volatile
  2549     03E9                     l2587:
  2550                           
  2551                           ;main.c: 55:         _delay((unsigned long)((250)*(4000000/4000.0)));
  2552     03E9  3002               	movlw	2
  2553     03EA  0020               	movlb	0	; select bank0
  2554     03EB  00CC               	movwf	??_main+1
  2555     03EC  3045               	movlw	69
  2556     03ED  00CB               	movwf	??_main
  2557     03EE  30A9               	movlw	169
  2558     03EF                     u877:
  2559     03EF  0B89               	decfsz	9,f
  2560     03F0  2BEF               	goto	u877
  2561     03F1  0BCB               	decfsz	??_main,f
  2562     03F2  2BEF               	goto	u877
  2563     03F3  0BCC               	decfsz	??_main+1,f
  2564     03F4  2BEF               	goto	u877
  2565     03F5  3200               	nop2
  2566     03F6                     l2589:
  2567     03F6  0022               	movlb	2	; select bank2
  2568     03F7  120C               	bcf	12,4	;volatile
  2569     03F8  2C0A               	goto	l2595
  2570     03F9                     l270:	
  2571                           ;main.c: 58:         do { LATAbits.LATA5 = 1; } while(0);
  2572                           
  2573     03F9  0022               	movlb	2	; select bank2
  2574     03FA  168C               	bsf	12,5	;volatile
  2575     03FB                     l2591:
  2576                           
  2577                           ;main.c: 59:         _delay((unsigned long)((250)*(4000000/4000.0)));
  2578     03FB  3002               	movlw	2
  2579     03FC  0020               	movlb	0	; select bank0
  2580     03FD  00CC               	movwf	??_main+1
  2581     03FE  3045               	movlw	69
  2582     03FF  00CB               	movwf	??_main
  2583     0400  30A9               	movlw	169
  2584     0401                     u887:
  2585     0401  0B89               	decfsz	9,f
  2586     0402  2C01               	goto	u887
  2587     0403  0BCB               	decfsz	??_main,f
  2588     0404  2C01               	goto	u887
  2589     0405  0BCC               	decfsz	??_main+1,f
  2590     0406  2C01               	goto	u887
  2591     0407  3200               	nop2
  2592     0408                     l2593:
  2593     0408  0022               	movlb	2	; select bank2
  2594     0409  128C               	bcf	12,5	;volatile
  2595     040A                     l2595:
  2596                           
  2597                           ;main.c: 63:     ADXL345_init();
  2598     040A  3184  241D  3183   	fcall	_ADXL345_init
  2599     040D                     l2597:
  2600                           
  2601                           ;main.c: 64:     State_t current_state = WAITING_FOR_FREEFALL;
  2602     040D  0020               	movlb	0	; select bank0
  2603     040E  01CD               	clrf	main@current_state
  2604     040F                     l2599:
  2605                           
  2606                           ;main.c: 67:     {;main.c: 68:         PIN_MANAGER_IOC();
  2607     040F  3182  226A  3183   	fcall	_PIN_MANAGER_IOC
  2608     0412                     l2601:
  2609                           
  2610                           ;main.c: 69:         MotionEventHandler(&current_state);
  2611     0412  304D               	movlw	(low (main@current_state| 0))& (0+255)
  2612     0413  0020               	movlb	0	; select bank0
  2613     0414  00C8               	movwf	MotionEventHandler@state
  2614     0415  3184  24EC  3183   	fcall	_MotionEventHandler
  2615     0418  0063               	sleep	;# 
  2616     0419                     l2603:
  2617                           
  2618                           ;main.c: 71:         __nop();
  2619     0419  0000               	nop
  2620     041A  2C0F               	goto	l2599
  2621     041B  3180  2802         	ljmp	start
  2622     041D                     __end_of_main:
  2623                           
  2624                           	psect	text1
  2625     02AF                     __ptext1:	
  2626 ;; *************** function _SYSTEM_Initialize *****************
  2627 ;; Defined at:
  2628 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 2
  2649 ;; This function calls:
  2650 ;;		_CLOCK_Initialize
  2651 ;;		_INTERRUPT_Initialize
  2652 ;;		_NVM_Initialize
  2653 ;;		_PIN_MANAGER_Initialize
  2654 ;;		_SPI1_Initialize
  2655 ;;		_WDT_Initialize
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     02AF                     _SYSTEM_Initialize:	
  2662                           ;psect for function _SYSTEM_Initialize
  2663                           
  2664     02AF                     l2443:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2667                           
  2668                           
  2669                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  2670     02AF  3182  2262  3182   	fcall	_CLOCK_Initialize
  2671     02B2                     l2445:
  2672                           
  2673                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  2674     02B2  3183  23B1  3182   	fcall	_PIN_MANAGER_Initialize
  2675     02B5                     l2447:
  2676                           
  2677                           ;mcc_generated_files/system/src/system.c: 43:     NVM_Initialize();
  2678     02B5  3182  224E  3182   	fcall	_NVM_Initialize
  2679     02B8                     l2449:
  2680                           
  2681                           ;mcc_generated_files/system/src/system.c: 44:     SPI1_Initialize();
  2682     02B8  3182  2273  3182   	fcall	_SPI1_Initialize
  2683     02BB                     l2451:
  2684                           
  2685                           ;mcc_generated_files/system/src/system.c: 45:     WDT_Initialize();
  2686     02BB  3182  2252  3182   	fcall	_WDT_Initialize
  2687                           
  2688                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2689     02BE  3182  227D  3182   	fcall	_INTERRUPT_Initialize
  2690     02C1                     l228:
  2691     02C1  0008               	return
  2692     02C2                     __end_of_SYSTEM_Initialize:
  2693                           
  2694                           	psect	text2
  2695     0252                     __ptext2:	
  2696 ;; *************** function _WDT_Initialize *****************
  2697 ;; Defined at:
  2698 ;;		line 36 in file "mcc_generated_files/system/src/watchdog.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		None
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_SYSTEM_Initialize
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     0252                     _WDT_Initialize:	
  2726                           ;psect for function _WDT_Initialize
  2727                           
  2728     0252                     l2207:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _WDT_Initialize: []
  2731                           
  2732                           
  2733                           ;mcc_generated_files/system/src/watchdog.c: 39:     WDTCON = 0x19;
  2734     0252  3019               	movlw	25
  2735     0253  0021               	movlb	1	; select bank1
  2736     0254  0097               	movwf	23	;volatile
  2737     0255                     l233:
  2738     0255  0008               	return
  2739     0256                     __end_of_WDT_Initialize:
  2740                           
  2741                           	psect	text3
  2742     0273                     __ptext3:	
  2743 ;; *************** function _SPI1_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 61 in file "mcc_generated_files/spi/src/mssp.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		status,2
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_SYSTEM_Initialize
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773     0273                     _SPI1_Initialize:	
  2774                           ;psect for function _SPI1_Initialize
  2775                           
  2776     0273                     l2169:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _SPI1_Initialize: [status,2]
  2779                           
  2780                           
  2781                           ;mcc_generated_files/spi/src/mssp.c: 64:     PIE1bits.SSP1IE = 0;
  2782     0273  0021               	movlb	1	; select bank1
  2783     0274  1191               	bcf	17,3	;volatile
  2784                           
  2785                           ;mcc_generated_files/spi/src/mssp.c: 65:     PIR1bits.SSP1IF = 0;
  2786     0275  0020               	movlb	0	; select bank0
  2787     0276  1191               	bcf	17,3	;volatile
  2788     0277                     l2171:
  2789                           
  2790                           ;mcc_generated_files/spi/src/mssp.c: 67:     SSP1STAT = 0x00;
  2791     0277  0024               	movlb	4	; select bank4
  2792     0278  0194               	clrf	20	;volatile
  2793                           
  2794                           ;mcc_generated_files/spi/src/mssp.c: 68:     SSP1CON1 = 0x00;
  2795     0279  0195               	clrf	21	;volatile
  2796                           
  2797                           ;mcc_generated_files/spi/src/mssp.c: 69:     SSP1CON3 = 0x00;
  2798     027A  0197               	clrf	23	;volatile
  2799                           
  2800                           ;mcc_generated_files/spi/src/mssp.c: 70:     SSP1ADD = 0x00;
  2801     027B  0192               	clrf	18	;volatile
  2802     027C                     l47:
  2803     027C  0008               	return
  2804     027D                     __end_of_SPI1_Initialize:
  2805                           
  2806                           	psect	text4
  2807     03B1                     __ptext4:	
  2808 ;; *************** function _PIN_MANAGER_Initialize *****************
  2809 ;; Defined at:
  2810 ;;		line 40 in file "mcc_generated_files/system/src/pins.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 1
  2831 ;; This function calls:
  2832 ;;		_SW1_SetInterruptHandler
  2833 ;; This function is called by:
  2834 ;;		_SYSTEM_Initialize
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838     03B1                     _PIN_MANAGER_Initialize:	
  2839                           ;psect for function _PIN_MANAGER_Initialize
  2840                           
  2841     03B1                     l2177:	
  2842                           ;incstack = 0
  2843                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2844                           
  2845                           
  2846                           ;mcc_generated_files/system/src/pins.c: 45:     LATA = 0x0;
  2847     03B1  0022               	movlb	2	; select bank2
  2848     03B2  018C               	clrf	12	;volatile
  2849     03B3                     l2179:
  2850                           
  2851                           ;mcc_generated_files/system/src/pins.c: 46:     LATC = 0x18;
  2852     03B3  3018               	movlw	24
  2853     03B4  008E               	movwf	14	;volatile
  2854     03B5                     l2181:
  2855                           
  2856                           ;mcc_generated_files/system/src/pins.c: 51:     TRISA = 0xF;
  2857     03B5  300F               	movlw	15
  2858     03B6  0021               	movlb	1	; select bank1
  2859     03B7  008C               	movwf	12	;volatile
  2860     03B8                     l2183:
  2861                           
  2862                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x2;
  2863     03B8  3002               	movlw	2
  2864     03B9  008E               	movwf	14	;volatile
  2865                           
  2866                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  2867     03BA  0023               	movlb	3	; select bank3
  2868     03BB  018C               	clrf	12	;volatile
  2869                           
  2870                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELC = 0x0;
  2871     03BC  018E               	clrf	14	;volatile
  2872     03BD                     l2185:
  2873                           
  2874                           ;mcc_generated_files/system/src/pins.c: 63:     WPUA = 0xA;
  2875     03BD  300A               	movlw	10
  2876     03BE  0024               	movlb	4	; select bank4
  2877     03BF  008C               	movwf	12	;volatile
  2878                           
  2879                           ;mcc_generated_files/system/src/pins.c: 64:     WPUC = 0x0;
  2880     03C0  018E               	clrf	14	;volatile
  2881     03C1                     l2187:
  2882                           
  2883                           ;mcc_generated_files/system/src/pins.c: 65:     OPTION_REGbits.nWPUEN = 0x0;
  2884     03C1  0021               	movlb	1	; select bank1
  2885     03C2  1395               	bcf	21,7	;volatile
  2886                           
  2887                           ;mcc_generated_files/system/src/pins.c: 77:     INLVLA = 0x0;
  2888     03C3  0027               	movlb	7	; select bank7
  2889     03C4  018C               	clrf	12	;volatile
  2890                           
  2891                           ;mcc_generated_files/system/src/pins.c: 78:     INLVLC = 0x0;
  2892     03C5  018E               	clrf	14	;volatile
  2893                           
  2894                           ;mcc_generated_files/system/src/pins.c: 87:     APFCON0 = 0x0;
  2895     03C6  0022               	movlb	2	; select bank2
  2896     03C7  019D               	clrf	29	;volatile
  2897                           
  2898                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAP = 0x0;
  2899     03C8  0027               	movlb	7	; select bank7
  2900     03C9  0191               	clrf	17	;volatile
  2901     03CA                     l2189:
  2902                           
  2903                           ;mcc_generated_files/system/src/pins.c: 93:     IOCAN = 0x2;
  2904     03CA  3002               	movlw	2
  2905     03CB  0092               	movwf	18	;volatile
  2906                           
  2907                           ;mcc_generated_files/system/src/pins.c: 94:     IOCAF = 0x0;
  2908     03CC  0193               	clrf	19	;volatile
  2909     03CD                     l2191:
  2910                           
  2911                           ;mcc_generated_files/system/src/pins.c: 96:     SW1_SetInterruptHandler(SW1_DefaultInter
      +                          ruptHandler);
  2912     03CD  30F3               	movlw	low _SW1_DefaultInterruptHandler
  2913     03CE  00F0               	movwf	SW1_SetInterruptHandler@InterruptHandler
  2914     03CF  3002               	movlw	high _SW1_DefaultInterruptHandler
  2915     03D0  00F1               	movwf	SW1_SetInterruptHandler@InterruptHandler+1
  2916     03D1  3182  225C  3183   	fcall	_SW1_SetInterruptHandler
  2917     03D4                     l2193:
  2918                           
  2919                           ;mcc_generated_files/system/src/pins.c: 99:     INTCONbits.IOCIE = 1;
  2920     03D4  158B               	bsf	11,3	;volatile
  2921     03D5                     l187:
  2922     03D5  0008               	return
  2923     03D6                     __end_of_PIN_MANAGER_Initialize:
  2924                           
  2925                           	psect	text5
  2926     025C                     __ptext5:	
  2927 ;; *************** function _SW1_SetInterruptHandler *****************
  2928 ;; Defined at:
  2929 ;;		line 129 in file "mcc_generated_files/system/src/pins.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2932 ;;		 -> SW1_DefaultInterruptHandler(1), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_PIN_MANAGER_Initialize
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957     025C                     _SW1_SetInterruptHandler:	
  2958                           ;psect for function _SW1_SetInterruptHandler
  2959                           
  2960     025C                     l2137:	
  2961                           ;incstack = 0
  2962                           ; Regs used in _SW1_SetInterruptHandler: [wreg]
  2963                           
  2964                           
  2965                           ;mcc_generated_files/system/src/pins.c: 130:     SW1_InterruptHandler = InterruptHandler
      +                          ;
  2966     025C  0871               	movf	SW1_SetInterruptHandler@InterruptHandler+1,w
  2967     025D  0020               	movlb	0	; select bank0
  2968     025E  00DA               	movwf	_SW1_InterruptHandler+1
  2969     025F  0870               	movf	SW1_SetInterruptHandler@InterruptHandler,w
  2970     0260  00D9               	movwf	_SW1_InterruptHandler
  2971     0261                     l198:
  2972     0261  0008               	return
  2973     0262                     __end_of_SW1_SetInterruptHandler:
  2974                           
  2975                           	psect	text6
  2976     024E                     __ptext6:	
  2977 ;; *************** function _NVM_Initialize *****************
  2978 ;; Defined at:
  2979 ;;		line 42 in file "mcc_generated_files/nvm/src/nvm.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 1
  3000 ;; This function calls:
  3001 ;;		_NVM_StatusClear
  3002 ;; This function is called by:
  3003 ;;		_SYSTEM_Initialize
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007     024E                     _NVM_Initialize:	
  3008                           ;psect for function _NVM_Initialize
  3009                           
  3010     024E                     l2205:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _NVM_Initialize: [status,2+status,0+pclath+cstack]
  3013                           
  3014                           
  3015                           ;mcc_generated_files/nvm/src/nvm.c: 44:     NVM_StatusClear();
  3016     024E  3182  2247  3182   	fcall	_NVM_StatusClear
  3017     0251                     l536:
  3018     0251  0008               	return
  3019     0252                     __end_of_NVM_Initialize:
  3020                           
  3021                           	psect	text7
  3022     0247                     __ptext7:	
  3023 ;; *************** function _NVM_StatusClear *****************
  3024 ;; Defined at:
  3025 ;;		line 64 in file "mcc_generated_files/nvm/src/nvm.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		None
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_NVM_Initialize
  3049 ;;		_EEPROM_ByteWrite
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053     0247                     _NVM_StatusClear:	
  3054                           ;psect for function _NVM_StatusClear
  3055                           
  3056     0247                     l2167:	
  3057                           ;incstack = 0
  3058                           ; Regs used in _NVM_StatusClear: []
  3059                           
  3060                           
  3061                           ;mcc_generated_files/nvm/src/nvm.c: 66:     EECON1bits.WRERR = 0;
  3062     0247  0023               	movlb	3	; select bank3
  3063     0248  1195               	bcf	21,3	;volsfr
  3064     0249                     l549:
  3065     0249  0008               	return
  3066     024A                     __end_of_NVM_StatusClear:
  3067                           
  3068                           	psect	text8
  3069     027D                     __ptext8:	
  3070 ;; *************** function _INTERRUPT_Initialize *****************
  3071 ;; Defined at:
  3072 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		_INT_SetInterruptHandler
  3095 ;; This function is called by:
  3096 ;;		_SYSTEM_Initialize
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100     027D                     _INTERRUPT_Initialize:	
  3101                           ;psect for function _INTERRUPT_Initialize
  3102                           
  3103     027D                     l2173:	
  3104                           ;incstack = 0
  3105                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3106                           
  3107                           
  3108                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  3109     027D  108B               	bcf	11,1	;volatile
  3110                           
  3111                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  3112     027E  0021               	movlb	1	; select bank1
  3113     027F  1715               	bsf	21,6	;volatile
  3114     0280                     l2175:
  3115                           
  3116                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  3117     0280  3000               	movlw	0
  3118     0281  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  3119     0282  3000               	movlw	0
  3120     0283  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3121     0284  3182  2256  3182   	fcall	_INT_SetInterruptHandler
  3122     0287                     l123:
  3123     0287  0008               	return
  3124     0288                     __end_of_INTERRUPT_Initialize:
  3125                           
  3126                           	psect	text9
  3127     0256                     __ptext9:	
  3128 ;; *************** function _INT_SetInterruptHandler *****************
  3129 ;; Defined at:
  3130 ;;		line 71 in file "mcc_generated_files/system/src/interrupt.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3133 ;;		 -> INT_DefaultInterruptHandler(1), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_INTERRUPT_Initialize
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     0256                     _INT_SetInterruptHandler:	
  3159                           ;psect for function _INT_SetInterruptHandler
  3160                           
  3161     0256                     l2135:	
  3162                           ;incstack = 0
  3163                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3164                           
  3165                           
  3166                           ;mcc_generated_files/system/src/interrupt.c: 72:     INT_InterruptHandler = InterruptHan
      +                          dler;
  3167     0256  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3168     0257  0020               	movlb	0	; select bank0
  3169     0258  00DC               	movwf	_INT_InterruptHandler+1
  3170     0259  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3171     025A  00DB               	movwf	_INT_InterruptHandler
  3172     025B                     l133:
  3173     025B  0008               	return
  3174     025C                     __end_of_INT_SetInterruptHandler:
  3175                           
  3176                           	psect	text10
  3177     0262                     __ptext10:	
  3178 ;; *************** function _CLOCK_Initialize *****************
  3179 ;; Defined at:
  3180 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		status,2
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_SYSTEM_Initialize
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     0262                     _CLOCK_Initialize:	
  3208                           ;psect for function _CLOCK_Initialize
  3209                           
  3210     0262                     l2201:	
  3211                           ;incstack = 0
  3212                           ; Regs used in _CLOCK_Initialize: [status,2]
  3213                           
  3214                           
  3215                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
  3216     0262  306A               	movlw	106
  3217     0263  0021               	movlb	1	; select bank1
  3218     0264  0099               	movwf	25	;volatile
  3219     0265                     l2203:
  3220                           
  3221                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7);
  3222     0265  0022               	movlb	2	; select bank2
  3223     0266  0196               	clrf	22	;volatile
  3224                           
  3225                           ;mcc_generated_files/system/src/clock.c: 45:     OSCTUNE = (0 << 0x0);
  3226     0267  0021               	movlb	1	; select bank1
  3227     0268  0198               	clrf	24	;volatile
  3228     0269                     l213:
  3229     0269  0008               	return
  3230     026A                     __end_of_CLOCK_Initialize:
  3231                           
  3232                           	psect	text11
  3233     026A                     __ptext11:	
  3234 ;; *************** function _PIN_MANAGER_IOC *****************
  3235 ;; Defined at:
  3236 ;;		line 102 in file "mcc_generated_files/system/src/pins.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0, pclath, cstack
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used: 1
  3256 ;; Hardware stack levels required when called: 2
  3257 ;; This function calls:
  3258 ;;		_SW1_ISR
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264     026A                     _PIN_MANAGER_IOC:	
  3265                           ;psect for function _PIN_MANAGER_IOC
  3266                           
  3267     026A                     l2439:	
  3268                           ;incstack = 0
  3269                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  3270                           
  3271                           
  3272                           ;mcc_generated_files/system/src/pins.c: 105:     if(IOCAFbits.IOCAF1 == 1)
  3273     026A  0027               	movlb	7	; select bank7
  3274     026B  1C93               	btfss	19,1	;volatile
  3275     026C  2A6E               	goto	u721
  3276     026D  2A6F               	goto	u720
  3277     026E                     u721:
  3278     026E  2A72               	goto	l191
  3279     026F                     u720:
  3280     026F                     l2441:
  3281                           
  3282                           ;mcc_generated_files/system/src/pins.c: 106:     {;mcc_generated_files/system/src/pins.c
      +                          : 107:         SW1_ISR();
  3283     026F  3182  22A0  3182   	fcall	_SW1_ISR
  3284     0272                     l191:
  3285     0272  0008               	return
  3286     0273                     __end_of_PIN_MANAGER_IOC:
  3287                           
  3288                           	psect	text12
  3289     02A0                     __ptext12:	
  3290 ;; *************** function _SW1_ISR *****************
  3291 ;; Defined at:
  3292 ;;		line 114 in file "mcc_generated_files/system/src/pins.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		NULL
  3315 ;;		_SW1_DefaultInterruptHandler
  3316 ;; This function is called by:
  3317 ;;		_PIN_MANAGER_IOC
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321     02A0                     _SW1_ISR:	
  3322                           ;psect for function _SW1_ISR
  3323                           
  3324     02A0                     l2195:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _SW1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3327                           
  3328                           
  3329                           ;mcc_generated_files/system/src/pins.c: 119:     if(SW1_InterruptHandler)
  3330     02A0  0020               	movlb	0	; select bank0
  3331     02A1  0859               	movf	_SW1_InterruptHandler,w
  3332     02A2  045A               	iorwf	_SW1_InterruptHandler+1,w
  3333     02A3  1903               	btfsc	3,2
  3334     02A4  2AA6               	goto	u641
  3335     02A5  2AA7               	goto	u640
  3336     02A6                     u641:
  3337     02A6  2AAC               	goto	l2199
  3338     02A7                     u640:
  3339     02A7                     l2197:
  3340                           
  3341                           ;mcc_generated_files/system/src/pins.c: 120:     {;mcc_generated_files/system/src/pins.c
      +                          : 121:         SW1_InterruptHandler();
  3342     02A7  085A               	movf	_SW1_InterruptHandler+1,w
  3343     02A8  008A               	movwf	10
  3344     02A9  0859               	movf	_SW1_InterruptHandler,w
  3345     02AA  000A               	callw
  3346     02AB  3182               	pagesel	$
  3347     02AC                     l2199:
  3348                           
  3349                           ;mcc_generated_files/system/src/pins.c: 123:     IOCAFbits.IOCAF1 = 0;
  3350     02AC  0027               	movlb	7	; select bank7
  3351     02AD  1093               	bcf	19,1	;volatile
  3352     02AE                     l195:
  3353     02AE  0008               	return
  3354     02AF                     __end_of_SW1_ISR:
  3355                           
  3356                           	psect	text13
  3357     02F3                     __ptext13:	
  3358 ;; *************** function _SW1_DefaultInterruptHandler *****************
  3359 ;; Defined at:
  3360 ;;		line 136 in file "mcc_generated_files/system/src/pins.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;Total ram usage:        1 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_PIN_MANAGER_Initialize
  3384 ;;		_SW1_ISR
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     02F3                     _SW1_DefaultInterruptHandler:	
  3389                           ;psect for function _SW1_DefaultInterruptHandler
  3390                           
  3391     02F3                     l2139:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _SW1_DefaultInterruptHandler: [wreg+status,0]
  3394                           
  3395                           
  3396                           ;mcc_generated_files/system/src/pins.c: 139:     _delay((unsigned long)((60)*(4000000/40
      +                          00.0)));
  3397     02F3  304E               	movlw	78
  3398     02F4  00F0               	movwf	??_SW1_DefaultInterruptHandler
  3399     02F5  30EB               	movlw	235
  3400     02F6                     u897:
  3401     02F6  0B89               	decfsz	9,f
  3402     02F7  2AF6               	goto	u897
  3403     02F8  0BF0               	decfsz	??_SW1_DefaultInterruptHandler,f
  3404     02F9  2AF6               	goto	u897
  3405     02FA  0000               	nop
  3406     02FB                     l2141:
  3407                           
  3408                           ;mcc_generated_files/system/src/pins.c: 140:     if (PORTAbits.RA1 == 0) {
  3409     02FB  0020               	movlb	0	; select bank0
  3410     02FC  188C               	btfsc	12,1	;volatile
  3411     02FD  2AFF               	goto	u591
  3412     02FE  2B00               	goto	u590
  3413     02FF                     u591:
  3414     02FF  2B0C               	goto	l204
  3415     0300                     u590:
  3416     0300                     l2143:
  3417     0300  1003               	clrc
  3418     0301  0022               	movlb	2	; select bank2
  3419     0302  1E0C               	btfss	12,4	;volatile
  3420     0303  1403               	setc
  3421     0304  1803               	btfsc	3,0
  3422     0305  2B07               	goto	u601
  3423     0306  2B0A               	goto	u600
  3424     0307                     u601:
  3425     0307  0022               	movlb	2	; select bank2
  3426     0308  160C               	bsf	12,4	;volatile
  3427     0309  2B0C               	goto	u614
  3428     030A                     u600:
  3429     030A  0022               	movlb	2	; select bank2
  3430     030B  120C               	bcf	12,4	;volatile
  3431     030C                     u614:
  3432     030C                     l204:
  3433     030C  0008               	return
  3434     030D                     __end_of_SW1_DefaultInterruptHandler:
  3435                           
  3436                           	psect	text14
  3437     04EC                     __ptext14:	
  3438 ;; *************** function _MotionEventHandler *****************
  3439 ;; Defined at:
  3440 ;;		line 15 in file "fall.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  state           1   40[BANK0 ] PTR enum E2687
  3443 ;;		 -> main@current_state(1), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3455 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;Total ram usage:        3 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 3
  3462 ;; This function calls:
  3463 ;;		_ADXL345_ClearInterrupt
  3464 ;;		_orientation_Up
  3465 ;;		_setupForFreefall
  3466 ;;		_setupForImpact
  3467 ;;		_setupForInactivity
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     04EC                     _MotionEventHandler:	
  3474                           ;psect for function _MotionEventHandler
  3475                           
  3476     04EC                     l2499:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _MotionEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;fall.c: 16:     timer_20ms++;
  3482     04EC  3001               	movlw	1
  3483     04ED  0020               	movlb	0	; select bank0
  3484     04EE  07D6               	addwf	_timer_20ms,f
  3485     04EF  3000               	movlw	0
  3486     04F0  3DD7               	addwfc	_timer_20ms+1,f
  3487                           
  3488                           ;fall.c: 17:     orientation_check_timer_20ms++;
  3489     04F1  3001               	movlw	1
  3490     04F2  07D4               	addwf	_orientation_check_timer_20ms,f
  3491     04F3  3000               	movlw	0
  3492     04F4  3DD5               	addwfc	_orientation_check_timer_20ms+1,f
  3493                           
  3494                           ;fall.c: 19:     switch (*state) {
  3495     04F5  2D5D               	goto	l2563
  3496     04F6                     l480:	
  3497                           ;fall.c: 20:         case WAITING_FOR_FREEFALL:
  3498                           
  3499                           
  3500                           ;fall.c: 22:             if (PORTAbits.RA2) {
  3501     04F6  1D0C               	btfss	12,2	;volatile
  3502     04F7  2CF9               	goto	u761
  3503     04F8  2CFA               	goto	u760
  3504     04F9                     u761:
  3505     04F9  2D79               	goto	l509
  3506     04FA                     u760:
  3507     04FA                     l2501:
  3508                           
  3509                           ;fall.c: 23:                 setupForImpact();
  3510     04FA  3186  2611  3184   	fcall	_setupForImpact
  3511     04FD                     l2503:
  3512                           
  3513                           ;fall.c: 24:                 timer_20ms = 0;
  3514     04FD  0020               	movlb	0	; select bank0
  3515     04FE  01D6               	clrf	_timer_20ms
  3516     04FF  01D7               	clrf	_timer_20ms+1
  3517     0500                     l2505:
  3518                           
  3519                           ;fall.c: 25:                 *state = WAITING_FOR_IMPACT;
  3520     0500  0848               	movf	MotionEventHandler@state,w
  3521     0501  0086               	movwf	6
  3522     0502  0187               	clrf	7
  3523     0503  3001               	movlw	1
  3524     0504  0081               	movwf	1
  3525     0505  2D79               	goto	l509
  3526     0506                     l483:	
  3527                           ;fall.c: 29:         case WAITING_FOR_IMPACT:
  3528                           
  3529                           
  3530                           ;fall.c: 31:             if (PORTAbits.RA2) {
  3531     0506  1D0C               	btfss	12,2	;volatile
  3532     0507  2D09               	goto	u771
  3533     0508  2D0A               	goto	u770
  3534     0509                     u771:
  3535     0509  2D14               	goto	l2511
  3536     050A                     u770:
  3537     050A                     l2507:
  3538                           
  3539                           ;fall.c: 32:                 setupForInactivity();
  3540     050A  3186  26A8  3184   	fcall	_setupForInactivity
  3541     050D                     l2509:
  3542                           
  3543                           ;fall.c: 33:                 *state = WAITING_FOR_INACTIVITY;
  3544     050D  0020               	movlb	0	; select bank0
  3545     050E  0848               	movf	MotionEventHandler@state,w
  3546     050F  0086               	movwf	6
  3547     0510  0187               	clrf	7
  3548     0511  3002               	movlw	2
  3549     0512  0081               	movwf	1
  3550                           
  3551                           ;fall.c: 34:             }
  3552     0513  2D79               	goto	l509
  3553     0514                     l2511:
  3554     0514  3000               	movlw	0
  3555     0515  0257               	subwf	_timer_20ms+1,w
  3556     0516  3019               	movlw	25
  3557     0517  1903               	skipnz
  3558     0518  0256               	subwf	_timer_20ms,w
  3559     0519  1C03               	skipc
  3560     051A  2D1C               	goto	u781
  3561     051B  2D1D               	goto	u780
  3562     051C                     u781:
  3563     051C  2D79               	goto	l509
  3564     051D                     u780:
  3565     051D                     l2513:
  3566                           
  3567                           ;fall.c: 37:                 setupForFreefall();
  3568     051D  3185  257A  3184   	fcall	_setupForFreefall
  3569     0520                     l2515:
  3570                           
  3571                           ;fall.c: 38:                 *state = WAITING_FOR_FREEFALL;
  3572     0520  0020               	movlb	0	; select bank0
  3573     0521  0848               	movf	MotionEventHandler@state,w
  3574     0522  0086               	movwf	6
  3575     0523  0187               	clrf	7
  3576     0524  0181               	clrf	1
  3577     0525  2D79               	goto	l509
  3578     0526                     l487:	
  3579                           ;fall.c: 42:         case WAITING_FOR_INACTIVITY:
  3580                           
  3581                           
  3582                           ;fall.c: 44:             if (PORTAbits.RA2) {
  3583     0526  1D0C               	btfss	12,2	;volatile
  3584     0527  2D29               	goto	u791
  3585     0528  2D2A               	goto	u790
  3586     0529                     u791:
  3587     0529  2D4D               	goto	l2535
  3588     052A                     u790:
  3589     052A                     l2517:
  3590                           
  3591                           ;fall.c: 45:                 if (!orientation_Up()) {
  3592     052A  3187  273F  3184   	fcall	_orientation_Up
  3593     052D  3A00               	xorlw	0
  3594     052E  1D03               	skipz
  3595     052F  2D31               	goto	u801
  3596     0530  2D32               	goto	u800
  3597     0531                     u801:
  3598     0531  2D1D               	goto	l2513
  3599     0532                     u800:
  3600     0532                     l490:	
  3601                           ;fall.c: 46:                     do { LATAbits.LATA5 = 1; } while(0);
  3602                           
  3603     0532  0022               	movlb	2	; select bank2
  3604     0533  168C               	bsf	12,5	;volatile
  3605     0534                     l2519:
  3606                           
  3607                           ;fall.c: 47:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  3608     0534  3082               	movlw	130
  3609     0535  0020               	movlb	0	; select bank0
  3610     0536  00C9               	movwf	??_MotionEventHandler
  3611     0537  30DD               	movlw	221
  3612     0538                     u907:
  3613     0538  0B89               	decfsz	9,f
  3614     0539  2D38               	goto	u907
  3615     053A  0BC9               	decfsz	??_MotionEventHandler,f
  3616     053B  2D38               	goto	u907
  3617     053C  3200               	nop2
  3618     053D                     l2521:
  3619     053D  0022               	movlb	2	; select bank2
  3620     053E  128C               	bcf	12,5	;volatile
  3621     053F                     l2523:
  3622                           
  3623                           ;fall.c: 49:                     orientation_check_timer_20ms = 0;
  3624     053F  0020               	movlb	0	; select bank0
  3625     0540  01D4               	clrf	_orientation_check_timer_20ms
  3626     0541  01D5               	clrf	_orientation_check_timer_20ms+1
  3627     0542                     l2525:
  3628                           
  3629                           ;fall.c: 50:                     good_orientation_count = 0;
  3630     0542  01D8               	clrf	_good_orientation_count
  3631     0543                     l2527:
  3632                           
  3633                           ;fall.c: 51:                     ADXL345_ClearInterrupt();
  3634     0543  3182  22D9  3184   	fcall	_ADXL345_ClearInterrupt
  3635     0546                     l2529:
  3636                           
  3637                           ;fall.c: 52:                     *state = WAITING_FOR_TIMEOUT;
  3638     0546  0020               	movlb	0	; select bank0
  3639     0547  0848               	movf	MotionEventHandler@state,w
  3640     0548  0086               	movwf	6
  3641     0549  0187               	clrf	7
  3642     054A  3003               	movlw	3
  3643     054B  0081               	movwf	1
  3644                           
  3645                           ;fall.c: 53:                 } else {
  3646     054C  2D79               	goto	l509
  3647     054D                     l2535:
  3648     054D  3000               	movlw	0
  3649     054E  0257               	subwf	_timer_20ms+1,w
  3650     054F  30E1               	movlw	225
  3651     0550  1903               	skipnz
  3652     0551  0256               	subwf	_timer_20ms,w
  3653     0552  1C03               	skipc
  3654     0553  2D55               	goto	u811
  3655     0554  2D56               	goto	u810
  3656     0555                     u811:
  3657     0555  2D79               	goto	l509
  3658     0556                     u810:
  3659     0556  2D1D               	goto	l2513
  3660     0557                     l2541:
  3661                           
  3662                           ;fall.c: 68:                 *state = FALL_DETECTED;
  3663     0557  0848               	movf	MotionEventHandler@state,w
  3664     0558  0086               	movwf	6
  3665     0559  0187               	clrf	7
  3666     055A  3004               	movlw	4
  3667     055B  0081               	movwf	1
  3668                           
  3669                           ;fall.c: 69:             }
  3670     055C  2D79               	goto	l509
  3671     055D                     l2563:
  3672     055D  0848               	movf	MotionEventHandler@state,w
  3673     055E  0086               	movwf	6
  3674     055F  0187               	clrf	7
  3675     0560  0801               	movf	1,w
  3676     0561  00C9               	movwf	??_MotionEventHandler
  3677     0562  01CA               	clrf	??_MotionEventHandler+1
  3678                           
  3679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3680                           ; Switch size 1, requested type "simple"
  3681                           ; Number of cases is 1, Range of values is 0 to 0
  3682                           ; switch strategies available:
  3683                           ; Name         Instructions Cycles
  3684                           ; simple_byte            4     3 (average)
  3685                           ; direct_byte            8     6 (fixed)
  3686                           ; jumptable            260     6 (fixed)
  3687                           ;	Chosen strategy is simple_byte
  3688     0563  084A               	movf	??_MotionEventHandler+1,w
  3689     0564  3A00               	xorlw	0	; case 0
  3690     0565  1903               	skipnz
  3691     0566  2D68               	goto	l2681
  3692     0567  2D79               	goto	l509
  3693     0568                     l2681:
  3694                           
  3695                           ; Switch size 1, requested type "simple"
  3696                           ; Number of cases is 5, Range of values is 0 to 4
  3697                           ; switch strategies available:
  3698                           ; Name         Instructions Cycles
  3699                           ; direct_byte           16     6 (fixed)
  3700                           ; simple_byte           16     9 (average)
  3701                           ; jumptable            260     6 (fixed)
  3702                           ;	Chosen strategy is simple_byte
  3703     0568  0849               	movf	??_MotionEventHandler,w
  3704     0569  3A00               	xorlw	0	; case 0
  3705     056A  1903               	skipnz
  3706     056B  2CF6               	goto	l480
  3707     056C  3A01               	xorlw	1	; case 1
  3708     056D  1903               	skipnz
  3709     056E  2D06               	goto	l483
  3710     056F  3A03               	xorlw	3	; case 2
  3711     0570  1903               	skipnz
  3712     0571  2D26               	goto	l487
  3713     0572  3A01               	xorlw	1	; case 3
  3714     0573  1903               	skipnz
  3715     0574  2D57               	goto	l2541
  3716     0575  3A07               	xorlw	7	; case 4
  3717     0576  1903               	skipnz
  3718     0577  2D79               	goto	l509
  3719     0578  2D79               	goto	l509
  3720     0579                     l509:
  3721     0579  0008               	return
  3722     057A                     __end_of_MotionEventHandler:
  3723                           
  3724                           	psect	text15
  3725     06A8                     __ptext15:	
  3726 ;; *************** function _setupForInactivity *****************
  3727 ;; Defined at:
  3728 ;;		line 205 in file "ADXL345.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  msg            26    0[BANK0 ] struct Message
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;Total ram usage:       26 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		_SPI1_BufferWrite
  3751 ;;		_SPI1_ByteExchange
  3752 ;;		_SPI1_Close
  3753 ;;		_SPI1_Open
  3754 ;;		_memcpy
  3755 ;;		_memset
  3756 ;; This function is called by:
  3757 ;;		_MotionEventHandler
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     06A8                     _setupForInactivity:	
  3762                           ;psect for function _setupForInactivity
  3763                           
  3764     06A8                     l2329:	
  3765                           ;incstack = 0
  3766                           ; Regs used in _setupForInactivity: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3767                           
  3768                           
  3769                           ;ADXL345.c: 206:     while (!SPI1_Open(ADXL345)) {
  3770     06A8  2EAC               	goto	l2333
  3771     06A9                     l2331:
  3772                           
  3773                           ;ADXL345.c: 207:         SPI1_Close();
  3774     06A9  3182  2244  3186   	fcall	_SPI1_Close
  3775     06AC                     l2333:
  3776                           
  3777                           ;ADXL345.c: 206:     while (!SPI1_Open(ADXL345)) {
  3778     06AC  01F6               	clrf	SPI1_Open@spiConfigIndex
  3779     06AD  3184  2480  3186   	fcall	_SPI1_Open
  3780     06B0  3A00               	xorlw	0
  3781     06B1  1903               	skipnz
  3782     06B2  2EB4               	goto	u681
  3783     06B3  2EB5               	goto	u680
  3784     06B4                     u681:
  3785     06B4  2EA9               	goto	l2331
  3786     06B5                     u680:
  3787     06B5                     l416:	
  3788                           ;ADXL345.c: 211:     do { LATCbits.LATC4 = 0; } while(0);
  3789                           
  3790     06B5  0022               	movlb	2	; select bank2
  3791     06B6  120E               	bcf	14,4	;volatile
  3792     06B7                     l2335:
  3793                           
  3794                           ;ADXL345.c: 212:     SPI1_ByteExchange(0x30);
  3795     06B7  3030               	movlw	48
  3796     06B8  00F0               	movwf	SPI1_ByteExchange@byteData
  3797     06B9  3182  2288  3186   	fcall	_SPI1_ByteExchange
  3798     06BC                     l2337:
  3799     06BC  0022               	movlb	2	; select bank2
  3800     06BD  160E               	bsf	14,4	;volatile
  3801     06BE                     l2339:
  3802                           
  3803                           ;ADXL345.c: 221:     struct Message msg;;ADXL345.c: 222:     msg.registerAddr = 0x24;
  3804     06BE  3024               	movlw	36
  3805     06BF  0020               	movlb	0	; select bank0
  3806     06C0  00A0               	movwf	setupForInactivity@msg
  3807     06C1                     l2341:
  3808                           
  3809                           ;ADXL345.c: 223:     memset(msg.data, 0, sizeof(msg.data));
  3810     06C1  3021               	movlw	low (setupForInactivity@msg+1)
  3811     06C2  00F0               	movwf	memset@dest
  3812     06C3  3000               	movlw	high (setupForInactivity@msg+1)
  3813     06C4  00F1               	movwf	memset@dest+1
  3814     06C5  3000               	movlw	0
  3815     06C6  00F2               	movwf	memset@c
  3816     06C7  00F3               	movwf	memset@c+1
  3817     06C8  3019               	movlw	25
  3818     06C9  00F4               	movwf	memset@n
  3819     06CA  3000               	movlw	0
  3820     06CB  00F5               	movwf	memset@n+1
  3821     06CC  3182  22C2  3186   	fcall	_memset
  3822     06CF                     l2343:
  3823                           
  3824                           ;ADXL345.c: 224:     memcpy(msg.data, no_motion_init, sizeof(no_motion_init));
  3825     06CF  3021               	movlw	low (setupForInactivity@msg+1)
  3826     06D0  00F0               	movwf	memcpy@d1
  3827     06D1  3000               	movlw	high (setupForInactivity@msg+1)
  3828     06D2  00F1               	movwf	memcpy@d1+1
  3829     06D3  3045               	movlw	low (_no_motion_init| (0+32768))
  3830     06D4  00F2               	movwf	memcpy@s1
  3831     06D5  3088               	movlw	high (_no_motion_init| (0+32768))
  3832     06D6  00F3               	movwf	memcpy@s1+1
  3833     06D7  3004               	movlw	4
  3834     06D8  00F4               	movwf	memcpy@n
  3835     06D9  3000               	movlw	0
  3836     06DA  00F5               	movwf	memcpy@n+1
  3837     06DB  3183  238C  3186   	fcall	_memcpy
  3838     06DE                     l2345:
  3839     06DE  0022               	movlb	2	; select bank2
  3840     06DF  120E               	bcf	14,4	;volatile
  3841     06E0                     l2347:
  3842                           
  3843                           ;ADXL345.c: 226:     SPI1_BufferWrite(&msg, sizeof(no_motion_init) + 1);
  3844     06E0  3020               	movlw	low setupForInactivity@msg
  3845     06E1  00F0               	movwf	SPI1_BufferWrite@bufferData
  3846     06E2  3000               	movlw	high setupForInactivity@msg
  3847     06E3  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3848     06E4  3005               	movlw	5
  3849     06E5  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3850     06E6  3000               	movlw	0
  3851     06E7  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3852     06E8  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3853     06EB                     l2349:
  3854     06EB  0022               	movlb	2	; select bank2
  3855     06EC  160E               	bsf	14,4	;volatile
  3856     06ED                     l2351:
  3857                           
  3858                           ;ADXL345.c: 230:     msg.registerAddr = 0x2C;
  3859     06ED  302C               	movlw	44
  3860     06EE  0020               	movlb	0	; select bank0
  3861     06EF  00A0               	movwf	setupForInactivity@msg
  3862     06F0                     l2353:
  3863                           
  3864                           ;ADXL345.c: 231:     memset(msg.data, 0, sizeof(msg.data));
  3865     06F0  3021               	movlw	low (setupForInactivity@msg+1)
  3866     06F1  00F0               	movwf	memset@dest
  3867     06F2  3000               	movlw	high (setupForInactivity@msg+1)
  3868     06F3  00F1               	movwf	memset@dest+1
  3869     06F4  3000               	movlw	0
  3870     06F5  00F2               	movwf	memset@c
  3871     06F6  00F3               	movwf	memset@c+1
  3872     06F7  3019               	movlw	25
  3873     06F8  00F4               	movwf	memset@n
  3874     06F9  3000               	movlw	0
  3875     06FA  00F5               	movwf	memset@n+1
  3876     06FB  3182  22C2  3186   	fcall	_memset
  3877     06FE                     l2355:
  3878                           
  3879                           ;ADXL345.c: 232:     msg.data[0] = 0x17;
  3880     06FE  3017               	movlw	23
  3881     06FF  0020               	movlb	0	; select bank0
  3882     0700  00A1               	movwf	setupForInactivity@msg+1
  3883     0701                     l2357:
  3884     0701  0022               	movlb	2	; select bank2
  3885     0702  120E               	bcf	14,4	;volatile
  3886     0703                     l2359:
  3887                           
  3888                           ;ADXL345.c: 234:     SPI1_BufferWrite(&msg, 2);
  3889     0703  3020               	movlw	low setupForInactivity@msg
  3890     0704  00F0               	movwf	SPI1_BufferWrite@bufferData
  3891     0705  3000               	movlw	high setupForInactivity@msg
  3892     0706  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3893     0707  3002               	movlw	2
  3894     0708  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3895     0709  3000               	movlw	0
  3896     070A  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3897     070B  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3898     070E                     l2361:
  3899     070E  0022               	movlb	2	; select bank2
  3900     070F  160E               	bsf	14,4	;volatile
  3901     0710                     l2363:
  3902                           
  3903                           ;ADXL345.c: 238:     msg.registerAddr = 0x2E;
  3904     0710  302E               	movlw	46
  3905     0711  0020               	movlb	0	; select bank0
  3906     0712  00A0               	movwf	setupForInactivity@msg
  3907     0713                     l2365:
  3908                           
  3909                           ;ADXL345.c: 239:     memset(msg.data, 0, sizeof(msg.data));
  3910     0713  3021               	movlw	low (setupForInactivity@msg+1)
  3911     0714  00F0               	movwf	memset@dest
  3912     0715  3000               	movlw	high (setupForInactivity@msg+1)
  3913     0716  00F1               	movwf	memset@dest+1
  3914     0717  3000               	movlw	0
  3915     0718  00F2               	movwf	memset@c
  3916     0719  00F3               	movwf	memset@c+1
  3917     071A  3019               	movlw	25
  3918     071B  00F4               	movwf	memset@n
  3919     071C  3000               	movlw	0
  3920     071D  00F5               	movwf	memset@n+1
  3921     071E  3182  22C2  3186   	fcall	_memset
  3922     0721                     l2367:
  3923                           
  3924                           ;ADXL345.c: 240:     msg.data[0] = 0x08;
  3925     0721  3008               	movlw	8
  3926     0722  0020               	movlb	0	; select bank0
  3927     0723  00A1               	movwf	setupForInactivity@msg+1
  3928     0724                     l2369:
  3929     0724  0022               	movlb	2	; select bank2
  3930     0725  120E               	bcf	14,4	;volatile
  3931     0726                     l2371:
  3932                           
  3933                           ;ADXL345.c: 242:     SPI1_BufferWrite(&msg, 2);
  3934     0726  3020               	movlw	low setupForInactivity@msg
  3935     0727  00F0               	movwf	SPI1_BufferWrite@bufferData
  3936     0728  3000               	movlw	high setupForInactivity@msg
  3937     0729  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3938     072A  3002               	movlw	2
  3939     072B  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3940     072C  3000               	movlw	0
  3941     072D  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3942     072E  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3943     0731                     l2373:
  3944     0731  0022               	movlb	2	; select bank2
  3945     0732  160E               	bsf	14,4	;volatile
  3946     0733                     l2375:
  3947     0733  120E               	bcf	14,4	;volatile
  3948     0734                     l2377:
  3949                           
  3950                           ;ADXL345.c: 247:     SPI1_ByteExchange(0x30);
  3951     0734  3030               	movlw	48
  3952     0735  00F0               	movwf	SPI1_ByteExchange@byteData
  3953     0736  3182  2288  3186   	fcall	_SPI1_ByteExchange
  3954     0739                     l2379:
  3955     0739  0022               	movlb	2	; select bank2
  3956     073A  160E               	bsf	14,4	;volatile
  3957     073B                     l2381:
  3958                           
  3959                           ;ADXL345.c: 250:     SPI1_Close();
  3960     073B  3182  2244  3186   	fcall	_SPI1_Close
  3961     073E                     l436:
  3962     073E  0008               	return
  3963     073F                     __end_of_setupForInactivity:
  3964                           
  3965                           	psect	text16
  3966     0611                     __ptext16:	
  3967 ;; *************** function _setupForImpact *****************
  3968 ;; Defined at:
  3969 ;;		line 157 in file "ADXL345.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  msg            26    0[BANK0 ] struct Message
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:       26 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 2
  3990 ;; This function calls:
  3991 ;;		_SPI1_BufferWrite
  3992 ;;		_SPI1_ByteExchange
  3993 ;;		_SPI1_Close
  3994 ;;		_SPI1_Open
  3995 ;;		_memcpy
  3996 ;;		_memset
  3997 ;; This function is called by:
  3998 ;;		_MotionEventHandler
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002     0611                     _setupForImpact:	
  4003                           ;psect for function _setupForImpact
  4004                           
  4005     0611                     l2275:	
  4006                           ;incstack = 0
  4007                           ; Regs used in _setupForImpact: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4008                           
  4009                           
  4010                           ;ADXL345.c: 158:     while (!SPI1_Open(ADXL345)) {
  4011     0611  2E15               	goto	l2279
  4012     0612                     l2277:
  4013                           
  4014                           ;ADXL345.c: 159:         SPI1_Close();
  4015     0612  3182  2244  3186   	fcall	_SPI1_Close
  4016     0615                     l2279:
  4017                           
  4018                           ;ADXL345.c: 158:     while (!SPI1_Open(ADXL345)) {
  4019     0615  01F6               	clrf	SPI1_Open@spiConfigIndex
  4020     0616  3184  2480  3186   	fcall	_SPI1_Open
  4021     0619  3A00               	xorlw	0
  4022     061A  1903               	skipnz
  4023     061B  2E1D               	goto	u671
  4024     061C  2E1E               	goto	u670
  4025     061D                     u671:
  4026     061D  2E12               	goto	l2277
  4027     061E                     u670:
  4028     061E                     l390:	
  4029                           ;ADXL345.c: 163:     do { LATCbits.LATC4 = 0; } while(0);
  4030                           
  4031     061E  0022               	movlb	2	; select bank2
  4032     061F  120E               	bcf	14,4	;volatile
  4033     0620                     l2281:
  4034                           
  4035                           ;ADXL345.c: 164:     SPI1_ByteExchange(0x30);
  4036     0620  3030               	movlw	48
  4037     0621  00F0               	movwf	SPI1_ByteExchange@byteData
  4038     0622  3182  2288  3186   	fcall	_SPI1_ByteExchange
  4039     0625                     l2283:
  4040     0625  0022               	movlb	2	; select bank2
  4041     0626  160E               	bsf	14,4	;volatile
  4042     0627                     l2285:
  4043                           
  4044                           ;ADXL345.c: 173:     struct Message msg;;ADXL345.c: 174:     msg.registerAddr = 0x24;
  4045     0627  3024               	movlw	36
  4046     0628  0020               	movlb	0	; select bank0
  4047     0629  00A0               	movwf	setupForImpact@msg
  4048     062A                     l2287:
  4049                           
  4050                           ;ADXL345.c: 175:     memset(msg.data, 0, sizeof(msg.data));
  4051     062A  3021               	movlw	low (setupForImpact@msg+1)
  4052     062B  00F0               	movwf	memset@dest
  4053     062C  3000               	movlw	high (setupForImpact@msg+1)
  4054     062D  00F1               	movwf	memset@dest+1
  4055     062E  3000               	movlw	0
  4056     062F  00F2               	movwf	memset@c
  4057     0630  00F3               	movwf	memset@c+1
  4058     0631  3019               	movlw	25
  4059     0632  00F4               	movwf	memset@n
  4060     0633  3000               	movlw	0
  4061     0634  00F5               	movwf	memset@n+1
  4062     0635  3182  22C2  3186   	fcall	_memset
  4063     0638                     l2289:
  4064                           
  4065                           ;ADXL345.c: 176:     memcpy(msg.data, impact_init, sizeof(impact_init));
  4066     0638  3021               	movlw	low (setupForImpact@msg+1)
  4067     0639  00F0               	movwf	memcpy@d1
  4068     063A  3000               	movlw	high (setupForImpact@msg+1)
  4069     063B  00F1               	movwf	memcpy@d1+1
  4070     063C  3049               	movlw	low (_impact_init| (0+32768))
  4071     063D  00F2               	movwf	memcpy@s1
  4072     063E  3088               	movlw	high (_impact_init| (0+32768))
  4073     063F  00F3               	movwf	memcpy@s1+1
  4074     0640  3004               	movlw	4
  4075     0641  00F4               	movwf	memcpy@n
  4076     0642  3000               	movlw	0
  4077     0643  00F5               	movwf	memcpy@n+1
  4078     0644  3183  238C  3186   	fcall	_memcpy
  4079     0647                     l2291:
  4080     0647  0022               	movlb	2	; select bank2
  4081     0648  120E               	bcf	14,4	;volatile
  4082     0649                     l2293:
  4083                           
  4084                           ;ADXL345.c: 178:     SPI1_BufferWrite(&msg, sizeof(impact_init) + 1);
  4085     0649  3020               	movlw	low setupForImpact@msg
  4086     064A  00F0               	movwf	SPI1_BufferWrite@bufferData
  4087     064B  3000               	movlw	high setupForImpact@msg
  4088     064C  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4089     064D  3005               	movlw	5
  4090     064E  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4091     064F  3000               	movlw	0
  4092     0650  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4093     0651  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4094     0654                     l2295:
  4095     0654  0022               	movlb	2	; select bank2
  4096     0655  160E               	bsf	14,4	;volatile
  4097     0656                     l2297:
  4098                           
  4099                           ;ADXL345.c: 182:     msg.registerAddr = 0x2C;
  4100     0656  302C               	movlw	44
  4101     0657  0020               	movlb	0	; select bank0
  4102     0658  00A0               	movwf	setupForImpact@msg
  4103     0659                     l2299:
  4104                           
  4105                           ;ADXL345.c: 183:     memset(msg.data, 0, sizeof(msg.data));
  4106     0659  3021               	movlw	low (setupForImpact@msg+1)
  4107     065A  00F0               	movwf	memset@dest
  4108     065B  3000               	movlw	high (setupForImpact@msg+1)
  4109     065C  00F1               	movwf	memset@dest+1
  4110     065D  3000               	movlw	0
  4111     065E  00F2               	movwf	memset@c
  4112     065F  00F3               	movwf	memset@c+1
  4113     0660  3019               	movlw	25
  4114     0661  00F4               	movwf	memset@n
  4115     0662  3000               	movlw	0
  4116     0663  00F5               	movwf	memset@n+1
  4117     0664  3182  22C2  3186   	fcall	_memset
  4118     0667                     l2301:
  4119                           
  4120                           ;ADXL345.c: 184:     msg.data[0] = 0x1A;
  4121     0667  301A               	movlw	26
  4122     0668  0020               	movlb	0	; select bank0
  4123     0669  00A1               	movwf	setupForImpact@msg+1
  4124     066A                     l2303:
  4125     066A  0022               	movlb	2	; select bank2
  4126     066B  120E               	bcf	14,4	;volatile
  4127     066C                     l2305:
  4128                           
  4129                           ;ADXL345.c: 186:     SPI1_BufferWrite(&msg, 2);
  4130     066C  3020               	movlw	low setupForImpact@msg
  4131     066D  00F0               	movwf	SPI1_BufferWrite@bufferData
  4132     066E  3000               	movlw	high setupForImpact@msg
  4133     066F  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4134     0670  3002               	movlw	2
  4135     0671  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4136     0672  3000               	movlw	0
  4137     0673  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4138     0674  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4139     0677                     l2307:
  4140     0677  0022               	movlb	2	; select bank2
  4141     0678  160E               	bsf	14,4	;volatile
  4142     0679                     l2309:
  4143                           
  4144                           ;ADXL345.c: 190:     msg.registerAddr = 0x2E;
  4145     0679  302E               	movlw	46
  4146     067A  0020               	movlb	0	; select bank0
  4147     067B  00A0               	movwf	setupForImpact@msg
  4148     067C                     l2311:
  4149                           
  4150                           ;ADXL345.c: 191:     memset(msg.data, 0, sizeof(msg.data));
  4151     067C  3021               	movlw	low (setupForImpact@msg+1)
  4152     067D  00F0               	movwf	memset@dest
  4153     067E  3000               	movlw	high (setupForImpact@msg+1)
  4154     067F  00F1               	movwf	memset@dest+1
  4155     0680  3000               	movlw	0
  4156     0681  00F2               	movwf	memset@c
  4157     0682  00F3               	movwf	memset@c+1
  4158     0683  3019               	movlw	25
  4159     0684  00F4               	movwf	memset@n
  4160     0685  3000               	movlw	0
  4161     0686  00F5               	movwf	memset@n+1
  4162     0687  3182  22C2  3186   	fcall	_memset
  4163     068A                     l2313:
  4164                           
  4165                           ;ADXL345.c: 192:     msg.data[0] = 0x04;
  4166     068A  3004               	movlw	4
  4167     068B  0020               	movlb	0	; select bank0
  4168     068C  00A1               	movwf	setupForImpact@msg+1
  4169     068D                     l2315:
  4170     068D  0022               	movlb	2	; select bank2
  4171     068E  120E               	bcf	14,4	;volatile
  4172     068F                     l2317:
  4173                           
  4174                           ;ADXL345.c: 194:     SPI1_BufferWrite(&msg, 2);
  4175     068F  3020               	movlw	low setupForImpact@msg
  4176     0690  00F0               	movwf	SPI1_BufferWrite@bufferData
  4177     0691  3000               	movlw	high setupForImpact@msg
  4178     0692  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4179     0693  3002               	movlw	2
  4180     0694  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4181     0695  3000               	movlw	0
  4182     0696  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4183     0697  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4184     069A                     l2319:
  4185     069A  0022               	movlb	2	; select bank2
  4186     069B  160E               	bsf	14,4	;volatile
  4187     069C                     l2321:
  4188     069C  120E               	bcf	14,4	;volatile
  4189     069D                     l2323:
  4190                           
  4191                           ;ADXL345.c: 199:     SPI1_ByteExchange(0x30);
  4192     069D  3030               	movlw	48
  4193     069E  00F0               	movwf	SPI1_ByteExchange@byteData
  4194     069F  3182  2288  3186   	fcall	_SPI1_ByteExchange
  4195     06A2                     l2325:
  4196     06A2  0022               	movlb	2	; select bank2
  4197     06A3  160E               	bsf	14,4	;volatile
  4198     06A4                     l2327:
  4199                           
  4200                           ;ADXL345.c: 202:     SPI1_Close();
  4201     06A4  3182  2244  3186   	fcall	_SPI1_Close
  4202     06A7                     l410:
  4203     06A7  0008               	return
  4204     06A8                     __end_of_setupForImpact:
  4205                           
  4206                           	psect	text17
  4207     057A                     __ptext17:	
  4208 ;; *************** function _setupForFreefall *****************
  4209 ;; Defined at:
  4210 ;;		line 109 in file "ADXL345.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  msg            26    0[BANK0 ] struct Message
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;Total ram usage:       26 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 2
  4231 ;; This function calls:
  4232 ;;		_SPI1_BufferWrite
  4233 ;;		_SPI1_ByteExchange
  4234 ;;		_SPI1_Close
  4235 ;;		_SPI1_Open
  4236 ;;		_memcpy
  4237 ;;		_memset
  4238 ;; This function is called by:
  4239 ;;		_MotionEventHandler
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243     057A                     _setupForFreefall:	
  4244                           ;psect for function _setupForFreefall
  4245                           
  4246     057A                     l2221:	
  4247                           ;incstack = 0
  4248                           ; Regs used in _setupForFreefall: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4249                           
  4250                           
  4251                           ;ADXL345.c: 110:     while (!SPI1_Open(ADXL345)) {
  4252     057A  2D7E               	goto	l2225
  4253     057B                     l2223:
  4254                           
  4255                           ;ADXL345.c: 111:         SPI1_Close();
  4256     057B  3182  2244  3185   	fcall	_SPI1_Close
  4257     057E                     l2225:
  4258                           
  4259                           ;ADXL345.c: 110:     while (!SPI1_Open(ADXL345)) {
  4260     057E  01F6               	clrf	SPI1_Open@spiConfigIndex
  4261     057F  3184  2480  3185   	fcall	_SPI1_Open
  4262     0582  3A00               	xorlw	0
  4263     0583  1903               	skipnz
  4264     0584  2D86               	goto	u661
  4265     0585  2D87               	goto	u660
  4266     0586                     u661:
  4267     0586  2D7B               	goto	l2223
  4268     0587                     u660:
  4269     0587                     l364:	
  4270                           ;ADXL345.c: 115:     do { LATCbits.LATC4 = 0; } while(0);
  4271                           
  4272     0587  0022               	movlb	2	; select bank2
  4273     0588  120E               	bcf	14,4	;volatile
  4274     0589                     l2227:
  4275                           
  4276                           ;ADXL345.c: 116:     SPI1_ByteExchange(0x30);
  4277     0589  3030               	movlw	48
  4278     058A  00F0               	movwf	SPI1_ByteExchange@byteData
  4279     058B  3182  2288  3185   	fcall	_SPI1_ByteExchange
  4280     058E                     l2229:
  4281     058E  0022               	movlb	2	; select bank2
  4282     058F  160E               	bsf	14,4	;volatile
  4283     0590                     l2231:
  4284                           
  4285                           ;ADXL345.c: 125:     struct Message msg;;ADXL345.c: 126:     msg.registerAddr = 0x24;
  4286     0590  3024               	movlw	36
  4287     0591  0020               	movlb	0	; select bank0
  4288     0592  00A0               	movwf	setupForFreefall@msg
  4289     0593                     l2233:
  4290                           
  4291                           ;ADXL345.c: 127:     memset(msg.data, 0, sizeof(msg.data));
  4292     0593  3021               	movlw	low (setupForFreefall@msg+1)
  4293     0594  00F0               	movwf	memset@dest
  4294     0595  3000               	movlw	high (setupForFreefall@msg+1)
  4295     0596  00F1               	movwf	memset@dest+1
  4296     0597  3000               	movlw	0
  4297     0598  00F2               	movwf	memset@c
  4298     0599  00F3               	movwf	memset@c+1
  4299     059A  3019               	movlw	25
  4300     059B  00F4               	movwf	memset@n
  4301     059C  3000               	movlw	0
  4302     059D  00F5               	movwf	memset@n+1
  4303     059E  3182  22C2  3185   	fcall	_memset
  4304     05A1                     l2235:
  4305                           
  4306                           ;ADXL345.c: 128:     memcpy(msg.data, fall_init, sizeof(fall_init));
  4307     05A1  3021               	movlw	low (setupForFreefall@msg+1)
  4308     05A2  00F0               	movwf	memcpy@d1
  4309     05A3  3000               	movlw	high (setupForFreefall@msg+1)
  4310     05A4  00F1               	movwf	memcpy@d1+1
  4311     05A5  304D               	movlw	low (_fall_init| (0+32768))
  4312     05A6  00F2               	movwf	memcpy@s1
  4313     05A7  3088               	movlw	high (_fall_init| (0+32768))
  4314     05A8  00F3               	movwf	memcpy@s1+1
  4315     05A9  3004               	movlw	4
  4316     05AA  00F4               	movwf	memcpy@n
  4317     05AB  3000               	movlw	0
  4318     05AC  00F5               	movwf	memcpy@n+1
  4319     05AD  3183  238C  3185   	fcall	_memcpy
  4320     05B0                     l2237:
  4321     05B0  0022               	movlb	2	; select bank2
  4322     05B1  120E               	bcf	14,4	;volatile
  4323     05B2                     l2239:
  4324                           
  4325                           ;ADXL345.c: 130:     SPI1_BufferWrite(&msg, sizeof(fall_init) + 1);
  4326     05B2  3020               	movlw	low setupForFreefall@msg
  4327     05B3  00F0               	movwf	SPI1_BufferWrite@bufferData
  4328     05B4  3000               	movlw	high setupForFreefall@msg
  4329     05B5  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4330     05B6  3005               	movlw	5
  4331     05B7  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4332     05B8  3000               	movlw	0
  4333     05B9  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4334     05BA  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4335     05BD                     l2241:
  4336     05BD  0022               	movlb	2	; select bank2
  4337     05BE  160E               	bsf	14,4	;volatile
  4338     05BF                     l2243:
  4339                           
  4340                           ;ADXL345.c: 134:     msg.registerAddr = 0x2C;
  4341     05BF  302C               	movlw	44
  4342     05C0  0020               	movlb	0	; select bank0
  4343     05C1  00A0               	movwf	setupForFreefall@msg
  4344     05C2                     l2245:
  4345                           
  4346                           ;ADXL345.c: 135:     memset(msg.data, 0, sizeof(msg.data));
  4347     05C2  3021               	movlw	low (setupForFreefall@msg+1)
  4348     05C3  00F0               	movwf	memset@dest
  4349     05C4  3000               	movlw	high (setupForFreefall@msg+1)
  4350     05C5  00F1               	movwf	memset@dest+1
  4351     05C6  3000               	movlw	0
  4352     05C7  00F2               	movwf	memset@c
  4353     05C8  00F3               	movwf	memset@c+1
  4354     05C9  3019               	movlw	25
  4355     05CA  00F4               	movwf	memset@n
  4356     05CB  3000               	movlw	0
  4357     05CC  00F5               	movwf	memset@n+1
  4358     05CD  3182  22C2  3185   	fcall	_memset
  4359     05D0                     l2247:
  4360                           
  4361                           ;ADXL345.c: 136:     msg.data[0] = 0x17;
  4362     05D0  3017               	movlw	23
  4363     05D1  0020               	movlb	0	; select bank0
  4364     05D2  00A1               	movwf	setupForFreefall@msg+1
  4365     05D3                     l2249:
  4366     05D3  0022               	movlb	2	; select bank2
  4367     05D4  120E               	bcf	14,4	;volatile
  4368     05D5                     l2251:
  4369                           
  4370                           ;ADXL345.c: 138:     SPI1_BufferWrite(&msg, 2);
  4371     05D5  3020               	movlw	low setupForFreefall@msg
  4372     05D6  00F0               	movwf	SPI1_BufferWrite@bufferData
  4373     05D7  3000               	movlw	high setupForFreefall@msg
  4374     05D8  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4375     05D9  3002               	movlw	2
  4376     05DA  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4377     05DB  3000               	movlw	0
  4378     05DC  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4379     05DD  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4380     05E0                     l2253:
  4381     05E0  0022               	movlb	2	; select bank2
  4382     05E1  160E               	bsf	14,4	;volatile
  4383     05E2                     l2255:
  4384                           
  4385                           ;ADXL345.c: 142:     msg.registerAddr = 0x2E;
  4386     05E2  302E               	movlw	46
  4387     05E3  0020               	movlb	0	; select bank0
  4388     05E4  00A0               	movwf	setupForFreefall@msg
  4389     05E5                     l2257:
  4390                           
  4391                           ;ADXL345.c: 143:     memset(msg.data, 0, sizeof(msg.data));
  4392     05E5  3021               	movlw	low (setupForFreefall@msg+1)
  4393     05E6  00F0               	movwf	memset@dest
  4394     05E7  3000               	movlw	high (setupForFreefall@msg+1)
  4395     05E8  00F1               	movwf	memset@dest+1
  4396     05E9  3000               	movlw	0
  4397     05EA  00F2               	movwf	memset@c
  4398     05EB  00F3               	movwf	memset@c+1
  4399     05EC  3019               	movlw	25
  4400     05ED  00F4               	movwf	memset@n
  4401     05EE  3000               	movlw	0
  4402     05EF  00F5               	movwf	memset@n+1
  4403     05F0  3182  22C2  3185   	fcall	_memset
  4404     05F3                     l2259:
  4405                           
  4406                           ;ADXL345.c: 144:     msg.data[0] = 0x10;
  4407     05F3  3010               	movlw	16
  4408     05F4  0020               	movlb	0	; select bank0
  4409     05F5  00A1               	movwf	setupForFreefall@msg+1
  4410     05F6                     l2261:
  4411     05F6  0022               	movlb	2	; select bank2
  4412     05F7  120E               	bcf	14,4	;volatile
  4413     05F8                     l2263:
  4414                           
  4415                           ;ADXL345.c: 146:     SPI1_BufferWrite(&msg, 2);
  4416     05F8  3020               	movlw	low setupForFreefall@msg
  4417     05F9  00F0               	movwf	SPI1_BufferWrite@bufferData
  4418     05FA  3000               	movlw	high setupForFreefall@msg
  4419     05FB  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4420     05FC  3002               	movlw	2
  4421     05FD  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4422     05FE  3000               	movlw	0
  4423     05FF  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4424     0600  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4425     0603                     l2265:
  4426     0603  0022               	movlb	2	; select bank2
  4427     0604  160E               	bsf	14,4	;volatile
  4428     0605                     l2267:
  4429     0605  120E               	bcf	14,4	;volatile
  4430     0606                     l2269:
  4431                           
  4432                           ;ADXL345.c: 151:     SPI1_ByteExchange(0x30);
  4433     0606  3030               	movlw	48
  4434     0607  00F0               	movwf	SPI1_ByteExchange@byteData
  4435     0608  3182  2288  3185   	fcall	_SPI1_ByteExchange
  4436     060B                     l2271:
  4437     060B  0022               	movlb	2	; select bank2
  4438     060C  160E               	bsf	14,4	;volatile
  4439     060D                     l2273:
  4440                           
  4441                           ;ADXL345.c: 154:     SPI1_Close();
  4442     060D  3182  2244  3185   	fcall	_SPI1_Close
  4443     0610                     l384:
  4444     0610  0008               	return
  4445     0611                     __end_of_setupForFreefall:
  4446                           
  4447                           	psect	text18
  4448     073F                     __ptext18:	
  4449 ;; *************** function _orientation_Up *****************
  4450 ;; Defined at:
  4451 ;;		line 253 in file "ADXL345.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  msg            26    8[BANK0 ] struct Message
  4456 ;;  acc_data        6    0[BANK0 ] char [6]
  4457 ;;  g_deltaZ        2   38[BANK0 ] short 
  4458 ;;  g_deltaY        2   36[BANK0 ] short 
  4459 ;;  g_deltaX        2   34[BANK0 ] short 
  4460 ;;  g_magnitude     2    6[BANK0 ] int 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      _Bool 
  4463 ;; Registers used:
  4464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Totals:         2      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;Total ram usage:       42 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 2
  4477 ;; This function calls:
  4478 ;;		_SPI1_BufferRead
  4479 ;;		_SPI1_BufferWrite
  4480 ;;		_SPI1_ByteWrite
  4481 ;;		_SPI1_Close
  4482 ;;		_SPI1_Open
  4483 ;;		___wmul
  4484 ;; This function is called by:
  4485 ;;		_MotionEventHandler
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489     073F                     _orientation_Up:	
  4490                           ;psect for function _orientation_Up
  4491                           
  4492     073F                     l2383:	
  4493                           ;incstack = 0
  4494                           ; Regs used in _orientation_Up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4495                           
  4496                           
  4497                           ;ADXL345.c: 254:     while (!SPI1_Open(ADXL345)) {
  4498     073F  2F43               	goto	l2387
  4499     0740                     l2385:
  4500                           
  4501                           ;ADXL345.c: 255:         SPI1_Close();
  4502     0740  3182  2244  3187   	fcall	_SPI1_Close
  4503     0743                     l2387:
  4504                           
  4505                           ;ADXL345.c: 254:     while (!SPI1_Open(ADXL345)) {
  4506     0743  01F6               	clrf	SPI1_Open@spiConfigIndex
  4507     0744  3184  2480  3187   	fcall	_SPI1_Open
  4508     0747  3A00               	xorlw	0
  4509     0748  1903               	skipnz
  4510     0749  2F4B               	goto	u691
  4511     074A  2F4C               	goto	u690
  4512     074B                     u691:
  4513     074B  2F40               	goto	l2385
  4514     074C                     u690:
  4515     074C                     l2389:
  4516                           
  4517                           ;ADXL345.c: 257:     int8_t acc_data[6] = {0};
  4518     074C  3020               	movlw	low orientation_Up@acc_data
  4519     074D  0086               	movwf	6
  4520     074E  3000               	movlw	high orientation_Up@acc_data
  4521     074F  0087               	movwf	7
  4522     0750  3006               	movlw	6
  4523     0751  00FA               	movwf	??_orientation_Up
  4524     0752  3000               	movlw	0
  4525     0753                     u700:
  4526     0753  001E               	movwi fsr1++
  4527     0754  0BFA               	decfsz	??_orientation_Up,f
  4528     0755  2F53               	goto	u700
  4529     0756                     l2391:
  4530                           
  4531                           ;ADXL345.c: 258:     int16_t g_deltaX, g_deltaY, g_deltaZ;;ADXL345.c: 260:     struct Me
      +                          ssage msg;;ADXL345.c: 261:     msg.registerAddr = 0x31;
  4532     0756  3031               	movlw	49
  4533     0757  0020               	movlb	0	; select bank0
  4534     0758  00A8               	movwf	orientation_Up@msg
  4535     0759                     l2393:
  4536                           
  4537                           ;ADXL345.c: 262:     msg.data[0] = 0x0C;
  4538     0759  300C               	movlw	12
  4539     075A  00A9               	movwf	orientation_Up@msg+1
  4540     075B                     l2395:
  4541     075B  0022               	movlb	2	; select bank2
  4542     075C  120E               	bcf	14,4	;volatile
  4543     075D                     l2397:
  4544                           
  4545                           ;ADXL345.c: 264:     SPI1_BufferWrite(&msg, 2);
  4546     075D  3028               	movlw	low orientation_Up@msg
  4547     075E  00F0               	movwf	SPI1_BufferWrite@bufferData
  4548     075F  3000               	movlw	high orientation_Up@msg
  4549     0760  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4550     0761  3002               	movlw	2
  4551     0762  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4552     0763  3000               	movlw	0
  4553     0764  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4554     0765  3183  234A  3187   	fcall	_SPI1_BufferWrite
  4555     0768                     l2399:
  4556     0768  0022               	movlb	2	; select bank2
  4557     0769  160E               	bsf	14,4	;volatile
  4558     076A                     l2401:
  4559                           
  4560                           ;ADXL345.c: 267:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4561     076A  300D               	movlw	13
  4562     076B  00FA               	movwf	??_orientation_Up
  4563     076C  30FC               	movlw	252
  4564     076D                     u917:
  4565     076D  0B89               	decfsz	9,f
  4566     076E  2F6D               	goto	u917
  4567     076F  0BFA               	decfsz	??_orientation_Up,f
  4568     0770  2F6D               	goto	u917
  4569     0771                     l2403:
  4570     0771  0022               	movlb	2	; select bank2
  4571     0772  120E               	bcf	14,4	;volatile
  4572     0773                     l2405:
  4573                           
  4574                           ;ADXL345.c: 271:     SPI1_ByteWrite(0x32);
  4575     0773  3032               	movlw	50
  4576     0774  00F0               	movwf	SPI1_ByteWrite@byteData
  4577     0775  3182  224A  3187   	fcall	_SPI1_ByteWrite
  4578     0778                     l2407:
  4579                           
  4580                           ;ADXL345.c: 272:     SPI1_BufferRead((uint8_t *)acc_data, sizeof(acc_data));
  4581     0778  3020               	movlw	(low (orientation_Up@acc_data| 0))& (0+255)
  4582     0779  00F0               	movwf	SPI1_BufferRead@bufferData
  4583     077A  3006               	movlw	6
  4584     077B  00F1               	movwf	SPI1_BufferRead@bufferSize
  4585     077C  3000               	movlw	0
  4586     077D  00F2               	movwf	SPI1_BufferRead@bufferSize+1
  4587     077E  3183  236A  3187   	fcall	_SPI1_BufferRead
  4588     0781                     l2409:
  4589     0781  0022               	movlb	2	; select bank2
  4590     0782  160E               	bsf	14,4	;volatile
  4591     0783                     l2411:
  4592                           
  4593                           ;ADXL345.c: 274:     SPI1_Close();
  4594     0783  3182  2244  3187   	fcall	_SPI1_Close
  4595     0786                     l2413:
  4596                           
  4597                           ;ADXL345.c: 277:     g_deltaX = (int8_t)acc_data[1] - 0x40;
  4598     0786  0020               	movlb	0	; select bank0
  4599     0787  0821               	movf	orientation_Up@acc_data+1,w
  4600     0788  00FA               	movwf	??_orientation_Up
  4601     0789  01FB               	clrf	??_orientation_Up+1
  4602     078A  1BFA               	btfsc	??_orientation_Up,7
  4603     078B  03FB               	decf	??_orientation_Up+1,f
  4604     078C  087A               	movf	??_orientation_Up,w
  4605     078D  3EC0               	addlw	192
  4606     078E  00C2               	movwf	orientation_Up@g_deltaX
  4607     078F  30FF               	movlw	255
  4608     0790  3D7B               	addwfc	??_orientation_Up+1,w
  4609     0791  00C3               	movwf	orientation_Up@g_deltaX+1
  4610     0792                     l2415:
  4611                           
  4612                           ;ADXL345.c: 278:     g_deltaY = (int8_t)acc_data[3];
  4613     0792  0823               	movf	orientation_Up@acc_data+3,w
  4614     0793  00C4               	movwf	orientation_Up@g_deltaY
  4615     0794  01C5               	clrf	orientation_Up@g_deltaY+1
  4616     0795  1BC4               	btfsc	orientation_Up@g_deltaY,7
  4617     0796  03C5               	decf	orientation_Up@g_deltaY+1,f
  4618     0797                     l2417:
  4619                           
  4620                           ;ADXL345.c: 279:     g_deltaZ = (int8_t)acc_data[5];
  4621     0797  0825               	movf	orientation_Up@acc_data+5,w
  4622     0798  00C6               	movwf	orientation_Up@g_deltaZ
  4623     0799  01C7               	clrf	orientation_Up@g_deltaZ+1
  4624     079A  1BC6               	btfsc	orientation_Up@g_deltaZ,7
  4625     079B  03C7               	decf	orientation_Up@g_deltaZ+1,f
  4626     079C                     l2419:
  4627                           
  4628                           ;ADXL345.c: 282:     g_deltaX *= g_deltaX;
  4629     079C  0843               	movf	orientation_Up@g_deltaX+1,w
  4630     079D  00F1               	movwf	___wmul@multiplier+1
  4631     079E  0842               	movf	orientation_Up@g_deltaX,w
  4632     079F  00F0               	movwf	___wmul@multiplier
  4633     07A0  0843               	movf	orientation_Up@g_deltaX+1,w
  4634     07A1  00F3               	movwf	___wmul@multiplicand+1
  4635     07A2  0842               	movf	orientation_Up@g_deltaX,w
  4636     07A3  00F2               	movwf	___wmul@multiplicand
  4637     07A4  3183  232B  3187   	fcall	___wmul
  4638     07A7  0871               	movf	?___wmul+1,w
  4639     07A8  0020               	movlb	0	; select bank0
  4640     07A9  00C3               	movwf	orientation_Up@g_deltaX+1
  4641     07AA  0870               	movf	?___wmul,w
  4642     07AB  00C2               	movwf	orientation_Up@g_deltaX
  4643     07AC                     l2421:
  4644                           
  4645                           ;ADXL345.c: 283:     g_deltaY *= g_deltaY;
  4646     07AC  0845               	movf	orientation_Up@g_deltaY+1,w
  4647     07AD  00F1               	movwf	___wmul@multiplier+1
  4648     07AE  0844               	movf	orientation_Up@g_deltaY,w
  4649     07AF  00F0               	movwf	___wmul@multiplier
  4650     07B0  0845               	movf	orientation_Up@g_deltaY+1,w
  4651     07B1  00F3               	movwf	___wmul@multiplicand+1
  4652     07B2  0844               	movf	orientation_Up@g_deltaY,w
  4653     07B3  00F2               	movwf	___wmul@multiplicand
  4654     07B4  3183  232B  3187   	fcall	___wmul
  4655     07B7  0871               	movf	?___wmul+1,w
  4656     07B8  0020               	movlb	0	; select bank0
  4657     07B9  00C5               	movwf	orientation_Up@g_deltaY+1
  4658     07BA  0870               	movf	?___wmul,w
  4659     07BB  00C4               	movwf	orientation_Up@g_deltaY
  4660     07BC                     l2423:
  4661                           
  4662                           ;ADXL345.c: 284:     g_deltaZ *= g_deltaZ;
  4663     07BC  0847               	movf	orientation_Up@g_deltaZ+1,w
  4664     07BD  00F1               	movwf	___wmul@multiplier+1
  4665     07BE  0846               	movf	orientation_Up@g_deltaZ,w
  4666     07BF  00F0               	movwf	___wmul@multiplier
  4667     07C0  0847               	movf	orientation_Up@g_deltaZ+1,w
  4668     07C1  00F3               	movwf	___wmul@multiplicand+1
  4669     07C2  0846               	movf	orientation_Up@g_deltaZ,w
  4670     07C3  00F2               	movwf	___wmul@multiplicand
  4671     07C4  3183  232B  3187   	fcall	___wmul
  4672     07C7  0871               	movf	?___wmul+1,w
  4673     07C8  0020               	movlb	0	; select bank0
  4674     07C9  00C7               	movwf	orientation_Up@g_deltaZ+1
  4675     07CA  0870               	movf	?___wmul,w
  4676     07CB  00C6               	movwf	orientation_Up@g_deltaZ
  4677     07CC                     l2425:
  4678                           
  4679                           ;ADXL345.c: 285:     int g_magnitude = g_deltaX + g_deltaY + g_deltaZ;
  4680     07CC  0844               	movf	orientation_Up@g_deltaY,w
  4681     07CD  0742               	addwf	orientation_Up@g_deltaX,w
  4682     07CE  00FA               	movwf	??_orientation_Up
  4683     07CF  0845               	movf	orientation_Up@g_deltaY+1,w
  4684     07D0  3D43               	addwfc	orientation_Up@g_deltaX+1,w
  4685     07D1  00FB               	movwf	??_orientation_Up+1
  4686     07D2  0846               	movf	orientation_Up@g_deltaZ,w
  4687     07D3  077A               	addwf	??_orientation_Up,w
  4688     07D4  00A6               	movwf	orientation_Up@g_magnitude
  4689     07D5  0847               	movf	orientation_Up@g_deltaZ+1,w
  4690     07D6  3D7B               	addwfc	??_orientation_Up+1,w
  4691     07D7  00A7               	movwf	orientation_Up@g_magnitude+1
  4692     07D8                     l2427:
  4693                           
  4694                           ;ADXL345.c: 286:     if (g_magnitude < acceleration_squared_threshold) {
  4695     07D8  3004               	movlw	4
  4696     07D9  0227               	subwf	orientation_Up@g_magnitude+1,w
  4697     07DA  30B0               	movlw	176
  4698     07DB  1903               	skipnz
  4699     07DC  0226               	subwf	orientation_Up@g_magnitude,w
  4700     07DD  1803               	skipnc
  4701     07DE  2FE0               	goto	u711
  4702     07DF  2FE1               	goto	u710
  4703     07E0                     u711:
  4704     07E0  2FE3               	goto	l2435
  4705     07E1                     u710:
  4706     07E1                     l2429:
  4707                           
  4708                           ;ADXL345.c: 287:         return 1;
  4709     07E1  3001               	movlw	1
  4710     07E2  2FE4               	goto	l453
  4711     07E3                     l2435:
  4712                           
  4713                           ;ADXL345.c: 289:         return 0;
  4714     07E3  3000               	movlw	0
  4715     07E4                     l453:
  4716     07E4  0008               	return
  4717     07E5                     __end_of_orientation_Up:
  4718                           
  4719                           	psect	text19
  4720     024A                     __ptext19:	
  4721 ;; *************** function _SPI1_ByteWrite *****************
  4722 ;; Defined at:
  4723 ;;		line 172 in file "mcc_generated_files/spi/src/mssp.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  byteData        1    0[COMMON] unsigned char 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_orientation_Up
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750     024A                     _SPI1_ByteWrite:	
  4751                           ;psect for function _SPI1_ByteWrite
  4752                           
  4753     024A                     l2133:	
  4754                           ;incstack = 0
  4755                           ; Regs used in _SPI1_ByteWrite: [wreg]
  4756                           
  4757                           
  4758                           ;mcc_generated_files/spi/src/mssp.c: 172: void SPI1_ByteWrite(uint8_t byteData);mcc_gene
      +                          rated_files/spi/src/mssp.c: 173: {;mcc_generated_files/spi/src/mssp.c: 174:     SSP1BUF 
      +                          = byteData;
  4759     024A  0870               	movf	SPI1_ByteWrite@byteData,w
  4760     024B  0024               	movlb	4	; select bank4
  4761     024C  0091               	movwf	17	;volatile
  4762     024D                     l94:
  4763     024D  0008               	return
  4764     024E                     __end_of_SPI1_ByteWrite:
  4765                           
  4766                           	psect	text20
  4767     036A                     __ptext20:	
  4768 ;; *************** function _SPI1_BufferRead *****************
  4769 ;; Defined at:
  4770 ;;		line 143 in file "mcc_generated_files/spi/src/mssp.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  bufferData      1    0[COMMON] PTR void 
  4773 ;;		 -> orientation_Up@acc_data(6), 
  4774 ;;  bufferSize      2    1[COMMON] unsigned int 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  bufferInputS    2    3[COMMON] unsigned int 
  4777 ;;  bufferInput     1    5[COMMON] PTR unsigned char 
  4778 ;;		 -> orientation_Up@acc_data(6), 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4788 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;Total ram usage:        6 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_orientation_Up
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801     036A                     _SPI1_BufferRead:	
  4802                           ;psect for function _SPI1_BufferRead
  4803                           
  4804     036A                     l2115:	
  4805                           ;incstack = 0
  4806                           ; Regs used in _SPI1_BufferRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  4807                           
  4808                           
  4809                           ;mcc_generated_files/spi/src/mssp.c: 143: void SPI1_BufferRead(void *bufferData, size_t 
      +                          bufferSize);mcc_generated_files/spi/src/mssp.c: 144: {;mcc_generated_files/spi/src/mssp.
      +                          c: 145:     uint8_t *bufferInput = bufferData;
  4810     036A  0870               	movf	SPI1_BufferRead@bufferData,w
  4811     036B  00F5               	movwf	SPI1_BufferRead@bufferInput
  4812                           
  4813                           ;mcc_generated_files/spi/src/mssp.c: 146:     size_t bufferInputSize = bufferSize;
  4814     036C  0872               	movf	SPI1_BufferRead@bufferSize+1,w
  4815     036D  00F4               	movwf	SPI1_BufferRead@bufferInputSize+1
  4816     036E  0871               	movf	SPI1_BufferRead@bufferSize,w
  4817     036F  00F3               	movwf	SPI1_BufferRead@bufferInputSize
  4818                           
  4819                           ;mcc_generated_files/spi/src/mssp.c: 147:     while (0U != bufferInputSize)
  4820     0370  2B85               	goto	l2125
  4821     0371                     l2117:
  4822                           
  4823                           ;mcc_generated_files/spi/src/mssp.c: 148:     {;mcc_generated_files/spi/src/mssp.c: 149:
      +                                   SSP1BUF = 0x00;
  4824     0371  0024               	movlb	4	; select bank4
  4825     0372  0191               	clrf	17	;volatile
  4826     0373                     l81:	
  4827                           ;mcc_generated_files/spi/src/mssp.c: 151:         {;mcc_generated_files/spi/src/mssp.c: 
      +                          153:         }
  4828                           
  4829                           
  4830                           ;mcc_generated_files/spi/src/mssp.c: 150:         while (!PIR1bits.SSP1IF)
  4831     0373  0020               	movlb	0	; select bank0
  4832     0374  1D91               	btfss	17,3	;volatile
  4833     0375  2B77               	goto	u561
  4834     0376  2B78               	goto	u560
  4835     0377                     u561:
  4836     0377  2B73               	goto	l81
  4837     0378                     u560:
  4838     0378                     l83:
  4839                           
  4840                           ;mcc_generated_files/spi/src/mssp.c: 154:         PIR1bits.SSP1IF = 0;
  4841     0378  1191               	bcf	17,3	;volatile
  4842     0379                     l2119:
  4843                           
  4844                           ;mcc_generated_files/spi/src/mssp.c: 155:         *bufferInput = SSP1BUF;
  4845     0379  0875               	movf	SPI1_BufferRead@bufferInput,w
  4846     037A  0086               	movwf	6
  4847     037B  0187               	clrf	7
  4848     037C  0024               	movlb	4	; select bank4
  4849     037D  0811               	movf	17,w	;volatile
  4850     037E  0081               	movwf	1
  4851     037F                     l2121:
  4852                           
  4853                           ;mcc_generated_files/spi/src/mssp.c: 156:         bufferInput++;
  4854     037F  3001               	movlw	1
  4855     0380  07F5               	addwf	SPI1_BufferRead@bufferInput,f
  4856     0381                     l2123:
  4857                           
  4858                           ;mcc_generated_files/spi/src/mssp.c: 157:         bufferInputSize--;
  4859     0381  3001               	movlw	1
  4860     0382  02F3               	subwf	SPI1_BufferRead@bufferInputSize,f
  4861     0383  3000               	movlw	0
  4862     0384  3BF4               	subwfb	SPI1_BufferRead@bufferInputSize+1,f
  4863     0385                     l2125:
  4864                           
  4865                           ;mcc_generated_files/spi/src/mssp.c: 147:     while (0U != bufferInputSize)
  4866     0385  0873               	movf	SPI1_BufferRead@bufferInputSize,w
  4867     0386  0474               	iorwf	SPI1_BufferRead@bufferInputSize+1,w
  4868     0387  1D03               	btfss	3,2
  4869     0388  2B8A               	goto	u571
  4870     0389  2B8B               	goto	u570
  4871     038A                     u571:
  4872     038A  2B71               	goto	l2117
  4873     038B                     u570:
  4874     038B                     l85:
  4875     038B  0008               	return
  4876     038C                     __end_of_SPI1_BufferRead:
  4877                           
  4878                           	psect	text21
  4879     02D9                     __ptext21:	
  4880 ;; *************** function _ADXL345_ClearInterrupt *****************
  4881 ;; Defined at:
  4882 ;;		line 96 in file "ADXL345.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; Hardware stack levels required when called: 2
  4903 ;; This function calls:
  4904 ;;		_SPI1_ByteExchange
  4905 ;;		_SPI1_Close
  4906 ;;		_SPI1_Open
  4907 ;; This function is called by:
  4908 ;;		_MotionEventHandler
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912     02D9                     _ADXL345_ClearInterrupt:	
  4913                           ;psect for function _ADXL345_ClearInterrupt
  4914                           
  4915     02D9                     l2209:	
  4916                           ;incstack = 0
  4917                           ; Regs used in _ADXL345_ClearInterrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4918                           
  4919                           
  4920                           ;ADXL345.c: 97:     while (!SPI1_Open(ADXL345)) {
  4921     02D9  2ADD               	goto	l2213
  4922     02DA                     l2211:
  4923                           
  4924                           ;ADXL345.c: 98:         SPI1_Close();
  4925     02DA  3182  2244  3182   	fcall	_SPI1_Close
  4926     02DD                     l2213:
  4927                           
  4928                           ;ADXL345.c: 97:     while (!SPI1_Open(ADXL345)) {
  4929     02DD  01F6               	clrf	SPI1_Open@spiConfigIndex
  4930     02DE  3184  2480  3182   	fcall	_SPI1_Open
  4931     02E1  3A00               	xorlw	0
  4932     02E2  1903               	skipnz
  4933     02E3  2AE5               	goto	u651
  4934     02E4  2AE6               	goto	u650
  4935     02E5                     u651:
  4936     02E5  2ADA               	goto	l2211
  4937     02E6                     u650:
  4938     02E6                     l354:	
  4939                           ;ADXL345.c: 102:     do { LATCbits.LATC4 = 0; } while(0);
  4940                           
  4941     02E6  0022               	movlb	2	; select bank2
  4942     02E7  120E               	bcf	14,4	;volatile
  4943     02E8                     l2215:
  4944                           
  4945                           ;ADXL345.c: 103:     SPI1_ByteExchange(0x30);
  4946     02E8  3030               	movlw	48
  4947     02E9  00F0               	movwf	SPI1_ByteExchange@byteData
  4948     02EA  3182  2288  3182   	fcall	_SPI1_ByteExchange
  4949     02ED                     l2217:
  4950     02ED  0022               	movlb	2	; select bank2
  4951     02EE  160E               	bsf	14,4	;volatile
  4952     02EF                     l2219:
  4953                           
  4954                           ;ADXL345.c: 106:     SPI1_Close();
  4955     02EF  3182  2244  3182   	fcall	_SPI1_Close
  4956     02F2                     l358:
  4957     02F2  0008               	return
  4958     02F3                     __end_of_ADXL345_ClearInterrupt:
  4959                           
  4960                           	psect	text22
  4961     030D                     __ptext22:	
  4962 ;; *************** function _ADXL345_validation *****************
  4963 ;; Defined at:
  4964 ;;		line 55 in file "ADXL345.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  passed          1   10[COMMON] _Bool 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      _Bool 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;Total ram usage:        1 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 2
  4985 ;; This function calls:
  4986 ;;		_SPI1_ByteExchange
  4987 ;;		_SPI1_Close
  4988 ;;		_SPI1_Open
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994     030D                     _ADXL345_validation:	
  4995                           ;psect for function _ADXL345_validation
  4996                           
  4997     030D                     l2453:	
  4998                           ;incstack = 0
  4999                           ; Regs used in _ADXL345_validation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5000                           
  5001                           
  5002                           ;ADXL345.c: 56:     _Bool passed = 0;
  5003     030D  01FA               	clrf	ADXL345_validation@passed
  5004     030E                     l2455:
  5005                           
  5006                           ;ADXL345.c: 57:     if (SPI1_Open(ADXL345)) {
  5007     030E  01F6               	clrf	SPI1_Open@spiConfigIndex
  5008     030F  3184  2480  3183   	fcall	_SPI1_Open
  5009     0312  3A00               	xorlw	0
  5010     0313  1903               	skipnz
  5011     0314  2B16               	goto	u731
  5012     0315  2B17               	goto	u730
  5013     0316                     u731:
  5014     0316  2B26               	goto	l2461
  5015     0317                     u730:
  5016     0317                     l325:	
  5017                           ;ADXL345.c: 58:         do { LATCbits.LATC4 = 0; } while(0);
  5018                           
  5019     0317  0022               	movlb	2	; select bank2
  5020     0318  120E               	bcf	14,4	;volatile
  5021     0319                     l2457:
  5022                           
  5023                           ;ADXL345.c: 59:         if (SPI1_ByteExchange(0x00) == 0xE5) {
  5024     0319  01F0               	clrf	SPI1_ByteExchange@byteData
  5025     031A  3182  2288  3183   	fcall	_SPI1_ByteExchange
  5026     031D  3AE5               	xorlw	229
  5027     031E  1D03               	skipz
  5028     031F  2B21               	goto	u741
  5029     0320  2B22               	goto	u740
  5030     0321                     u741:
  5031     0321  2B24               	goto	l328
  5032     0322                     u740:
  5033     0322                     l2459:
  5034                           
  5035                           ;ADXL345.c: 60:             passed = 1;
  5036     0322  3001               	movlw	1
  5037     0323  00FA               	movwf	ADXL345_validation@passed
  5038     0324                     l328:	
  5039                           ;ADXL345.c: 62:         do { LATCbits.LATC4 = 1; } while(0);
  5040                           
  5041     0324  0022               	movlb	2	; select bank2
  5042     0325  160E               	bsf	14,4	;volatile
  5043     0326                     l2461:
  5044                           
  5045                           ;ADXL345.c: 64:     SPI1_Close();
  5046     0326  3182  2244  3183   	fcall	_SPI1_Close
  5047     0329                     l2463:
  5048                           
  5049                           ;ADXL345.c: 65:     return passed;
  5050     0329  087A               	movf	ADXL345_validation@passed,w
  5051     032A                     l330:
  5052     032A  0008               	return
  5053     032B                     __end_of_ADXL345_validation:
  5054                           
  5055                           	psect	text23
  5056     0288                     __ptext23:	
  5057 ;; *************** function _SPI1_ByteExchange *****************
  5058 ;; Defined at:
  5059 ;;		line 161 in file "mcc_generated_files/spi/src/mssp.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  byteData        1    0[COMMON] unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      unsigned char 
  5066 ;; Registers used:
  5067 ;;		wreg
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_ADXL345_validation
  5083 ;;		_ADXL345_ClearInterrupt
  5084 ;;		_setupForFreefall
  5085 ;;		_setupForImpact
  5086 ;;		_setupForInactivity
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090     0288                     _SPI1_ByteExchange:	
  5091                           ;psect for function _SPI1_ByteExchange
  5092                           
  5093     0288                     l2127:	
  5094                           ;incstack = 0
  5095                           ; Regs used in _SPI1_ByteExchange: [wreg]
  5096                           
  5097                           
  5098                           ;mcc_generated_files/spi/src/mssp.c: 161: uint8_t SPI1_ByteExchange(uint8_t byteData);mc
      +                          c_generated_files/spi/src/mssp.c: 162: {;mcc_generated_files/spi/src/mssp.c: 163:     SS
      +                          P1BUF = byteData;
  5099     0288  0870               	movf	SPI1_ByteExchange@byteData,w
  5100     0289  0024               	movlb	4	; select bank4
  5101     028A  0091               	movwf	17	;volatile
  5102     028B                     l88:	
  5103                           ;mcc_generated_files/spi/src/mssp.c: 165:     {;mcc_generated_files/spi/src/mssp.c: 167:
      +                               }
  5104                           
  5105                           
  5106                           ;mcc_generated_files/spi/src/mssp.c: 164:     while (!PIR1bits.SSP1IF)
  5107     028B  0020               	movlb	0	; select bank0
  5108     028C  1D91               	btfss	17,3	;volatile
  5109     028D  2A8F               	goto	u581
  5110     028E  2A90               	goto	u580
  5111     028F                     u581:
  5112     028F  2A8B               	goto	l88
  5113     0290                     u580:
  5114     0290                     l90:
  5115                           
  5116                           ;mcc_generated_files/spi/src/mssp.c: 168:     PIR1bits.SSP1IF = 0;
  5117     0290  1191               	bcf	17,3	;volatile
  5118     0291                     l2129:
  5119                           
  5120                           ;mcc_generated_files/spi/src/mssp.c: 169:     return SSP1BUF;
  5121     0291  0024               	movlb	4	; select bank4
  5122     0292  0811               	movf	17,w	;volatile
  5123     0293                     l91:
  5124     0293  0008               	return
  5125     0294                     __end_of_SPI1_ByteExchange:
  5126                           
  5127                           	psect	text24
  5128     041D                     __ptext24:	
  5129 ;; *************** function _ADXL345_init *****************
  5130 ;; Defined at:
  5131 ;;		line 31 in file "ADXL345.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;		None
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  msg            26    0[BANK0 ] struct Message
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      _Bool 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;Total ram usage:       26 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 2
  5152 ;; This function calls:
  5153 ;;		_SPI1_BufferWrite
  5154 ;;		_SPI1_Close
  5155 ;;		_SPI1_Open
  5156 ;;		_memcpy
  5157 ;;		_memset
  5158 ;; This function is called by:
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163     041D                     _ADXL345_init:	
  5164                           ;psect for function _ADXL345_init
  5165                           
  5166     041D                     l2467:	
  5167                           ;incstack = 0
  5168                           ; Regs used in _ADXL345_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5169                           
  5170                           
  5171                           ;ADXL345.c: 32:     while (!SPI1_Open(ADXL345)) {
  5172     041D  2C21               	goto	l2471
  5173     041E                     l2469:
  5174                           
  5175                           ;ADXL345.c: 33:         SPI1_Close();
  5176     041E  3182  2244  3184   	fcall	_SPI1_Close
  5177     0421                     l2471:
  5178                           
  5179                           ;ADXL345.c: 32:     while (!SPI1_Open(ADXL345)) {
  5180     0421  01F6               	clrf	SPI1_Open@spiConfigIndex
  5181     0422  3184  2480  3184   	fcall	_SPI1_Open
  5182     0425  3A00               	xorlw	0
  5183     0426  1903               	skipnz
  5184     0427  2C29               	goto	u751
  5185     0428  2C2A               	goto	u750
  5186     0429                     u751:
  5187     0429  2C1E               	goto	l2469
  5188     042A                     u750:
  5189     042A                     l312:
  5190                           
  5191                           ;ADXL345.c: 36:     struct Message msg;;ADXL345.c: 37:     msg.registerAddr = 0x24;
  5192     042A  3024               	movlw	36
  5193     042B  0020               	movlb	0	; select bank0
  5194     042C  00A0               	movwf	ADXL345_init@msg
  5195     042D                     l2473:
  5196                           
  5197                           ;ADXL345.c: 38:     memset(msg.data, 0, sizeof(msg.data));
  5198     042D  3021               	movlw	low (ADXL345_init@msg+1)
  5199     042E  00F0               	movwf	memset@dest
  5200     042F  3000               	movlw	high (ADXL345_init@msg+1)
  5201     0430  00F1               	movwf	memset@dest+1
  5202     0431  3000               	movlw	0
  5203     0432  00F2               	movwf	memset@c
  5204     0433  00F3               	movwf	memset@c+1
  5205     0434  3019               	movlw	25
  5206     0435  00F4               	movwf	memset@n
  5207     0436  3000               	movlw	0
  5208     0437  00F5               	movwf	memset@n+1
  5209     0438  3182  22C2  3184   	fcall	_memset
  5210     043B                     l2475:
  5211                           
  5212                           ;ADXL345.c: 39:     memcpy(msg.data, ADXL345_init_settings, sizeof(ADXL345_init_settings
      +                          ));
  5213     043B  3021               	movlw	low (ADXL345_init@msg+1)
  5214     043C  00F0               	movwf	memcpy@d1
  5215     043D  3000               	movlw	high (ADXL345_init@msg+1)
  5216     043E  00F1               	movwf	memcpy@d1+1
  5217     043F  3039               	movlw	low (_ADXL345_init_settings| (0+32768))
  5218     0440  00F2               	movwf	memcpy@s1
  5219     0441  3088               	movlw	high (_ADXL345_init_settings| (0+32768))
  5220     0442  00F3               	movwf	memcpy@s1+1
  5221     0443  300C               	movlw	12
  5222     0444  00F4               	movwf	memcpy@n
  5223     0445  3000               	movlw	0
  5224     0446  00F5               	movwf	memcpy@n+1
  5225     0447  3183  238C  3184   	fcall	_memcpy
  5226     044A                     l2477:
  5227     044A  0022               	movlb	2	; select bank2
  5228     044B  120E               	bcf	14,4	;volatile
  5229     044C                     l2479:
  5230                           
  5231                           ;ADXL345.c: 41:     SPI1_BufferWrite(&msg, sizeof(ADXL345_init_settings) + 1);
  5232     044C  3020               	movlw	low ADXL345_init@msg
  5233     044D  00F0               	movwf	SPI1_BufferWrite@bufferData
  5234     044E  3000               	movlw	high ADXL345_init@msg
  5235     044F  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  5236     0450  300D               	movlw	13
  5237     0451  00F2               	movwf	SPI1_BufferWrite@bufferSize
  5238     0452  3000               	movlw	0
  5239     0453  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  5240     0454  3183  234A  3184   	fcall	_SPI1_BufferWrite
  5241     0457                     l2481:
  5242     0457  0022               	movlb	2	; select bank2
  5243     0458  160E               	bsf	14,4	;volatile
  5244     0459                     l2483:
  5245                           
  5246                           ;ADXL345.c: 44:     msg.registerAddr = 0x31;
  5247     0459  3031               	movlw	49
  5248     045A  0020               	movlb	0	; select bank0
  5249     045B  00A0               	movwf	ADXL345_init@msg
  5250     045C                     l2485:
  5251                           
  5252                           ;ADXL345.c: 45:     memset(msg.data, 0, sizeof(msg.data));
  5253     045C  3021               	movlw	low (ADXL345_init@msg+1)
  5254     045D  00F0               	movwf	memset@dest
  5255     045E  3000               	movlw	high (ADXL345_init@msg+1)
  5256     045F  00F1               	movwf	memset@dest+1
  5257     0460  3000               	movlw	0
  5258     0461  00F2               	movwf	memset@c
  5259     0462  00F3               	movwf	memset@c+1
  5260     0463  3019               	movlw	25
  5261     0464  00F4               	movwf	memset@n
  5262     0465  3000               	movlw	0
  5263     0466  00F5               	movwf	memset@n+1
  5264     0467  3182  22C2  3184   	fcall	_memset
  5265     046A                     l2487:
  5266                           
  5267                           ;ADXL345.c: 46:     msg.data[0] = 0x0B;
  5268     046A  300B               	movlw	11
  5269     046B  0020               	movlb	0	; select bank0
  5270     046C  00A1               	movwf	ADXL345_init@msg+1
  5271     046D                     l2489:
  5272     046D  0022               	movlb	2	; select bank2
  5273     046E  120E               	bcf	14,4	;volatile
  5274     046F                     l2491:
  5275                           
  5276                           ;ADXL345.c: 48:     SPI1_BufferWrite(&msg, 2);
  5277     046F  3020               	movlw	low ADXL345_init@msg
  5278     0470  00F0               	movwf	SPI1_BufferWrite@bufferData
  5279     0471  3000               	movlw	high ADXL345_init@msg
  5280     0472  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  5281     0473  3002               	movlw	2
  5282     0474  00F2               	movwf	SPI1_BufferWrite@bufferSize
  5283     0475  3000               	movlw	0
  5284     0476  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  5285     0477  3183  234A  3184   	fcall	_SPI1_BufferWrite
  5286     047A                     l2493:
  5287     047A  0022               	movlb	2	; select bank2
  5288     047B  160E               	bsf	14,4	;volatile
  5289     047C                     l2495:
  5290                           
  5291                           ;ADXL345.c: 51:     SPI1_Close();
  5292     047C  3182  2244  3184   	fcall	_SPI1_Close
  5293     047F                     l321:
  5294     047F  0008               	return
  5295     0480                     __end_of_ADXL345_init:
  5296                           
  5297                           	psect	text25
  5298     02C2                     __ptext25:	
  5299 ;; *************** function _memset *****************
  5300 ;; Defined at:
  5301 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  dest            2    0[COMMON] PTR void 
  5304 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), saveOffsets@msg(26), 
  5305 ;;		 -> ADXL345_init@msg(26), 
  5306 ;;  c               2    2[COMMON] int 
  5307 ;;  n               2    4[COMMON] unsigned int 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  p               1    6[COMMON] PTR unsigned char 
  5310 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), saveOffsets@msg(26), 
  5311 ;;		 -> ADXL345_init@msg(26), 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  2    0[COMMON] PTR void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5321 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;Total ram usage:        7 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_ADXL345_init
  5331 ;;		_setupForFreefall
  5332 ;;		_setupForImpact
  5333 ;;		_setupForInactivity
  5334 ;;		_saveOffsets
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338     02C2                     _memset:	
  5339                           ;psect for function _memset
  5340                           
  5341     02C2                     l2145:	
  5342                           ;incstack = 0
  5343                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5344                           
  5345     02C2  0870               	movf	memset@dest,w
  5346     02C3  00F6               	movwf	memset@p
  5347     02C4  2ACC               	goto	l2151
  5348     02C5                     l2147:
  5349     02C5  0876               	movf	memset@p,w
  5350     02C6  0086               	movwf	6
  5351     02C7  0187               	clrf	7
  5352     02C8  0872               	movf	memset@c,w
  5353     02C9  0081               	movwf	1
  5354     02CA                     l2149:
  5355     02CA  3001               	movlw	1
  5356     02CB  07F6               	addwf	memset@p,f
  5357     02CC                     l2151:
  5358     02CC  3001               	movlw	1
  5359     02CD  02F4               	subwf	memset@n,f
  5360     02CE  3000               	movlw	0
  5361     02CF  3BF5               	subwfb	memset@n+1,f
  5362     02D0  0A74               	incf	memset@n,w
  5363     02D1  1D03               	skipz
  5364     02D2  2AD7               	goto	u621
  5365     02D3  0A75               	incf	memset@n+1,w
  5366     02D4  1D03               	btfss	3,2
  5367     02D5  2AD7               	goto	u621
  5368     02D6  2AD8               	goto	u620
  5369     02D7                     u621:
  5370     02D7  2AC5               	goto	l2147
  5371     02D8                     u620:
  5372     02D8                     l1233:
  5373     02D8  0008               	return
  5374     02D9                     __end_of_memset:
  5375                           
  5376                           	psect	text26
  5377     038C                     __ptext26:	
  5378 ;; *************** function _memcpy *****************
  5379 ;; Defined at:
  5380 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  d1              2    0[COMMON] PTR void 
  5383 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), ADXL345_init@msg(26), 
  5384 ;;  s1              2    2[COMMON] PTR const void 
  5385 ;;		 -> no_motion_init(4), impact_init(4), fall_init(4), ADXL345_init_settings(12), 
  5386 ;;  n               2    4[COMMON] unsigned int 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  s               2    6[COMMON] PTR const unsigned char 
  5389 ;;		 -> no_motion_init(4), impact_init(4), fall_init(4), ADXL345_init_settings(12), 
  5390 ;;  d               1    9[COMMON] PTR unsigned char 
  5391 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), ADXL345_init@msg(26), 
  5392 ;;  tmp             1    8[COMMON] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    0[COMMON] PTR void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5402 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;Total ram usage:       10 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_ADXL345_init
  5412 ;;		_setupForFreefall
  5413 ;;		_setupForImpact
  5414 ;;		_setupForInactivity
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418     038C                     _memcpy:	
  5419                           ;psect for function _memcpy
  5420                           
  5421     038C                     l2153:	
  5422                           ;incstack = 0
  5423                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5424                           
  5425     038C  0873               	movf	memcpy@s1+1,w
  5426     038D  00F7               	movwf	memcpy@s+1
  5427     038E  0872               	movf	memcpy@s1,w
  5428     038F  00F6               	movwf	memcpy@s
  5429     0390                     l2155:
  5430     0390  0870               	movf	memcpy@d1,w
  5431     0391  00F9               	movwf	memcpy@d
  5432     0392  2BA4               	goto	l2165
  5433     0393                     l2157:
  5434     0393  0876               	movf	memcpy@s,w
  5435     0394  0084               	movwf	4
  5436     0395  0877               	movf	memcpy@s+1,w
  5437     0396  0085               	movwf	5
  5438     0397  0800               	movf	0,w	;code access
  5439     0398  00F8               	movwf	memcpy@tmp
  5440     0399                     l2159:
  5441     0399  3001               	movlw	1
  5442     039A  07F6               	addwf	memcpy@s,f
  5443     039B  3000               	movlw	0
  5444     039C  3DF7               	addwfc	memcpy@s+1,f
  5445     039D                     l2161:
  5446     039D  0879               	movf	memcpy@d,w
  5447     039E  0086               	movwf	6
  5448     039F  0187               	clrf	7
  5449     03A0  0878               	movf	memcpy@tmp,w
  5450     03A1  0081               	movwf	1
  5451     03A2                     l2163:
  5452     03A2  3001               	movlw	1
  5453     03A3  07F9               	addwf	memcpy@d,f
  5454     03A4                     l2165:
  5455     03A4  3001               	movlw	1
  5456     03A5  02F4               	subwf	memcpy@n,f
  5457     03A6  3000               	movlw	0
  5458     03A7  3BF5               	subwfb	memcpy@n+1,f
  5459     03A8  0A74               	incf	memcpy@n,w
  5460     03A9  1D03               	skipz
  5461     03AA  2BAF               	goto	u631
  5462     03AB  0A75               	incf	memcpy@n+1,w
  5463     03AC  1D03               	btfss	3,2
  5464     03AD  2BAF               	goto	u631
  5465     03AE  2BB0               	goto	u630
  5466     03AF                     u631:
  5467     03AF  2B93               	goto	l2157
  5468     03B0                     u630:
  5469     03B0                     l1227:
  5470     03B0  0008               	return
  5471     03B1                     __end_of_memcpy:
  5472                           
  5473                           	psect	text27
  5474     0480                     __ptext27:	
  5475 ;; *************** function _SPI1_Open *****************
  5476 ;; Defined at:
  5477 ;;		line 82 in file "mcc_generated_files/spi/src/mssp.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  returnValue     1    9[COMMON] _Bool 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      _Bool 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5491 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;Total ram usage:        4 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 1
  5498 ;; This function calls:
  5499 ;;		___wmul
  5500 ;; This function is called by:
  5501 ;;		_ADXL345_init
  5502 ;;		_ADXL345_validation
  5503 ;;		_ADXL345_ClearInterrupt
  5504 ;;		_setupForFreefall
  5505 ;;		_setupForImpact
  5506 ;;		_setupForInactivity
  5507 ;;		_orientation_Up
  5508 ;;		_saveOffsets
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512     0480                     _SPI1_Open:	
  5513                           ;psect for function _SPI1_Open
  5514                           
  5515     0480                     l2085:	
  5516                           ;incstack = 0
  5517                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5518                           
  5519     0480                     l2087:
  5520                           
  5521                           ;mcc_generated_files/spi/src/mssp.c: 85:     if (SSP1CON1bits.SSPEN == 0)
  5522     0480  0024               	movlb	4	; select bank4
  5523     0481  1A95               	btfsc	21,5	;volatile
  5524     0482  2C84               	goto	u531
  5525     0483  2C85               	goto	u530
  5526     0484                     u531:
  5527     0484  2CE9               	goto	l2095
  5528     0485                     u530:
  5529     0485                     l2089:
  5530                           
  5531                           ;mcc_generated_files/spi/src/mssp.c: 86:     {;mcc_generated_files/spi/src/mssp.c: 87:  
      +                                 SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  5532     0485  0876               	movf	SPI1_Open@spiConfigIndex,w
  5533     0486  00F7               	movwf	??_SPI1_Open
  5534     0487  01F8               	clrf	??_SPI1_Open+1
  5535     0488  0877               	movf	??_SPI1_Open,w
  5536     0489  00F0               	movwf	___wmul@multiplier
  5537     048A  0878               	movf	??_SPI1_Open+1,w
  5538     048B  00F1               	movwf	___wmul@multiplier+1
  5539     048C  3005               	movlw	5
  5540     048D  00F2               	movwf	___wmul@multiplicand
  5541     048E  3000               	movlw	0
  5542     048F  00F3               	movwf	___wmul@multiplicand+1
  5543     0490  3183  232B  3184   	fcall	___wmul
  5544     0493  301C               	movlw	low _spi1_configuration
  5545     0494  0770               	addwf	?___wmul,w
  5546     0495  0084               	movwf	4
  5547     0496  3008               	movlw	high _spi1_configuration
  5548     0497  3D71               	addwfc	?___wmul+1,w
  5549     0498  3880               	iorlw	128
  5550     0499  0085               	movwf	5
  5551     049A  0800               	movf	0,w	;code access
  5552     049B  0024               	movlb	4	; select bank4
  5553     049C  0094               	movwf	20	;volatile
  5554                           
  5555                           ;mcc_generated_files/spi/src/mssp.c: 88:         SSP1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
  5556     049D  0876               	movf	SPI1_Open@spiConfigIndex,w
  5557     049E  00F7               	movwf	??_SPI1_Open
  5558     049F  01F8               	clrf	??_SPI1_Open+1
  5559     04A0  0877               	movf	??_SPI1_Open,w
  5560     04A1  00F0               	movwf	___wmul@multiplier
  5561     04A2  0878               	movf	??_SPI1_Open+1,w
  5562     04A3  00F1               	movwf	___wmul@multiplier+1
  5563     04A4  3005               	movlw	5
  5564     04A5  00F2               	movwf	___wmul@multiplicand
  5565     04A6  3000               	movlw	0
  5566     04A7  00F3               	movwf	___wmul@multiplicand+1
  5567     04A8  3183  232B  3184   	fcall	___wmul
  5568     04AB  301D               	movlw	low (_spi1_configuration+1)
  5569     04AC  0770               	addwf	?___wmul,w
  5570     04AD  0084               	movwf	4
  5571     04AE  3008               	movlw	high (_spi1_configuration+1)
  5572     04AF  3D71               	addwfc	?___wmul+1,w
  5573     04B0  3880               	iorlw	128
  5574     04B1  0085               	movwf	5
  5575     04B2  0800               	movf	0,w	;code access
  5576     04B3  0024               	movlb	4	; select bank4
  5577     04B4  0095               	movwf	21	;volatile
  5578                           
  5579                           ;mcc_generated_files/spi/src/mssp.c: 89:         SSP1CON3 = spi1_configuration[spiConfig
      +                          Index].con3;
  5580     04B5  0876               	movf	SPI1_Open@spiConfigIndex,w
  5581     04B6  00F7               	movwf	??_SPI1_Open
  5582     04B7  01F8               	clrf	??_SPI1_Open+1
  5583     04B8  0877               	movf	??_SPI1_Open,w
  5584     04B9  00F0               	movwf	___wmul@multiplier
  5585     04BA  0878               	movf	??_SPI1_Open+1,w
  5586     04BB  00F1               	movwf	___wmul@multiplier+1
  5587     04BC  3005               	movlw	5
  5588     04BD  00F2               	movwf	___wmul@multiplicand
  5589     04BE  3000               	movlw	0
  5590     04BF  00F3               	movwf	___wmul@multiplicand+1
  5591     04C0  3183  232B  3184   	fcall	___wmul
  5592     04C3  301E               	movlw	low (_spi1_configuration+2)
  5593     04C4  0770               	addwf	?___wmul,w
  5594     04C5  0084               	movwf	4
  5595     04C6  3008               	movlw	high (_spi1_configuration+2)
  5596     04C7  3D71               	addwfc	?___wmul+1,w
  5597     04C8  3880               	iorlw	128
  5598     04C9  0085               	movwf	5
  5599     04CA  0800               	movf	0,w	;code access
  5600     04CB  0024               	movlb	4	; select bank4
  5601     04CC  0097               	movwf	23	;volatile
  5602                           
  5603                           ;mcc_generated_files/spi/src/mssp.c: 90:         SSP1ADD = spi1_configuration[spiConfigI
      +                          ndex].baud;
  5604     04CD  0876               	movf	SPI1_Open@spiConfigIndex,w
  5605     04CE  00F7               	movwf	??_SPI1_Open
  5606     04CF  01F8               	clrf	??_SPI1_Open+1
  5607     04D0  0877               	movf	??_SPI1_Open,w
  5608     04D1  00F0               	movwf	___wmul@multiplier
  5609     04D2  0878               	movf	??_SPI1_Open+1,w
  5610     04D3  00F1               	movwf	___wmul@multiplier+1
  5611     04D4  3005               	movlw	5
  5612     04D5  00F2               	movwf	___wmul@multiplicand
  5613     04D6  3000               	movlw	0
  5614     04D7  00F3               	movwf	___wmul@multiplicand+1
  5615     04D8  3183  232B  3184   	fcall	___wmul
  5616     04DB  301F               	movlw	low (_spi1_configuration+3)
  5617     04DC  0770               	addwf	?___wmul,w
  5618     04DD  0084               	movwf	4
  5619     04DE  3008               	movlw	high (_spi1_configuration+3)
  5620     04DF  3D71               	addwfc	?___wmul+1,w
  5621     04E0  3880               	iorlw	128
  5622     04E1  0085               	movwf	5
  5623     04E2  0800               	movf	0,w	;code access
  5624     04E3  0024               	movlb	4	; select bank4
  5625     04E4  0092               	movwf	18	;volatile
  5626     04E5                     l2091:
  5627                           
  5628                           ;mcc_generated_files/spi/src/mssp.c: 92:         SSP1CON1bits.SSPEN = 1;
  5629     04E5  1695               	bsf	21,5	;volatile
  5630     04E6                     l2093:
  5631                           
  5632                           ;mcc_generated_files/spi/src/mssp.c: 94:         returnValue = 1;
  5633     04E6  3001               	movlw	1
  5634     04E7  00F9               	movwf	SPI1_Open@returnValue
  5635                           
  5636                           ;mcc_generated_files/spi/src/mssp.c: 95:     }
  5637     04E8  2CEA               	goto	l2097
  5638     04E9                     l2095:
  5639                           
  5640                           ;mcc_generated_files/spi/src/mssp.c: 97:     {;mcc_generated_files/spi/src/mssp.c: 98:  
      +                                 returnValue = 0;
  5641     04E9  01F9               	clrf	SPI1_Open@returnValue
  5642     04EA                     l2097:
  5643                           
  5644                           ;mcc_generated_files/spi/src/mssp.c: 100:     return returnValue;
  5645     04EA  0879               	movf	SPI1_Open@returnValue,w
  5646     04EB                     l55:
  5647     04EB  0008               	return
  5648     04EC                     __end_of_SPI1_Open:
  5649                           
  5650                           	psect	text28
  5651     032B                     __ptext28:	
  5652 ;; *************** function ___wmul *****************
  5653 ;; Defined at:
  5654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  multiplier      2    0[COMMON] unsigned int 
  5657 ;;  multiplicand    2    2[COMMON] unsigned int 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  product         2    4[COMMON] unsigned int 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  2    0[COMMON] unsigned int 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;Total ram usage:        6 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_SPI1_Open
  5679 ;;		_orientation_Up
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683     032B                     ___wmul:	
  5684                           ;psect for function ___wmul
  5685                           
  5686     032B                     l2071:	
  5687                           ;incstack = 0
  5688                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5689                           
  5690     032B  01F4               	clrf	___wmul@product
  5691     032C  01F5               	clrf	___wmul@product+1
  5692     032D                     l2073:
  5693     032D  1C70               	btfss	___wmul@multiplier,0
  5694     032E  2B30               	goto	u491
  5695     032F  2B31               	goto	u490
  5696     0330                     u491:
  5697     0330  2B35               	goto	l765
  5698     0331                     u490:
  5699     0331                     l2075:
  5700     0331  0872               	movf	___wmul@multiplicand,w
  5701     0332  07F4               	addwf	___wmul@product,f
  5702     0333  0873               	movf	___wmul@multiplicand+1,w
  5703     0334  3DF5               	addwfc	___wmul@product+1,f
  5704     0335                     l765:
  5705     0335  3001               	movlw	1
  5706     0336                     u505:
  5707     0336  35F2               	lslf	___wmul@multiplicand,f
  5708     0337  0DF3               	rlf	___wmul@multiplicand+1,f
  5709     0338  0B89               	decfsz	9,f
  5710     0339  2B36               	goto	u505
  5711     033A                     l2077:
  5712     033A  3001               	movlw	1
  5713     033B                     u515:
  5714     033B  36F1               	lsrf	___wmul@multiplier+1,f
  5715     033C  0CF0               	rrf	___wmul@multiplier,f
  5716     033D  0B89               	decfsz	9,f
  5717     033E  2B3B               	goto	u515
  5718     033F                     l2079:
  5719     033F  0870               	movf	___wmul@multiplier,w
  5720     0340  0471               	iorwf	___wmul@multiplier+1,w
  5721     0341  1D03               	btfss	3,2
  5722     0342  2B44               	goto	u521
  5723     0343  2B45               	goto	u520
  5724     0344                     u521:
  5725     0344  2B2D               	goto	l2073
  5726     0345                     u520:
  5727     0345                     l2081:
  5728     0345  0875               	movf	___wmul@product+1,w
  5729     0346  00F1               	movwf	?___wmul+1
  5730     0347  0874               	movf	___wmul@product,w
  5731     0348  00F0               	movwf	?___wmul
  5732     0349                     l767:
  5733     0349  0008               	return
  5734     034A                     __end_of___wmul:
  5735                           
  5736                           	psect	text29
  5737     0244                     __ptext29:	
  5738 ;; *************** function _SPI1_Close *****************
  5739 ;; Defined at:
  5740 ;;		line 103 in file "mcc_generated_files/spi/src/mssp.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		None
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_ADXL345_init
  5764 ;;		_ADXL345_validation
  5765 ;;		_ADXL345_ClearInterrupt
  5766 ;;		_setupForFreefall
  5767 ;;		_setupForImpact
  5768 ;;		_setupForInactivity
  5769 ;;		_orientation_Up
  5770 ;;		_saveOffsets
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774     0244                     _SPI1_Close:	
  5775                           ;psect for function _SPI1_Close
  5776                           
  5777     0244                     l2101:	
  5778                           ;incstack = 0
  5779                           ; Regs used in _SPI1_Close: []
  5780                           
  5781                           
  5782                           ;mcc_generated_files/spi/src/mssp.c: 105:     SSP1CON1bits.SSPEN = 0;
  5783     0244  0024               	movlb	4	; select bank4
  5784     0245  1295               	bcf	21,5	;volatile
  5785     0246                     l58:
  5786     0246  0008               	return
  5787     0247                     __end_of_SPI1_Close:
  5788                           
  5789                           	psect	text30
  5790     034A                     __ptext30:	
  5791 ;; *************** function _SPI1_BufferWrite *****************
  5792 ;; Defined at:
  5793 ;;		line 126 in file "mcc_generated_files/spi/src/mssp.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  bufferData      2    0[COMMON] PTR void 
  5796 ;;		 -> orientation_Up@msg(26), setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), 
  5797 ;;		 -> saveOffsets@msg(26), ADXL345_init@msg(26), 
  5798 ;;  bufferSize      2    2[COMMON] unsigned int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  bufferInputS    2    4[COMMON] unsigned int 
  5801 ;;  bufferInput     1    6[COMMON] PTR unsigned char 
  5802 ;;		 -> orientation_Up@msg(26), setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), 
  5803 ;;		 -> saveOffsets@msg(26), ADXL345_init@msg(26), 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;Total ram usage:        7 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_ADXL345_init
  5823 ;;		_setupForFreefall
  5824 ;;		_setupForImpact
  5825 ;;		_setupForInactivity
  5826 ;;		_orientation_Up
  5827 ;;		_saveOffsets
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831     034A                     _SPI1_BufferWrite:	
  5832                           ;psect for function _SPI1_BufferWrite
  5833                           
  5834     034A                     l2103:	
  5835                           ;incstack = 0
  5836                           ; Regs used in _SPI1_BufferWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
  5837                           
  5838                           
  5839                           ;mcc_generated_files/spi/src/mssp.c: 126: void SPI1_BufferWrite(void *bufferData, size_t
      +                           bufferSize);mcc_generated_files/spi/src/mssp.c: 127: {;mcc_generated_files/spi/src/mssp
      +                          .c: 128:     uint8_t *bufferInput = bufferData;
  5840     034A  0870               	movf	SPI1_BufferWrite@bufferData,w
  5841     034B  00F6               	movwf	SPI1_BufferWrite@bufferInput
  5842     034C                     l2105:
  5843                           
  5844                           ;mcc_generated_files/spi/src/mssp.c: 129:     size_t bufferInputSize = bufferSize;
  5845     034C  0873               	movf	SPI1_BufferWrite@bufferSize+1,w
  5846     034D  00F5               	movwf	SPI1_BufferWrite@bufferInputSize+1
  5847     034E  0872               	movf	SPI1_BufferWrite@bufferSize,w
  5848     034F  00F4               	movwf	SPI1_BufferWrite@bufferInputSize
  5849                           
  5850                           ;mcc_generated_files/spi/src/mssp.c: 130:     while (0U != bufferInputSize)
  5851     0350  2B63               	goto	l2113
  5852     0351                     l2107:
  5853                           
  5854                           ;mcc_generated_files/spi/src/mssp.c: 131:     {;mcc_generated_files/spi/src/mssp.c: 132:
      +                                   SSP1BUF = *bufferInput;
  5855     0351  0876               	movf	SPI1_BufferWrite@bufferInput,w
  5856     0352  0086               	movwf	6
  5857     0353  0187               	clrf	7
  5858     0354  0801               	movf	1,w
  5859     0355  0024               	movlb	4	; select bank4
  5860     0356  0091               	movwf	17	;volatile
  5861     0357                     l72:	
  5862                           ;mcc_generated_files/spi/src/mssp.c: 134:         {;mcc_generated_files/spi/src/mssp.c: 
      +                          136:         }
  5863                           
  5864                           
  5865                           ;mcc_generated_files/spi/src/mssp.c: 133:         while (!PIR1bits.SSP1IF)
  5866     0357  0020               	movlb	0	; select bank0
  5867     0358  1D91               	btfss	17,3	;volatile
  5868     0359  2B5B               	goto	u541
  5869     035A  2B5C               	goto	u540
  5870     035B                     u541:
  5871     035B  2B57               	goto	l72
  5872     035C                     u540:
  5873     035C                     l74:
  5874                           
  5875                           ;mcc_generated_files/spi/src/mssp.c: 137:         PIR1bits.SSP1IF = 0;
  5876     035C  1191               	bcf	17,3	;volatile
  5877     035D                     l2109:
  5878                           
  5879                           ;mcc_generated_files/spi/src/mssp.c: 138:         bufferInput++;
  5880     035D  3001               	movlw	1
  5881     035E  07F6               	addwf	SPI1_BufferWrite@bufferInput,f
  5882     035F                     l2111:
  5883                           
  5884                           ;mcc_generated_files/spi/src/mssp.c: 139:         bufferInputSize--;
  5885     035F  3001               	movlw	1
  5886     0360  02F4               	subwf	SPI1_BufferWrite@bufferInputSize,f
  5887     0361  3000               	movlw	0
  5888     0362  3BF5               	subwfb	SPI1_BufferWrite@bufferInputSize+1,f
  5889     0363                     l2113:
  5890                           
  5891                           ;mcc_generated_files/spi/src/mssp.c: 130:     while (0U != bufferInputSize)
  5892     0363  0874               	movf	SPI1_BufferWrite@bufferInputSize,w
  5893     0364  0475               	iorwf	SPI1_BufferWrite@bufferInputSize+1,w
  5894     0365  1D03               	btfss	3,2
  5895     0366  2B68               	goto	u551
  5896     0367  2B69               	goto	u550
  5897     0368                     u551:
  5898     0368  2B51               	goto	l2107
  5899     0369                     u550:
  5900     0369                     l76:
  5901     0369  0008               	return
  5902     036A                     __end_of_SPI1_BufferWrite:
  5903     0002                     ___latbits      equ	2
  5904     007E                     btemp           set	126	;btemp
  5905     007E                     wtemp0          set	126
  5906     22F0                     __pbssBIGRAM    equ	8944
  5907                           
  5908                           	psect	config
  5909                           
  5910                           ;Config register CONFIG1 @ 0x8007
  5911                           ;	Oscillator Selection
  5912                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5913                           ;	Watchdog Timer Enable
  5914                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5915                           ;	Power-up Timer Enable
  5916                           ;	PWRTE = ON, PWRT enabled
  5917                           ;	MCLR Pin Function Select
  5918                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5919                           ;	Flash Program Memory Code Protection
  5920                           ;	CP = OFF, Program memory code protection is disabled
  5921                           ;	Data Memory Code Protection
  5922                           ;	CPD = OFF, Data memory code protection is disabled
  5923                           ;	Brown-out Reset Enable
  5924                           ;	BOREN = ON, Brown-out Reset enabled
  5925                           ;	Clock Out Enable
  5926                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5927                           ;	Internal/External Switchover
  5928                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5929                           ;	Fail-Safe Clock Monitor Enable
  5930                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5931     8007                     	org	32775
  5932     8007  3FCC               	dw	16332
  5933                           
  5934                           ;Config register CONFIG2 @ 0x8008
  5935                           ;	Flash Memory Self-Write Protection
  5936                           ;	WRT = OFF, Write protection off
  5937                           ;	PLL Enable
  5938                           ;	PLLEN = OFF, 4x PLL disabled
  5939                           ;	Stack Overflow/Underflow Reset Enable
  5940                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5941                           ;	Brown-out Reset Voltage Selection
  5942                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5943                           ;	In-Circuit Debugger Mode
  5944                           ;	DEBUG = 0x1, unprogrammed default
  5945                           ;	Low-Voltage Programming Enable
  5946                           ;	LVP = ON, Low-voltage programming enabled
  5947     8008                     	org	32776
  5948     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    83
    Data        0
    BSS         13
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     46      61
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    eeprom_interface$ByteRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteRead(), 

    eeprom_interface$ByteWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteWrite(), 

    eeprom_interface$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NVM_IsBusy(), 

    eeprom_interface$PageRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$PageWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$SequentialRead	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$SequentialWrite	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    memcpy@d1	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 12
		 -> ADXL345_init_settings(CODE[12]), fall_init(CODE[4]), impact_init(CODE[4]), no_motion_init(CODE[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 12
		 -> ADXL345_init_settings(CODE[12]), fall_init(CODE[4]), impact_init(CODE[4]), no_motion_init(CODE[4]), 

    memset@dest	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    memset@p	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    MotionEventHandler@state	PTR enum E2687 size(1) Largest target is 1
		 -> main@current_state(BANK0[1]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(1) Largest target is 6
		 -> orientation_Up@acc_data(BANK0[6]), 

    S38$6$0	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), 
		 -> setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S885$4$1	PTR unsigned char  size(2) Largest target is 0

    S885$5$1	PTR unsigned char  size(2) Largest target is 0

    S885EEPROM_INTERFACE$ByteRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteRead(), 

    S885EEPROM_INTERFACE$ByteWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteWrite(), 

    S885EEPROM_INTERFACE$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NVM_IsBusy(), 

    S885EEPROM_INTERFACE$PageRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S885EEPROM_INTERFACE$PageWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S885EEPROM_INTERFACE$SequentialRead	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S885EEPROM_INTERFACE$SequentialWrite	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    sp__memcpy	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    sp__memset	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    SPI1_BufferRead@bufferData	PTR void  size(1) Largest target is 6
		 -> orientation_Up@acc_data(BANK0[6]), 

    SPI1_BufferRead@bufferInput	PTR unsigned char  size(1) Largest target is 6
		 -> orientation_Up@acc_data(BANK0[6]), 

    SPI1_BufferWrite@bufferData	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), 
		 -> setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    SPI1_BufferWrite@bufferInput	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), 
		 -> setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    SPI1_Host$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Host$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Host$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Host$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Host$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Host$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Host$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Host$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Host$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Host$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Host$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Host$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SW1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), NULL(), 

    SW1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_SW1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _SW1_ISR->_SW1_DefaultInterruptHandler
    _MotionEventHandler->_orientation_Up
    _setupForInactivity->_SPI1_Open
    _setupForInactivity->_memcpy
    _setupForImpact->_SPI1_Open
    _setupForImpact->_memcpy
    _setupForFreefall->_SPI1_Open
    _setupForFreefall->_memcpy
    _orientation_Up->_SPI1_Open
    _ADXL345_ClearInterrupt->_SPI1_Open
    _ADXL345_validation->_SPI1_Open
    _ADXL345_init->_SPI1_Open
    _ADXL345_init->_memcpy
    _SPI1_Open->___wmul

Critical Paths under _main in BANK0

    _main->_MotionEventHandler
    _MotionEventHandler->_orientation_Up

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5169
                                             43 BANK0      3     3      0
                       _ADXL345_init
                 _ADXL345_validation
                 _MotionEventHandler
                    _PIN_MANAGER_IOC
                    _SPI1_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      23
            _SW1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _SW1_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_IOC                                      0     0      0       0
                            _SW1_ISR
 ---------------------------------------------------------------------------------
 (2) _SW1_ISR                                              0     0      0       0
                                NULL *
        _SW1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (3) _SW1_DefaultInterruptHandler                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MotionEventHandler                                   3     2      1    4025
                                             40 BANK0      3     2      1
             _ADXL345_ClearInterrupt
                     _orientation_Up
                   _setupForFreefall
                     _setupForImpact
                 _setupForInactivity
 ---------------------------------------------------------------------------------
 (2) _setupForInactivity                                  26    26      0     876
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _setupForImpact                                      26    26      0     876
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _setupForFreefall                                    26    26      0     876
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _orientation_Up                                      42    42      0     941
                                             10 COMMON     2     2      0
                                              0 BANK0     40    40      0
                    _SPI1_BufferRead
                   _SPI1_BufferWrite
                     _SPI1_ByteWrite
                         _SPI1_Close
                          _SPI1_Open
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SPI1_ByteWrite                                       1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _SPI1_BufferRead                                      6     3      3      94
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _ADXL345_ClearInterrupt                               0     0      0     257
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (1) _ADXL345_validation                                   1     1      0     281
                                             10 COMMON     1     1      0
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_ByteExchange                                    1     0      1      30
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADXL345_init                                        26    26      0     777
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     1      6     132
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     155
                                              0 COMMON    10     4      6
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            4     3      1     227
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     106
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI1_BufferWrite                                     7     3      4     122
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_init
     _SPI1_BufferWrite
     _SPI1_Close
     _SPI1_Open
       ___wmul
     _memcpy
     _memset
   _ADXL345_validation
     _SPI1_ByteExchange
     _SPI1_Close
     _SPI1_Open
   _MotionEventHandler
     _ADXL345_ClearInterrupt
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
     _orientation_Up
       _SPI1_BufferRead
       _SPI1_BufferWrite
       _SPI1_ByteWrite
       _SPI1_Close
       _SPI1_Open
       ___wmul
     _setupForFreefall
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
     _setupForImpact
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
     _setupForInactivity
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
   _PIN_MANAGER_IOC
     _SW1_ISR
       NULL(Fake) *
       _SW1_DefaultInterruptHandler *
   _SPI1_Initialize
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
       _SW1_SetInterruptHandler
     _SPI1_Initialize
     _WDT_Initialize

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     12      14    100.0%
BANK0               80     46      61     76.2%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               32      0       0      0.0%
BANK10               0      0       0      0.0%
BANK11               0      0       0      0.0%
BANK12               0      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      75      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 05 12:27:25 2025

                      _SPI1_ByteExchange 0288                                       l55 04EB  
                                     l47 027C                                       l72 0357  
                                     l81 0373                                       l74 035C  
                                     l58 0246                                       l90 0290  
                                     l91 0293                                       l83 0378  
                                     l76 0369                                       l85 038B  
                                     l94 024D                                       l88 028B  
                     ?_SPI1_ByteExchange 0070                      ___wmul@multiplicand 0072  
                                    l123 0287                                      l204 030C  
                                    l213 0269                                      l133 025B  
                                    l312 042A                                      l321 047F  
                                    l233 0255                                      l330 032A  
                                    l410 06A7                                      l228 02C1  
                                    l325 0317                                      l270 03F9  
                                    l191 0272                                      l328 0324  
                                    l416 06B5                                      l265 03E7  
                                    l354 02E6                                      l195 02AE  
                                    l187 03D5                                      l364 0587  
                                    l436 073E                                      l453 07E4  
                                    l509 0579                                      l358 02F2  
                                    l390 061E                                      l198 0261  
                                    l384 0610                                      l480 04F6  
                                    l536 0251                                      l490 0532  
                                    l483 0506                                      l549 0249  
                                    l487 0526                                      l765 0335  
                                    l767 0349                                      u520 0345  
                                    u600 030A                                      u521 0344  
                                    u505 0336                                      u601 0307  
                                    u530 0485                                      u515 033B  
                                    u531 0484                                      u540 035C  
                                    u620 02D8                                      u700 0753  
                                    u541 035B                                      u621 02D7  
                                    u550 0369                                      u630 03B0  
                                    u710 07E1                                      u614 030C  
                                    u551 0368                                      u631 03AF  
                                    u711 07E0                                      u560 0378  
                                    u800 0532                                      u640 02A7  
                                    u720 026F                                      u561 0377  
                                    u801 0531                                      u641 02A6  
                                    u721 026E                                      u490 0331  
                                    u730 0317                                      u650 02E6  
                                    u570 038B                                      u810 0556  
                                    u491 0330                                      u731 0316  
                                    u651 02E5                                      u571 038A  
                                    u811 0555                                      u580 0290  
                                    u740 0322                                      u660 0587  
                                    u581 028F                                      u741 0321  
                                    u661 0586                                      u750 042A  
                                    u670 061E                                      u590 0300  
                                    u830 03E7                                      u751 0429  
                                    u671 061D                                      u591 02FF  
                                    u831 03E6                                      u680 06B5  
                                    u760 04FA                                      u681 06B4  
                                    u761 04F9                                      u690 074C  
                                    u770 050A                                      u691 074B  
                                    u907 0538                                      u771 0509  
                                    u780 051D                                      u917 076D  
                                    u781 051C                                      u790 052A  
                                    u791 0529                                      u877 03EF  
                                    u887 0401                                      u897 02F6  
                    ??_SPI1_ByteExchange 0071                        orientation_Up@msg 0028  
                                    wreg 0009                                     l2101 0244  
                                   l2111 035F                                     l2103 034A  
                                   l2113 0363                                     l2105 034C  
                                   l1233 02D8                                     l2121 037F  
                                   l2201 0262                                     l2107 0351  
                                   l1227 03B0                                     l2211 02DA  
                                   l2123 0381                                     l2115 036A  
                                   l2203 0265                                     l2109 035D  
                                   l2213 02DD                                     l2117 0371  
                                   l2125 0385                                     l2133 024A  
                                   l2221 057A                                     l2301 0667  
                                   l2141 02FB                                     l2205 024E  
                                   l2071 032B                                     l2151 02CC  
                                   l2127 0288                                     l2215 02E8  
                                   l2119 0379                                     l2231 0590  
                                   l2223 057B                                     l2311 067C  
                                   l2303 066A                                     l2143 0300  
                                   l2135 0256                                     l2207 0252  
                                   l2081 0345                                     l2073 032D  
                                   l2161 039D                                     l2153 038C  
                                   l2145 02C2                                     l2129 0291  
                                   l2217 02ED                                     l2209 02D9  
                                   l2401 076A                                     l2241 05BD  
                                   l2233 0593                                     l2225 057E  
                                   l2321 069C                                     l2313 068A  
                                   l2305 066C                                     l2137 025C  
                                   l2075 0331                                     l2091 04E5  
                                   l2163 03A2                                     l2155 0390  
                                   l2147 02C5                                     l2219 02EF  
                                   l2411 0783                                     l2403 0771  
                                   l2251 05D5                                     l2243 05BF  
                                   l2235 05A1                                     l2227 0589  
                                   l2323 069D                                     l2315 068D  
                                   l2307 0677                                     l2331 06A9  
                                   l2139 02F3                                     l2171 0277  
                                   l2077 033A                                     l2093 04E6  
                                   l2085 0480                                     l2157 0393  
                                   l2165 03A4                                     l2149 02CA  
                                   l2421 07AC                                     l2413 0786  
                                   l2405 0773                                     l2261 05F6  
                                   l2253 05E0                                     l2245 05C2  
                                   l2237 05B0                                     l2229 058E  
                                   l2325 06A2                                     l2317 068F  
                                   l2309 0679                                     l2341 06C1  
                                   l2333 06AC                                     l2501 04FA  
                                   l2173 027D                                     l2181 03B5  
                                   l2079 033F                                     l2095 04E9  
                                   l2087 0480                                     l2159 0399  
                                   l2423 07BC                                     l2415 0792  
                                   l2407 0778                                     l2271 060B  
                                   l2263 05F8                                     l2255 05E2  
                                   l2247 05D0                                     l2239 05B2  
                                   l2327 06A4                                     l2319 069A  
                                   l2351 06ED                                     l2343 06CF  
                                   l2335 06B7                                     l2511 0514  
                                   l2503 04FD                                     l2175 0280  
                                   l2167 0247                                     l2191 03CD  
                                   l2183 03B8                                     l2097 04EA  
                                   l2089 0485                                     l2425 07CC  
                                   l2417 0797                                     l2409 0781  
                                   l2273 060D                                     l2265 0603  
                                   l2257 05E5                                     l2249 05D3  
                                   l2281 0620                                     l2361 070E  
                                   l2353 06F0                                     l2345 06DE  
                                   l2337 06BC                                     l2329 06A8  
                                   l2521 053D                                     l2513 051D  
                                   l2505 0500                                     l2441 026F  
                                   l2193 03D4                                     l2185 03BD  
                                   l2177 03B1                                     l2169 0273  
                                   l2601 0412                                     l2435 07E3  
                                   l2427 07D8                                     l2419 079C  
                                   l2267 0605                                     l2259 05F3  
                                   l2291 0647                                     l2283 0625  
                                   l2275 0611                                     l2371 0726  
                                   l2363 0710                                     l2355 06FE  
                                   l2347 06E0                                     l2339 06BE  
                                   l2523 053F                                     l2515 0520  
                                   l2507 050A                                     l2195 02A0  
                                   l2187 03C1                                     l2179 03B3  
                                   l2451 02BB                                     l2443 02AF  
                                   l2603 0419                                     l2461 0326  
                                   l2453 030D                                     l2429 07E1  
                                   l2269 0606                                     l2293 0649  
                                   l2285 0627                                     l2277 0612  
                                   l2381 073B                                     l2373 0731  
                                   l2365 0713                                     l2357 0701  
                                   l2349 06EB                                     l2541 0557  
                                   l2525 0542                                     l2517 052A  
                                   l2509 050D                                     l2197 02A7  
                                   l2189 03CA                                     l2445 02B2  
                                   l2471 0421                                     l2463 0329  
                                   l2455 030E                                     l2391 0756  
                                   l2383 073F                                     l2295 0654  
                                   l2287 062A                                     l2279 0615  
                                   l2375 0733                                     l2367 0721  
                                   l2359 0703                                     l2527 0543  
                                   l2519 0534                                     l2535 054D  
                                   l2199 02AC                                     l2439 026A  
                                   l2447 02B5                                     l2481 0457  
                                   l2473 042D                                     l2457 0319  
                                   l2393 0759                                     l2385 0740  
                                   l2297 0656                                     l2289 0638  
                                   l2377 0734                                     l2369 0724  
                                   l2529 0546                                     l2449 02B8  
                                   l2491 046F                                     l2483 0459  
                                   l2475 043B                                     l2467 041D  
                                   l2459 0322                                     l2395 075B  
                                   l2387 0743                                     l2299 0659  
                                   l2379 0739                                     l2563 055D  
                                   l2493 047A                                     l2485 045C  
                                   l2477 044A                                     l2469 041E  
                                   l2397 075D                                     l2389 074C  
                                   l2581 03DC                                     l2495 047C  
                                   l2487 046A                                     l2479 044C  
                                   l2399 0768                                     l2591 03FB  
                                   l2583 03DE                                     l2489 046D  
                                   l2681 0568                                     l2593 0408  
                                   l2585 03DF                                     l2577 03D6  
                                   l2499 04EC                                     l2595 040A  
                                   l2587 03E9                                     l2579 03D9  
                                   l2597 040D                                     l2589 03F6  
                                   l2599 040F                                     _LATA 010C  
                                   _LATC 010E                                     _LWLO 0CAD  
                                   _WPUA 020C                                     _WPUC 020E  
                      main@current_state 004D                          __end_of_SW1_ISR 02AF  
                __end_of_NVM_StatusClear 024A                                     _main 03D6  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                             _unlockKeyLow 007D  
            _INT_DefaultInterruptHandler 0000                                     start 0002  
              __end_of_SPI1_ByteExchange 0294          __end_of_INT_SetInterruptHandler 025C  
                         _no_motion_init 0845                              ?_SPI1_Close 0070  
                                  ?_main 0070                                    _IOCAF 0393  
                                  _IOCAN 0392                                    _IOCAP 0391  
                                  _TRISA 008C                                    _TRISC 008E  
                    orientation_Up@F2709 004E                             _ADXL345_init 041D  
                __end_of_PIN_MANAGER_IOC 0273                           _WDT_Initialize 0252  
                _SW1_SetInterruptHandler 025C                            _unlockKeyHigh 007C  
                                  pclath 000A          SPI1_BufferWrite@bufferInputSize 0074  
                                  status 0003                                    wtemp0 007E  
                       ??_setupForImpact 007A                       _ADXL345_validation 030D  
                        __initialization 07E5                             __end_of_main 041D  
                    ?_ADXL345_validation 0070                   __end_of_no_motion_init 0849  
         SPI1_BufferRead@bufferInputSize 0073                                   ??_main 004B  
                 __end_of_WDT_Initialize 0256                                ??_SW1_ISR 0071  
                   ??_ADXL345_validation 007A                                   _EEADRH 0192  
                                 _EEADRL 0191                                   _EEDATH 0194  
                                 _EEDATL 0193                                   _EECON2 0196  
               __end_of_SPI1_BufferWrite 036A                                   _ANSELA 018C  
                                 _ANSELC 018E                                   _BORCON 0116  
                                 _INLVLA 038C                                   _INLVLC 038E  
                                 _OSCCON 0099                                   _WDTCON 0097  
                       ?_NVM_StatusClear 0070                         _eeprom_interface 082B  
                      __end_of_SPI1_Host 081C                        __end_of_SPI1_Open 04EC  
                                 ___wmul 032B                 __end_of_setupForFreefall 0611  
                                 _memcpy 038C                                   _memset 02C2  
                      ?_CLOCK_Initialize 0070                        ??_SPI1_BufferRead 0073  
               ??_ADXL345_ClearInterrupt 007A                       ??_CLOCK_Initialize 0070  
                        ?_WDT_Initialize 0070                ??_SW1_SetInterruptHandler 0072  
                      setupForImpact@msg 0020  SW1_SetInterruptHandler@InterruptHandler 0070  
INT_SetInterruptHandler@InterruptHandler 0070                         ?_PIN_MANAGER_IOC 0070  
                         _SPI1_IsRxReady 0000                           _SPI1_IsTxReady 0000  
                       ??_NVM_Initialize 0070                        _SYSTEM_Initialize 02AF  
                __end_of__initialization 07FD                           _SPI1_ByteWrite 024A  
                     ?_SYSTEM_Initialize 0070            __end_of_ADXL345_init_settings 0845  
                         __pcstackCOMMON 0070                      ??_SYSTEM_Initialize 0072  
                      ??_SPI1_Initialize 0070                       _spi1_configuration 081C  
                         _OPTION_REGbits 0095                               _dataBuffer 22F0  
              __end_of_SYSTEM_Initialize 02C2                               __pbssBANK0 004E  
                 __end_of_SPI1_ByteWrite 024E               __end_of_MotionEventHandler 057A  
            SPI1_BufferWrite@bufferInput 0076                               __pmaintext 03D6  
                                ?___wmul 0070                SPI1_BufferRead@bufferData 0070  
              SPI1_BufferRead@bufferSize 0071                                  ?_memcpy 0070  
                                ?_memset 0070                                  _APFCON0 011D  
                           ??_SPI1_Close 0070                                  _OSCTUNE 0098  
                                _SSP1ADD 0212                                  _SSP1BUF 0211  
                                _SW1_ISR 02A0                          ?_SPI1_ByteWrite 0070  
                      __end_of_fall_init 0851                  MotionEventHandler@state 0048  
                     __end_of_SPI1_Close 0247                                  __ptext1 02AF  
                                __ptext2 0252                                  __ptext3 0273  
                                __ptext4 03B1                                  __ptext5 025C  
                                __ptext6 024E                                  __ptext7 0247  
                                __ptext8 027D                                  __ptext9 0256  
               __end_of_eeprom_interface 0839                 ??_PIN_MANAGER_Initialize 0072  
                              _IOCAFbits 0393                  _INT_SetInterruptHandler 0256  
                                clrloop0 0295                     end_of_initialization 07FD  
                      ?_SPI1_BufferWrite 0070             ?_SW1_DefaultInterruptHandler 0070  
                                memcpy@d 0079                                  memcpy@n 0074  
                                memcpy@s 0076                                  memset@c 0072  
                                memset@n 0074                                  memset@p 0076  
                     ??_SPI1_BufferWrite 0074                          _EEPROM_ByteRead 0000  
                 _ADXL345_ClearInterrupt 02D9                          _SPI1_BufferRead 036A  
                             _timer_20ms 0056                                _SPI1_Host 0800  
                      ?_setupForFreefall 0070                                _SPI1_Open 0480  
                       ??_WDT_Initialize 0070                       ??_setupForFreefall 007A  
                              _PORTAbits 000C                      _SPI1_BufferExchange 0000  
          ??_SW1_DefaultInterruptHandler 0070                          _SPI1_Initialize 0273  
           __end_of_INTERRUPT_Initialize 0288                               ?_SPI1_Open 0076  
                         __end_of___wmul 034A                           __end_of_memcpy 03B1  
                         __end_of_memset 02D9                ??_INT_SetInterruptHandler 0072  
                    start_initialization 07E5                  __end_of_SPI1_BufferRead 038C  
                  setupForInactivity@msg 0020                          ADXL345_init@msg 0020  
                  _ADXL345_init_settings 0839                                 ??___wmul 0074  
                     _MotionEventHandler 04EC                           _orientation_Up 073F  
             __end_of_setupForInactivity 073F                                 ??_memcpy 0076  
                               ??_memset 0076                               memset@dest 0070  
               ?_SW1_SetInterruptHandler 0070                      ?_MotionEventHandler 0048  
                          _SPI1_ByteRead 0000                              __pbssBIGRAM 22F0  
                          ?_ADXL345_init 0070                              __pbssCOMMON 007C  
                              ___latbits 0002                            __pcstackBANK0 0020  
                       ??_SPI1_ByteWrite 0071                                 ?_SW1_ISR 0070  
                __end_of_SPI1_Initialize 027D                     ??_MotionEventHandler 0049  
                              __pnvBANK0 0059               SPI1_BufferWrite@bufferData 0070  
                 _PIN_MANAGER_Initialize 03B1               SPI1_BufferWrite@bufferSize 0072  
                 __end_of_orientation_Up 07E5                     SPI1_Open@returnValue 0079  
                              _fall_init 084D                              ??_SPI1_Open 0077  
             SPI1_BufferRead@bufferInput 0075                           ??_ADXL345_init 007A  
                      ??_NVM_StatusClear 0070                      __end_of_impact_init 084D  
                   _INTERRUPT_Initialize 027D                  ?_ADXL345_ClearInterrupt 0070  
                       _CLOCK_Initialize 0262                           ___wmul@product 0074  
                       ?_SPI1_BufferRead 0070                                 _LATAbits 010C  
                               _LATCbits 010E                                clear_ram0 0294  
                               _PIE1bits 0091                                 _PIR1bits 0011  
                        ?_orientation_Up 0070                     _SW1_InterruptHandler 0059  
                               _SSP1CON1 0215                                 _SSP1CON3 0217  
        __end_of_SW1_SetInterruptHandler 0262                                 _SSP1STAT 0214  
                      ??_PIN_MANAGER_IOC 0071                           _setupForImpact 0611  
                      _SPI1_Deinitialize 0000                        ___wmul@multiplier 0070  
                       ?_SPI1_Initialize 0070           __end_of_ADXL345_ClearInterrupt 02F3  
                  ?_INTERRUPT_Initialize 0070                               _EECON1bits 0195  
                              memcpy@tmp 0078                   __end_of_setupForImpact 06A8  
                            _impact_init 0849               __end_of_ADXL345_validation 032B  
                               __ptext10 0262                                 __ptext11 026A  
                               __ptext20 036A                                 __ptext12 02A0  
                               __ptext21 02D9                                 __ptext13 02F3  
                               __ptext30 034A                                 __ptext22 030D  
                               __ptext14 04EC                                 __ptext23 0288  
                               __ptext15 06A8                                 __ptext24 041D  
                               __ptext16 0611                                 __ptext25 02C2  
                               __ptext17 057A                                 __ptext26 038C  
                               __ptext18 073F                                 __ptext27 0480  
                               __ptext19 024A                                 __ptext28 032B  
                               __ptext29 0244                             _SSP1CON1bits 0215  
                 SPI1_ByteWrite@byteData 0070   __end_of_acceleration_squared_threshold 0853  
         _acceleration_squared_threshold 0851                      setupForFreefall@msg 0020  
                   __end_of_ADXL345_init 0480                           _NVM_Initialize 024E  
                        ?_setupForImpact 0070                               _INTCONbits 000B  
                               memcpy@d1 0070                                 memcpy@s1 0072  
                   _INT_InterruptHandler 005B                   orientation_Up@acc_data 0020  
                     _setupForInactivity 06A8                   ??_INTERRUPT_Initialize 0072  
    __end_of_SW1_DefaultInterruptHandler 030D              _SW1_DefaultInterruptHandler 02F3  
           _orientation_check_timer_20ms 0054                   orientation_Up@g_deltaX 0042  
                 orientation_Up@g_deltaY 0044                   orientation_Up@g_deltaZ 0046  
                       _EEPROM_ByteWrite 0000                 ADXL345_validation@passed 007A  
                    ?_setupForInactivity 0070                  ?_PIN_MANAGER_Initialize 0070  
              SPI1_ByteExchange@byteData 0070                   _good_orientation_count 0058  
                 __end_of_NVM_Initialize 0252                orientation_Up@g_magnitude 0026  
                        _NVM_StatusClear 0247                         _SPI1_BufferWrite 034A  
               ?_INT_SetInterruptHandler 0070                 __end_of_CLOCK_Initialize 026A  
                   ??_setupForInactivity 007A                            __pstringtext1 0800  
                          __pstringtext2 081C                            __pstringtext3 082B  
                          __pstringtext4 0851                            __pstringtext5 0839  
                          __pstringtext6 0845                            __pstringtext7 0849  
                          __pstringtext8 084D                               _SPI1_Close 0244  
                       _setupForFreefall 057A           __end_of_PIN_MANAGER_Initialize 03D6  
                       ??_orientation_Up 007A                          _PIN_MANAGER_IOC 026A  
                             _NVM_IsBusy 0000                  SPI1_Open@spiConfigIndex 0076  
                        ?_NVM_Initialize 0070               __end_of_spi1_configuration 082B  
