

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 05 13:26:54 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16LF1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,space=0,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x620,48
    52                           	dabs	1,0x5A0,80
    53                           	dabs	1,0x520,80
    54                           	dabs	1,0x4C0,48
    55                           	dabs	1,0x22F0,0,_dataBuffer
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Generated 07/09/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16LF1825 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92     0008                     bsr             equ	8
    93     0005                     fsr0h           equ	5
    94     0004                     fsr0l           equ	4
    95     0007                     fsr1h           equ	7
    96     0006                     fsr1l           equ	6
    97     0000                     indf            equ	0
    98     0000                     indf0           equ	0
    99     0001                     indf1           equ	1
   100     000B                     intcon          equ	11
   101     0002                     pc              equ	2
   102     0002                     pcl             equ	2
   103     000A                     pclath          equ	10
   104     0003                     status          equ	3
   105     0009                     wreg            equ	9
   106     0000                     INDF0           equ	0	;# 
   107     0001                     INDF1           equ	1	;# 
   108     0002                     PCL             equ	2	;# 
   109     0003                     STATUS          equ	3	;# 
   110     0004                     FSR0L           equ	4	;# 
   111     0005                     FSR0H           equ	5	;# 
   112     0006                     FSR1L           equ	6	;# 
   113     0007                     FSR1H           equ	7	;# 
   114     0008                     BSR             equ	8	;# 
   115     0009                     WREG            equ	9	;# 
   116     000A                     PCLATH          equ	10	;# 
   117     000B                     INTCON          equ	11	;# 
   118     000C                     PORTA           equ	12	;# 
   119     000E                     PORTC           equ	14	;# 
   120     0011                     PIR1            equ	17	;# 
   121     0012                     PIR2            equ	18	;# 
   122     0013                     PIR3            equ	19	;# 
   123     0015                     TMR0            equ	21	;# 
   124     0016                     TMR1            equ	22	;# 
   125     0016                     TMR1L           equ	22	;# 
   126     0017                     TMR1H           equ	23	;# 
   127     0018                     T1CON           equ	24	;# 
   128     0019                     T1GCON          equ	25	;# 
   129     001A                     TMR2            equ	26	;# 
   130     001B                     PR2             equ	27	;# 
   131     001C                     T2CON           equ	28	;# 
   132     001E                     CPSCON0         equ	30	;# 
   133     001F                     CPSCON1         equ	31	;# 
   134     008C                     TRISA           equ	140	;# 
   135     008E                     TRISC           equ	142	;# 
   136     0091                     PIE1            equ	145	;# 
   137     0092                     PIE2            equ	146	;# 
   138     0093                     PIE3            equ	147	;# 
   139     0095                     OPTION_REG      equ	149	;# 
   140     0096                     PCON            equ	150	;# 
   141     0097                     WDTCON          equ	151	;# 
   142     0098                     OSCTUNE         equ	152	;# 
   143     0099                     OSCCON          equ	153	;# 
   144     009A                     OSCSTAT         equ	154	;# 
   145     009B                     ADRES           equ	155	;# 
   146     009B                     ADRESL          equ	155	;# 
   147     009C                     ADRESH          equ	156	;# 
   148     009D                     ADCON0          equ	157	;# 
   149     009E                     ADCON1          equ	158	;# 
   150     010C                     LATA            equ	268	;# 
   151     010E                     LATC            equ	270	;# 
   152     0111                     CM1CON0         equ	273	;# 
   153     0112                     CM1CON1         equ	274	;# 
   154     0113                     CM2CON0         equ	275	;# 
   155     0114                     CM2CON1         equ	276	;# 
   156     0115                     CMOUT           equ	277	;# 
   157     0116                     BORCON          equ	278	;# 
   158     0117                     FVRCON          equ	279	;# 
   159     0118                     DACCON0         equ	280	;# 
   160     0119                     DACCON1         equ	281	;# 
   161     011A                     SRCON0          equ	282	;# 
   162     011B                     SRCON1          equ	283	;# 
   163     011D                     APFCON0         equ	285	;# 
   164     011E                     APFCON1         equ	286	;# 
   165     018C                     ANSELA          equ	396	;# 
   166     018E                     ANSELC          equ	398	;# 
   167     0191                     EEADR           equ	401	;# 
   168     0191                     EEADRL          equ	401	;# 
   169     0192                     EEADRH          equ	402	;# 
   170     0193                     EEDAT           equ	403	;# 
   171     0193                     EEDATL          equ	403	;# 
   172     0193                     EEDATA          equ	403	;# 
   173     0194                     EEDATH          equ	404	;# 
   174     0195                     EECON1          equ	405	;# 
   175     0196                     EECON2          equ	406	;# 
   176     0199                     RCREG           equ	409	;# 
   177     019A                     TXREG           equ	410	;# 
   178     019B                     SPBRG           equ	411	;# 
   179     019B                     SPBRGL          equ	411	;# 
   180     019C                     SPBRGH          equ	412	;# 
   181     019D                     RCSTA           equ	413	;# 
   182     019E                     TXSTA           equ	414	;# 
   183     019F                     BAUDCON         equ	415	;# 
   184     020C                     WPUA            equ	524	;# 
   185     020E                     WPUC            equ	526	;# 
   186     0211                     SSP1BUF         equ	529	;# 
   187     0211                     SSPBUF          equ	529	;# 
   188     0212                     SSP1ADD         equ	530	;# 
   189     0212                     SSPADD          equ	530	;# 
   190     0213                     SSP1MSK         equ	531	;# 
   191     0213                     SSPMSK          equ	531	;# 
   192     0214                     SSP1STAT        equ	532	;# 
   193     0214                     SSPSTAT         equ	532	;# 
   194     0215                     SSP1CON1        equ	533	;# 
   195     0215                     SSPCON1         equ	533	;# 
   196     0215                     SSPCON          equ	533	;# 
   197     0216                     SSP1CON2        equ	534	;# 
   198     0216                     SSPCON2         equ	534	;# 
   199     0217                     SSP1CON3        equ	535	;# 
   200     0217                     SSPCON3         equ	535	;# 
   201     0291                     CCPR1           equ	657	;# 
   202     0291                     CCPR1L          equ	657	;# 
   203     0292                     CCPR1H          equ	658	;# 
   204     0293                     CCP1CON         equ	659	;# 
   205     0294                     PWM1CON         equ	660	;# 
   206     0295                     CCP1AS          equ	661	;# 
   207     0295                     ECCP1AS         equ	661	;# 
   208     0296                     PSTR1CON        equ	662	;# 
   209     0298                     CCPR2           equ	664	;# 
   210     0298                     CCPR2L          equ	664	;# 
   211     0299                     CCPR2H          equ	665	;# 
   212     029A                     CCP2CON         equ	666	;# 
   213     029B                     PWM2CON         equ	667	;# 
   214     029C                     CCP2AS          equ	668	;# 
   215     029D                     PSTR2CON        equ	669	;# 
   216     029E                     CCPTMRS         equ	670	;# 
   217     029E                     CCPTMRS0        equ	670	;# 
   218     0311                     CCPR3           equ	785	;# 
   219     0311                     CCPR3L          equ	785	;# 
   220     0312                     CCPR3H          equ	786	;# 
   221     0313                     CCP3CON         equ	787	;# 
   222     0318                     CCPR4           equ	792	;# 
   223     0318                     CCPR4L          equ	792	;# 
   224     0319                     CCPR4H          equ	793	;# 
   225     031A                     CCP4CON         equ	794	;# 
   226     038C                     INLVLA          equ	908	;# 
   227     038E                     INLVLC          equ	910	;# 
   228     0391                     IOCAP           equ	913	;# 
   229     0392                     IOCAN           equ	914	;# 
   230     0393                     IOCAF           equ	915	;# 
   231     039A                     CLKRCON         equ	922	;# 
   232     039C                     MDCON           equ	924	;# 
   233     039D                     MDSRC           equ	925	;# 
   234     039E                     MDCARL          equ	926	;# 
   235     039F                     MDCARH          equ	927	;# 
   236     0415                     TMR4            equ	1045	;# 
   237     0416                     PR4             equ	1046	;# 
   238     0417                     T4CON           equ	1047	;# 
   239     041C                     TMR6            equ	1052	;# 
   240     041D                     PR6             equ	1053	;# 
   241     041E                     T6CON           equ	1054	;# 
   242     0FE4                     STATUS_SHAD     equ	4068	;# 
   243     0FE5                     WREG_SHAD       equ	4069	;# 
   244     0FE6                     BSR_SHAD        equ	4070	;# 
   245     0FE7                     PCLATH_SHAD     equ	4071	;# 
   246     0FE8                     FSR0L_SHAD      equ	4072	;# 
   247     0FE9                     FSR0H_SHAD      equ	4073	;# 
   248     0FEA                     FSR1L_SHAD      equ	4074	;# 
   249     0FEB                     FSR1H_SHAD      equ	4075	;# 
   250     0FED                     STKPTR          equ	4077	;# 
   251     0FEE                     TOSL            equ	4078	;# 
   252     0FEF                     TOSH            equ	4079	;# 
   253     0000                     INDF0           equ	0	;# 
   254     0001                     INDF1           equ	1	;# 
   255     0002                     PCL             equ	2	;# 
   256     0003                     STATUS          equ	3	;# 
   257     0004                     FSR0L           equ	4	;# 
   258     0005                     FSR0H           equ	5	;# 
   259     0006                     FSR1L           equ	6	;# 
   260     0007                     FSR1H           equ	7	;# 
   261     0008                     BSR             equ	8	;# 
   262     0009                     WREG            equ	9	;# 
   263     000A                     PCLATH          equ	10	;# 
   264     000B                     INTCON          equ	11	;# 
   265     000C                     PORTA           equ	12	;# 
   266     000E                     PORTC           equ	14	;# 
   267     0011                     PIR1            equ	17	;# 
   268     0012                     PIR2            equ	18	;# 
   269     0013                     PIR3            equ	19	;# 
   270     0015                     TMR0            equ	21	;# 
   271     0016                     TMR1            equ	22	;# 
   272     0016                     TMR1L           equ	22	;# 
   273     0017                     TMR1H           equ	23	;# 
   274     0018                     T1CON           equ	24	;# 
   275     0019                     T1GCON          equ	25	;# 
   276     001A                     TMR2            equ	26	;# 
   277     001B                     PR2             equ	27	;# 
   278     001C                     T2CON           equ	28	;# 
   279     001E                     CPSCON0         equ	30	;# 
   280     001F                     CPSCON1         equ	31	;# 
   281     008C                     TRISA           equ	140	;# 
   282     008E                     TRISC           equ	142	;# 
   283     0091                     PIE1            equ	145	;# 
   284     0092                     PIE2            equ	146	;# 
   285     0093                     PIE3            equ	147	;# 
   286     0095                     OPTION_REG      equ	149	;# 
   287     0096                     PCON            equ	150	;# 
   288     0097                     WDTCON          equ	151	;# 
   289     0098                     OSCTUNE         equ	152	;# 
   290     0099                     OSCCON          equ	153	;# 
   291     009A                     OSCSTAT         equ	154	;# 
   292     009B                     ADRES           equ	155	;# 
   293     009B                     ADRESL          equ	155	;# 
   294     009C                     ADRESH          equ	156	;# 
   295     009D                     ADCON0          equ	157	;# 
   296     009E                     ADCON1          equ	158	;# 
   297     010C                     LATA            equ	268	;# 
   298     010E                     LATC            equ	270	;# 
   299     0111                     CM1CON0         equ	273	;# 
   300     0112                     CM1CON1         equ	274	;# 
   301     0113                     CM2CON0         equ	275	;# 
   302     0114                     CM2CON1         equ	276	;# 
   303     0115                     CMOUT           equ	277	;# 
   304     0116                     BORCON          equ	278	;# 
   305     0117                     FVRCON          equ	279	;# 
   306     0118                     DACCON0         equ	280	;# 
   307     0119                     DACCON1         equ	281	;# 
   308     011A                     SRCON0          equ	282	;# 
   309     011B                     SRCON1          equ	283	;# 
   310     011D                     APFCON0         equ	285	;# 
   311     011E                     APFCON1         equ	286	;# 
   312     018C                     ANSELA          equ	396	;# 
   313     018E                     ANSELC          equ	398	;# 
   314     0191                     EEADR           equ	401	;# 
   315     0191                     EEADRL          equ	401	;# 
   316     0192                     EEADRH          equ	402	;# 
   317     0193                     EEDAT           equ	403	;# 
   318     0193                     EEDATL          equ	403	;# 
   319     0193                     EEDATA          equ	403	;# 
   320     0194                     EEDATH          equ	404	;# 
   321     0195                     EECON1          equ	405	;# 
   322     0196                     EECON2          equ	406	;# 
   323     0199                     RCREG           equ	409	;# 
   324     019A                     TXREG           equ	410	;# 
   325     019B                     SPBRG           equ	411	;# 
   326     019B                     SPBRGL          equ	411	;# 
   327     019C                     SPBRGH          equ	412	;# 
   328     019D                     RCSTA           equ	413	;# 
   329     019E                     TXSTA           equ	414	;# 
   330     019F                     BAUDCON         equ	415	;# 
   331     020C                     WPUA            equ	524	;# 
   332     020E                     WPUC            equ	526	;# 
   333     0211                     SSP1BUF         equ	529	;# 
   334     0211                     SSPBUF          equ	529	;# 
   335     0212                     SSP1ADD         equ	530	;# 
   336     0212                     SSPADD          equ	530	;# 
   337     0213                     SSP1MSK         equ	531	;# 
   338     0213                     SSPMSK          equ	531	;# 
   339     0214                     SSP1STAT        equ	532	;# 
   340     0214                     SSPSTAT         equ	532	;# 
   341     0215                     SSP1CON1        equ	533	;# 
   342     0215                     SSPCON1         equ	533	;# 
   343     0215                     SSPCON          equ	533	;# 
   344     0216                     SSP1CON2        equ	534	;# 
   345     0216                     SSPCON2         equ	534	;# 
   346     0217                     SSP1CON3        equ	535	;# 
   347     0217                     SSPCON3         equ	535	;# 
   348     0291                     CCPR1           equ	657	;# 
   349     0291                     CCPR1L          equ	657	;# 
   350     0292                     CCPR1H          equ	658	;# 
   351     0293                     CCP1CON         equ	659	;# 
   352     0294                     PWM1CON         equ	660	;# 
   353     0295                     CCP1AS          equ	661	;# 
   354     0295                     ECCP1AS         equ	661	;# 
   355     0296                     PSTR1CON        equ	662	;# 
   356     0298                     CCPR2           equ	664	;# 
   357     0298                     CCPR2L          equ	664	;# 
   358     0299                     CCPR2H          equ	665	;# 
   359     029A                     CCP2CON         equ	666	;# 
   360     029B                     PWM2CON         equ	667	;# 
   361     029C                     CCP2AS          equ	668	;# 
   362     029D                     PSTR2CON        equ	669	;# 
   363     029E                     CCPTMRS         equ	670	;# 
   364     029E                     CCPTMRS0        equ	670	;# 
   365     0311                     CCPR3           equ	785	;# 
   366     0311                     CCPR3L          equ	785	;# 
   367     0312                     CCPR3H          equ	786	;# 
   368     0313                     CCP3CON         equ	787	;# 
   369     0318                     CCPR4           equ	792	;# 
   370     0318                     CCPR4L          equ	792	;# 
   371     0319                     CCPR4H          equ	793	;# 
   372     031A                     CCP4CON         equ	794	;# 
   373     038C                     INLVLA          equ	908	;# 
   374     038E                     INLVLC          equ	910	;# 
   375     0391                     IOCAP           equ	913	;# 
   376     0392                     IOCAN           equ	914	;# 
   377     0393                     IOCAF           equ	915	;# 
   378     039A                     CLKRCON         equ	922	;# 
   379     039C                     MDCON           equ	924	;# 
   380     039D                     MDSRC           equ	925	;# 
   381     039E                     MDCARL          equ	926	;# 
   382     039F                     MDCARH          equ	927	;# 
   383     0415                     TMR4            equ	1045	;# 
   384     0416                     PR4             equ	1046	;# 
   385     0417                     T4CON           equ	1047	;# 
   386     041C                     TMR6            equ	1052	;# 
   387     041D                     PR6             equ	1053	;# 
   388     041E                     T6CON           equ	1054	;# 
   389     0FE4                     STATUS_SHAD     equ	4068	;# 
   390     0FE5                     WREG_SHAD       equ	4069	;# 
   391     0FE6                     BSR_SHAD        equ	4070	;# 
   392     0FE7                     PCLATH_SHAD     equ	4071	;# 
   393     0FE8                     FSR0L_SHAD      equ	4072	;# 
   394     0FE9                     FSR0H_SHAD      equ	4073	;# 
   395     0FEA                     FSR1L_SHAD      equ	4074	;# 
   396     0FEB                     FSR1H_SHAD      equ	4075	;# 
   397     0FED                     STKPTR          equ	4077	;# 
   398     0FEE                     TOSL            equ	4078	;# 
   399     0FEF                     TOSH            equ	4079	;# 
   400     0000                     INDF0           equ	0	;# 
   401     0001                     INDF1           equ	1	;# 
   402     0002                     PCL             equ	2	;# 
   403     0003                     STATUS          equ	3	;# 
   404     0004                     FSR0L           equ	4	;# 
   405     0005                     FSR0H           equ	5	;# 
   406     0006                     FSR1L           equ	6	;# 
   407     0007                     FSR1H           equ	7	;# 
   408     0008                     BSR             equ	8	;# 
   409     0009                     WREG            equ	9	;# 
   410     000A                     PCLATH          equ	10	;# 
   411     000B                     INTCON          equ	11	;# 
   412     000C                     PORTA           equ	12	;# 
   413     000E                     PORTC           equ	14	;# 
   414     0011                     PIR1            equ	17	;# 
   415     0012                     PIR2            equ	18	;# 
   416     0013                     PIR3            equ	19	;# 
   417     0015                     TMR0            equ	21	;# 
   418     0016                     TMR1            equ	22	;# 
   419     0016                     TMR1L           equ	22	;# 
   420     0017                     TMR1H           equ	23	;# 
   421     0018                     T1CON           equ	24	;# 
   422     0019                     T1GCON          equ	25	;# 
   423     001A                     TMR2            equ	26	;# 
   424     001B                     PR2             equ	27	;# 
   425     001C                     T2CON           equ	28	;# 
   426     001E                     CPSCON0         equ	30	;# 
   427     001F                     CPSCON1         equ	31	;# 
   428     008C                     TRISA           equ	140	;# 
   429     008E                     TRISC           equ	142	;# 
   430     0091                     PIE1            equ	145	;# 
   431     0092                     PIE2            equ	146	;# 
   432     0093                     PIE3            equ	147	;# 
   433     0095                     OPTION_REG      equ	149	;# 
   434     0096                     PCON            equ	150	;# 
   435     0097                     WDTCON          equ	151	;# 
   436     0098                     OSCTUNE         equ	152	;# 
   437     0099                     OSCCON          equ	153	;# 
   438     009A                     OSCSTAT         equ	154	;# 
   439     009B                     ADRES           equ	155	;# 
   440     009B                     ADRESL          equ	155	;# 
   441     009C                     ADRESH          equ	156	;# 
   442     009D                     ADCON0          equ	157	;# 
   443     009E                     ADCON1          equ	158	;# 
   444     010C                     LATA            equ	268	;# 
   445     010E                     LATC            equ	270	;# 
   446     0111                     CM1CON0         equ	273	;# 
   447     0112                     CM1CON1         equ	274	;# 
   448     0113                     CM2CON0         equ	275	;# 
   449     0114                     CM2CON1         equ	276	;# 
   450     0115                     CMOUT           equ	277	;# 
   451     0116                     BORCON          equ	278	;# 
   452     0117                     FVRCON          equ	279	;# 
   453     0118                     DACCON0         equ	280	;# 
   454     0119                     DACCON1         equ	281	;# 
   455     011A                     SRCON0          equ	282	;# 
   456     011B                     SRCON1          equ	283	;# 
   457     011D                     APFCON0         equ	285	;# 
   458     011E                     APFCON1         equ	286	;# 
   459     018C                     ANSELA          equ	396	;# 
   460     018E                     ANSELC          equ	398	;# 
   461     0191                     EEADR           equ	401	;# 
   462     0191                     EEADRL          equ	401	;# 
   463     0192                     EEADRH          equ	402	;# 
   464     0193                     EEDAT           equ	403	;# 
   465     0193                     EEDATL          equ	403	;# 
   466     0193                     EEDATA          equ	403	;# 
   467     0194                     EEDATH          equ	404	;# 
   468     0195                     EECON1          equ	405	;# 
   469     0196                     EECON2          equ	406	;# 
   470     0199                     RCREG           equ	409	;# 
   471     019A                     TXREG           equ	410	;# 
   472     019B                     SPBRG           equ	411	;# 
   473     019B                     SPBRGL          equ	411	;# 
   474     019C                     SPBRGH          equ	412	;# 
   475     019D                     RCSTA           equ	413	;# 
   476     019E                     TXSTA           equ	414	;# 
   477     019F                     BAUDCON         equ	415	;# 
   478     020C                     WPUA            equ	524	;# 
   479     020E                     WPUC            equ	526	;# 
   480     0211                     SSP1BUF         equ	529	;# 
   481     0211                     SSPBUF          equ	529	;# 
   482     0212                     SSP1ADD         equ	530	;# 
   483     0212                     SSPADD          equ	530	;# 
   484     0213                     SSP1MSK         equ	531	;# 
   485     0213                     SSPMSK          equ	531	;# 
   486     0214                     SSP1STAT        equ	532	;# 
   487     0214                     SSPSTAT         equ	532	;# 
   488     0215                     SSP1CON1        equ	533	;# 
   489     0215                     SSPCON1         equ	533	;# 
   490     0215                     SSPCON          equ	533	;# 
   491     0216                     SSP1CON2        equ	534	;# 
   492     0216                     SSPCON2         equ	534	;# 
   493     0217                     SSP1CON3        equ	535	;# 
   494     0217                     SSPCON3         equ	535	;# 
   495     0291                     CCPR1           equ	657	;# 
   496     0291                     CCPR1L          equ	657	;# 
   497     0292                     CCPR1H          equ	658	;# 
   498     0293                     CCP1CON         equ	659	;# 
   499     0294                     PWM1CON         equ	660	;# 
   500     0295                     CCP1AS          equ	661	;# 
   501     0295                     ECCP1AS         equ	661	;# 
   502     0296                     PSTR1CON        equ	662	;# 
   503     0298                     CCPR2           equ	664	;# 
   504     0298                     CCPR2L          equ	664	;# 
   505     0299                     CCPR2H          equ	665	;# 
   506     029A                     CCP2CON         equ	666	;# 
   507     029B                     PWM2CON         equ	667	;# 
   508     029C                     CCP2AS          equ	668	;# 
   509     029D                     PSTR2CON        equ	669	;# 
   510     029E                     CCPTMRS         equ	670	;# 
   511     029E                     CCPTMRS0        equ	670	;# 
   512     0311                     CCPR3           equ	785	;# 
   513     0311                     CCPR3L          equ	785	;# 
   514     0312                     CCPR3H          equ	786	;# 
   515     0313                     CCP3CON         equ	787	;# 
   516     0318                     CCPR4           equ	792	;# 
   517     0318                     CCPR4L          equ	792	;# 
   518     0319                     CCPR4H          equ	793	;# 
   519     031A                     CCP4CON         equ	794	;# 
   520     038C                     INLVLA          equ	908	;# 
   521     038E                     INLVLC          equ	910	;# 
   522     0391                     IOCAP           equ	913	;# 
   523     0392                     IOCAN           equ	914	;# 
   524     0393                     IOCAF           equ	915	;# 
   525     039A                     CLKRCON         equ	922	;# 
   526     039C                     MDCON           equ	924	;# 
   527     039D                     MDSRC           equ	925	;# 
   528     039E                     MDCARL          equ	926	;# 
   529     039F                     MDCARH          equ	927	;# 
   530     0415                     TMR4            equ	1045	;# 
   531     0416                     PR4             equ	1046	;# 
   532     0417                     T4CON           equ	1047	;# 
   533     041C                     TMR6            equ	1052	;# 
   534     041D                     PR6             equ	1053	;# 
   535     041E                     T6CON           equ	1054	;# 
   536     0FE4                     STATUS_SHAD     equ	4068	;# 
   537     0FE5                     WREG_SHAD       equ	4069	;# 
   538     0FE6                     BSR_SHAD        equ	4070	;# 
   539     0FE7                     PCLATH_SHAD     equ	4071	;# 
   540     0FE8                     FSR0L_SHAD      equ	4072	;# 
   541     0FE9                     FSR0H_SHAD      equ	4073	;# 
   542     0FEA                     FSR1L_SHAD      equ	4074	;# 
   543     0FEB                     FSR1H_SHAD      equ	4075	;# 
   544     0FED                     STKPTR          equ	4077	;# 
   545     0FEE                     TOSL            equ	4078	;# 
   546     0FEF                     TOSH            equ	4079	;# 
   547     0000                     INDF0           equ	0	;# 
   548     0001                     INDF1           equ	1	;# 
   549     0002                     PCL             equ	2	;# 
   550     0003                     STATUS          equ	3	;# 
   551     0004                     FSR0L           equ	4	;# 
   552     0005                     FSR0H           equ	5	;# 
   553     0006                     FSR1L           equ	6	;# 
   554     0007                     FSR1H           equ	7	;# 
   555     0008                     BSR             equ	8	;# 
   556     0009                     WREG            equ	9	;# 
   557     000A                     PCLATH          equ	10	;# 
   558     000B                     INTCON          equ	11	;# 
   559     000C                     PORTA           equ	12	;# 
   560     000E                     PORTC           equ	14	;# 
   561     0011                     PIR1            equ	17	;# 
   562     0012                     PIR2            equ	18	;# 
   563     0013                     PIR3            equ	19	;# 
   564     0015                     TMR0            equ	21	;# 
   565     0016                     TMR1            equ	22	;# 
   566     0016                     TMR1L           equ	22	;# 
   567     0017                     TMR1H           equ	23	;# 
   568     0018                     T1CON           equ	24	;# 
   569     0019                     T1GCON          equ	25	;# 
   570     001A                     TMR2            equ	26	;# 
   571     001B                     PR2             equ	27	;# 
   572     001C                     T2CON           equ	28	;# 
   573     001E                     CPSCON0         equ	30	;# 
   574     001F                     CPSCON1         equ	31	;# 
   575     008C                     TRISA           equ	140	;# 
   576     008E                     TRISC           equ	142	;# 
   577     0091                     PIE1            equ	145	;# 
   578     0092                     PIE2            equ	146	;# 
   579     0093                     PIE3            equ	147	;# 
   580     0095                     OPTION_REG      equ	149	;# 
   581     0096                     PCON            equ	150	;# 
   582     0097                     WDTCON          equ	151	;# 
   583     0098                     OSCTUNE         equ	152	;# 
   584     0099                     OSCCON          equ	153	;# 
   585     009A                     OSCSTAT         equ	154	;# 
   586     009B                     ADRES           equ	155	;# 
   587     009B                     ADRESL          equ	155	;# 
   588     009C                     ADRESH          equ	156	;# 
   589     009D                     ADCON0          equ	157	;# 
   590     009E                     ADCON1          equ	158	;# 
   591     010C                     LATA            equ	268	;# 
   592     010E                     LATC            equ	270	;# 
   593     0111                     CM1CON0         equ	273	;# 
   594     0112                     CM1CON1         equ	274	;# 
   595     0113                     CM2CON0         equ	275	;# 
   596     0114                     CM2CON1         equ	276	;# 
   597     0115                     CMOUT           equ	277	;# 
   598     0116                     BORCON          equ	278	;# 
   599     0117                     FVRCON          equ	279	;# 
   600     0118                     DACCON0         equ	280	;# 
   601     0119                     DACCON1         equ	281	;# 
   602     011A                     SRCON0          equ	282	;# 
   603     011B                     SRCON1          equ	283	;# 
   604     011D                     APFCON0         equ	285	;# 
   605     011E                     APFCON1         equ	286	;# 
   606     018C                     ANSELA          equ	396	;# 
   607     018E                     ANSELC          equ	398	;# 
   608     0191                     EEADR           equ	401	;# 
   609     0191                     EEADRL          equ	401	;# 
   610     0192                     EEADRH          equ	402	;# 
   611     0193                     EEDAT           equ	403	;# 
   612     0193                     EEDATL          equ	403	;# 
   613     0193                     EEDATA          equ	403	;# 
   614     0194                     EEDATH          equ	404	;# 
   615     0195                     EECON1          equ	405	;# 
   616     0196                     EECON2          equ	406	;# 
   617     0199                     RCREG           equ	409	;# 
   618     019A                     TXREG           equ	410	;# 
   619     019B                     SPBRG           equ	411	;# 
   620     019B                     SPBRGL          equ	411	;# 
   621     019C                     SPBRGH          equ	412	;# 
   622     019D                     RCSTA           equ	413	;# 
   623     019E                     TXSTA           equ	414	;# 
   624     019F                     BAUDCON         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020E                     WPUC            equ	526	;# 
   627     0211                     SSP1BUF         equ	529	;# 
   628     0211                     SSPBUF          equ	529	;# 
   629     0212                     SSP1ADD         equ	530	;# 
   630     0212                     SSPADD          equ	530	;# 
   631     0213                     SSP1MSK         equ	531	;# 
   632     0213                     SSPMSK          equ	531	;# 
   633     0214                     SSP1STAT        equ	532	;# 
   634     0214                     SSPSTAT         equ	532	;# 
   635     0215                     SSP1CON1        equ	533	;# 
   636     0215                     SSPCON1         equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0216                     SSP1CON2        equ	534	;# 
   639     0216                     SSPCON2         equ	534	;# 
   640     0217                     SSP1CON3        equ	535	;# 
   641     0217                     SSPCON3         equ	535	;# 
   642     0291                     CCPR1           equ	657	;# 
   643     0291                     CCPR1L          equ	657	;# 
   644     0292                     CCPR1H          equ	658	;# 
   645     0293                     CCP1CON         equ	659	;# 
   646     0294                     PWM1CON         equ	660	;# 
   647     0295                     CCP1AS          equ	661	;# 
   648     0295                     ECCP1AS         equ	661	;# 
   649     0296                     PSTR1CON        equ	662	;# 
   650     0298                     CCPR2           equ	664	;# 
   651     0298                     CCPR2L          equ	664	;# 
   652     0299                     CCPR2H          equ	665	;# 
   653     029A                     CCP2CON         equ	666	;# 
   654     029B                     PWM2CON         equ	667	;# 
   655     029C                     CCP2AS          equ	668	;# 
   656     029D                     PSTR2CON        equ	669	;# 
   657     029E                     CCPTMRS         equ	670	;# 
   658     029E                     CCPTMRS0        equ	670	;# 
   659     0311                     CCPR3           equ	785	;# 
   660     0311                     CCPR3L          equ	785	;# 
   661     0312                     CCPR3H          equ	786	;# 
   662     0313                     CCP3CON         equ	787	;# 
   663     0318                     CCPR4           equ	792	;# 
   664     0318                     CCPR4L          equ	792	;# 
   665     0319                     CCPR4H          equ	793	;# 
   666     031A                     CCP4CON         equ	794	;# 
   667     038C                     INLVLA          equ	908	;# 
   668     038E                     INLVLC          equ	910	;# 
   669     0391                     IOCAP           equ	913	;# 
   670     0392                     IOCAN           equ	914	;# 
   671     0393                     IOCAF           equ	915	;# 
   672     039A                     CLKRCON         equ	922	;# 
   673     039C                     MDCON           equ	924	;# 
   674     039D                     MDSRC           equ	925	;# 
   675     039E                     MDCARL          equ	926	;# 
   676     039F                     MDCARH          equ	927	;# 
   677     0415                     TMR4            equ	1045	;# 
   678     0416                     PR4             equ	1046	;# 
   679     0417                     T4CON           equ	1047	;# 
   680     041C                     TMR6            equ	1052	;# 
   681     041D                     PR6             equ	1053	;# 
   682     041E                     T6CON           equ	1054	;# 
   683     0FE4                     STATUS_SHAD     equ	4068	;# 
   684     0FE5                     WREG_SHAD       equ	4069	;# 
   685     0FE6                     BSR_SHAD        equ	4070	;# 
   686     0FE7                     PCLATH_SHAD     equ	4071	;# 
   687     0FE8                     FSR0L_SHAD      equ	4072	;# 
   688     0FE9                     FSR0H_SHAD      equ	4073	;# 
   689     0FEA                     FSR1L_SHAD      equ	4074	;# 
   690     0FEB                     FSR1H_SHAD      equ	4075	;# 
   691     0FED                     STKPTR          equ	4077	;# 
   692     0FEE                     TOSL            equ	4078	;# 
   693     0FEF                     TOSH            equ	4079	;# 
   694     0000                     INDF0           equ	0	;# 
   695     0001                     INDF1           equ	1	;# 
   696     0002                     PCL             equ	2	;# 
   697     0003                     STATUS          equ	3	;# 
   698     0004                     FSR0L           equ	4	;# 
   699     0005                     FSR0H           equ	5	;# 
   700     0006                     FSR1L           equ	6	;# 
   701     0007                     FSR1H           equ	7	;# 
   702     0008                     BSR             equ	8	;# 
   703     0009                     WREG            equ	9	;# 
   704     000A                     PCLATH          equ	10	;# 
   705     000B                     INTCON          equ	11	;# 
   706     000C                     PORTA           equ	12	;# 
   707     000E                     PORTC           equ	14	;# 
   708     0011                     PIR1            equ	17	;# 
   709     0012                     PIR2            equ	18	;# 
   710     0013                     PIR3            equ	19	;# 
   711     0015                     TMR0            equ	21	;# 
   712     0016                     TMR1            equ	22	;# 
   713     0016                     TMR1L           equ	22	;# 
   714     0017                     TMR1H           equ	23	;# 
   715     0018                     T1CON           equ	24	;# 
   716     0019                     T1GCON          equ	25	;# 
   717     001A                     TMR2            equ	26	;# 
   718     001B                     PR2             equ	27	;# 
   719     001C                     T2CON           equ	28	;# 
   720     001E                     CPSCON0         equ	30	;# 
   721     001F                     CPSCON1         equ	31	;# 
   722     008C                     TRISA           equ	140	;# 
   723     008E                     TRISC           equ	142	;# 
   724     0091                     PIE1            equ	145	;# 
   725     0092                     PIE2            equ	146	;# 
   726     0093                     PIE3            equ	147	;# 
   727     0095                     OPTION_REG      equ	149	;# 
   728     0096                     PCON            equ	150	;# 
   729     0097                     WDTCON          equ	151	;# 
   730     0098                     OSCTUNE         equ	152	;# 
   731     0099                     OSCCON          equ	153	;# 
   732     009A                     OSCSTAT         equ	154	;# 
   733     009B                     ADRES           equ	155	;# 
   734     009B                     ADRESL          equ	155	;# 
   735     009C                     ADRESH          equ	156	;# 
   736     009D                     ADCON0          equ	157	;# 
   737     009E                     ADCON1          equ	158	;# 
   738     010C                     LATA            equ	268	;# 
   739     010E                     LATC            equ	270	;# 
   740     0111                     CM1CON0         equ	273	;# 
   741     0112                     CM1CON1         equ	274	;# 
   742     0113                     CM2CON0         equ	275	;# 
   743     0114                     CM2CON1         equ	276	;# 
   744     0115                     CMOUT           equ	277	;# 
   745     0116                     BORCON          equ	278	;# 
   746     0117                     FVRCON          equ	279	;# 
   747     0118                     DACCON0         equ	280	;# 
   748     0119                     DACCON1         equ	281	;# 
   749     011A                     SRCON0          equ	282	;# 
   750     011B                     SRCON1          equ	283	;# 
   751     011D                     APFCON0         equ	285	;# 
   752     011E                     APFCON1         equ	286	;# 
   753     018C                     ANSELA          equ	396	;# 
   754     018E                     ANSELC          equ	398	;# 
   755     0191                     EEADR           equ	401	;# 
   756     0191                     EEADRL          equ	401	;# 
   757     0192                     EEADRH          equ	402	;# 
   758     0193                     EEDAT           equ	403	;# 
   759     0193                     EEDATL          equ	403	;# 
   760     0193                     EEDATA          equ	403	;# 
   761     0194                     EEDATH          equ	404	;# 
   762     0195                     EECON1          equ	405	;# 
   763     0196                     EECON2          equ	406	;# 
   764     0199                     RCREG           equ	409	;# 
   765     019A                     TXREG           equ	410	;# 
   766     019B                     SPBRG           equ	411	;# 
   767     019B                     SPBRGL          equ	411	;# 
   768     019C                     SPBRGH          equ	412	;# 
   769     019D                     RCSTA           equ	413	;# 
   770     019E                     TXSTA           equ	414	;# 
   771     019F                     BAUDCON         equ	415	;# 
   772     020C                     WPUA            equ	524	;# 
   773     020E                     WPUC            equ	526	;# 
   774     0211                     SSP1BUF         equ	529	;# 
   775     0211                     SSPBUF          equ	529	;# 
   776     0212                     SSP1ADD         equ	530	;# 
   777     0212                     SSPADD          equ	530	;# 
   778     0213                     SSP1MSK         equ	531	;# 
   779     0213                     SSPMSK          equ	531	;# 
   780     0214                     SSP1STAT        equ	532	;# 
   781     0214                     SSPSTAT         equ	532	;# 
   782     0215                     SSP1CON1        equ	533	;# 
   783     0215                     SSPCON1         equ	533	;# 
   784     0215                     SSPCON          equ	533	;# 
   785     0216                     SSP1CON2        equ	534	;# 
   786     0216                     SSPCON2         equ	534	;# 
   787     0217                     SSP1CON3        equ	535	;# 
   788     0217                     SSPCON3         equ	535	;# 
   789     0291                     CCPR1           equ	657	;# 
   790     0291                     CCPR1L          equ	657	;# 
   791     0292                     CCPR1H          equ	658	;# 
   792     0293                     CCP1CON         equ	659	;# 
   793     0294                     PWM1CON         equ	660	;# 
   794     0295                     CCP1AS          equ	661	;# 
   795     0295                     ECCP1AS         equ	661	;# 
   796     0296                     PSTR1CON        equ	662	;# 
   797     0298                     CCPR2           equ	664	;# 
   798     0298                     CCPR2L          equ	664	;# 
   799     0299                     CCPR2H          equ	665	;# 
   800     029A                     CCP2CON         equ	666	;# 
   801     029B                     PWM2CON         equ	667	;# 
   802     029C                     CCP2AS          equ	668	;# 
   803     029D                     PSTR2CON        equ	669	;# 
   804     029E                     CCPTMRS         equ	670	;# 
   805     029E                     CCPTMRS0        equ	670	;# 
   806     0311                     CCPR3           equ	785	;# 
   807     0311                     CCPR3L          equ	785	;# 
   808     0312                     CCPR3H          equ	786	;# 
   809     0313                     CCP3CON         equ	787	;# 
   810     0318                     CCPR4           equ	792	;# 
   811     0318                     CCPR4L          equ	792	;# 
   812     0319                     CCPR4H          equ	793	;# 
   813     031A                     CCP4CON         equ	794	;# 
   814     038C                     INLVLA          equ	908	;# 
   815     038E                     INLVLC          equ	910	;# 
   816     0391                     IOCAP           equ	913	;# 
   817     0392                     IOCAN           equ	914	;# 
   818     0393                     IOCAF           equ	915	;# 
   819     039A                     CLKRCON         equ	922	;# 
   820     039C                     MDCON           equ	924	;# 
   821     039D                     MDSRC           equ	925	;# 
   822     039E                     MDCARL          equ	926	;# 
   823     039F                     MDCARH          equ	927	;# 
   824     0415                     TMR4            equ	1045	;# 
   825     0416                     PR4             equ	1046	;# 
   826     0417                     T4CON           equ	1047	;# 
   827     041C                     TMR6            equ	1052	;# 
   828     041D                     PR6             equ	1053	;# 
   829     041E                     T6CON           equ	1054	;# 
   830     0FE4                     STATUS_SHAD     equ	4068	;# 
   831     0FE5                     WREG_SHAD       equ	4069	;# 
   832     0FE6                     BSR_SHAD        equ	4070	;# 
   833     0FE7                     PCLATH_SHAD     equ	4071	;# 
   834     0FE8                     FSR0L_SHAD      equ	4072	;# 
   835     0FE9                     FSR0H_SHAD      equ	4073	;# 
   836     0FEA                     FSR1L_SHAD      equ	4074	;# 
   837     0FEB                     FSR1H_SHAD      equ	4075	;# 
   838     0FED                     STKPTR          equ	4077	;# 
   839     0FEE                     TOSL            equ	4078	;# 
   840     0FEF                     TOSH            equ	4079	;# 
   841     0000                     INDF0           equ	0	;# 
   842     0001                     INDF1           equ	1	;# 
   843     0002                     PCL             equ	2	;# 
   844     0003                     STATUS          equ	3	;# 
   845     0004                     FSR0L           equ	4	;# 
   846     0005                     FSR0H           equ	5	;# 
   847     0006                     FSR1L           equ	6	;# 
   848     0007                     FSR1H           equ	7	;# 
   849     0008                     BSR             equ	8	;# 
   850     0009                     WREG            equ	9	;# 
   851     000A                     PCLATH          equ	10	;# 
   852     000B                     INTCON          equ	11	;# 
   853     000C                     PORTA           equ	12	;# 
   854     000E                     PORTC           equ	14	;# 
   855     0011                     PIR1            equ	17	;# 
   856     0012                     PIR2            equ	18	;# 
   857     0013                     PIR3            equ	19	;# 
   858     0015                     TMR0            equ	21	;# 
   859     0016                     TMR1            equ	22	;# 
   860     0016                     TMR1L           equ	22	;# 
   861     0017                     TMR1H           equ	23	;# 
   862     0018                     T1CON           equ	24	;# 
   863     0019                     T1GCON          equ	25	;# 
   864     001A                     TMR2            equ	26	;# 
   865     001B                     PR2             equ	27	;# 
   866     001C                     T2CON           equ	28	;# 
   867     001E                     CPSCON0         equ	30	;# 
   868     001F                     CPSCON1         equ	31	;# 
   869     008C                     TRISA           equ	140	;# 
   870     008E                     TRISC           equ	142	;# 
   871     0091                     PIE1            equ	145	;# 
   872     0092                     PIE2            equ	146	;# 
   873     0093                     PIE3            equ	147	;# 
   874     0095                     OPTION_REG      equ	149	;# 
   875     0096                     PCON            equ	150	;# 
   876     0097                     WDTCON          equ	151	;# 
   877     0098                     OSCTUNE         equ	152	;# 
   878     0099                     OSCCON          equ	153	;# 
   879     009A                     OSCSTAT         equ	154	;# 
   880     009B                     ADRES           equ	155	;# 
   881     009B                     ADRESL          equ	155	;# 
   882     009C                     ADRESH          equ	156	;# 
   883     009D                     ADCON0          equ	157	;# 
   884     009E                     ADCON1          equ	158	;# 
   885     010C                     LATA            equ	268	;# 
   886     010E                     LATC            equ	270	;# 
   887     0111                     CM1CON0         equ	273	;# 
   888     0112                     CM1CON1         equ	274	;# 
   889     0113                     CM2CON0         equ	275	;# 
   890     0114                     CM2CON1         equ	276	;# 
   891     0115                     CMOUT           equ	277	;# 
   892     0116                     BORCON          equ	278	;# 
   893     0117                     FVRCON          equ	279	;# 
   894     0118                     DACCON0         equ	280	;# 
   895     0119                     DACCON1         equ	281	;# 
   896     011A                     SRCON0          equ	282	;# 
   897     011B                     SRCON1          equ	283	;# 
   898     011D                     APFCON0         equ	285	;# 
   899     011E                     APFCON1         equ	286	;# 
   900     018C                     ANSELA          equ	396	;# 
   901     018E                     ANSELC          equ	398	;# 
   902     0191                     EEADR           equ	401	;# 
   903     0191                     EEADRL          equ	401	;# 
   904     0192                     EEADRH          equ	402	;# 
   905     0193                     EEDAT           equ	403	;# 
   906     0193                     EEDATL          equ	403	;# 
   907     0193                     EEDATA          equ	403	;# 
   908     0194                     EEDATH          equ	404	;# 
   909     0195                     EECON1          equ	405	;# 
   910     0196                     EECON2          equ	406	;# 
   911     0199                     RCREG           equ	409	;# 
   912     019A                     TXREG           equ	410	;# 
   913     019B                     SPBRG           equ	411	;# 
   914     019B                     SPBRGL          equ	411	;# 
   915     019C                     SPBRGH          equ	412	;# 
   916     019D                     RCSTA           equ	413	;# 
   917     019E                     TXSTA           equ	414	;# 
   918     019F                     BAUDCON         equ	415	;# 
   919     020C                     WPUA            equ	524	;# 
   920     020E                     WPUC            equ	526	;# 
   921     0211                     SSP1BUF         equ	529	;# 
   922     0211                     SSPBUF          equ	529	;# 
   923     0212                     SSP1ADD         equ	530	;# 
   924     0212                     SSPADD          equ	530	;# 
   925     0213                     SSP1MSK         equ	531	;# 
   926     0213                     SSPMSK          equ	531	;# 
   927     0214                     SSP1STAT        equ	532	;# 
   928     0214                     SSPSTAT         equ	532	;# 
   929     0215                     SSP1CON1        equ	533	;# 
   930     0215                     SSPCON1         equ	533	;# 
   931     0215                     SSPCON          equ	533	;# 
   932     0216                     SSP1CON2        equ	534	;# 
   933     0216                     SSPCON2         equ	534	;# 
   934     0217                     SSP1CON3        equ	535	;# 
   935     0217                     SSPCON3         equ	535	;# 
   936     0291                     CCPR1           equ	657	;# 
   937     0291                     CCPR1L          equ	657	;# 
   938     0292                     CCPR1H          equ	658	;# 
   939     0293                     CCP1CON         equ	659	;# 
   940     0294                     PWM1CON         equ	660	;# 
   941     0295                     CCP1AS          equ	661	;# 
   942     0295                     ECCP1AS         equ	661	;# 
   943     0296                     PSTR1CON        equ	662	;# 
   944     0298                     CCPR2           equ	664	;# 
   945     0298                     CCPR2L          equ	664	;# 
   946     0299                     CCPR2H          equ	665	;# 
   947     029A                     CCP2CON         equ	666	;# 
   948     029B                     PWM2CON         equ	667	;# 
   949     029C                     CCP2AS          equ	668	;# 
   950     029D                     PSTR2CON        equ	669	;# 
   951     029E                     CCPTMRS         equ	670	;# 
   952     029E                     CCPTMRS0        equ	670	;# 
   953     0311                     CCPR3           equ	785	;# 
   954     0311                     CCPR3L          equ	785	;# 
   955     0312                     CCPR3H          equ	786	;# 
   956     0313                     CCP3CON         equ	787	;# 
   957     0318                     CCPR4           equ	792	;# 
   958     0318                     CCPR4L          equ	792	;# 
   959     0319                     CCPR4H          equ	793	;# 
   960     031A                     CCP4CON         equ	794	;# 
   961     038C                     INLVLA          equ	908	;# 
   962     038E                     INLVLC          equ	910	;# 
   963     0391                     IOCAP           equ	913	;# 
   964     0392                     IOCAN           equ	914	;# 
   965     0393                     IOCAF           equ	915	;# 
   966     039A                     CLKRCON         equ	922	;# 
   967     039C                     MDCON           equ	924	;# 
   968     039D                     MDSRC           equ	925	;# 
   969     039E                     MDCARL          equ	926	;# 
   970     039F                     MDCARH          equ	927	;# 
   971     0415                     TMR4            equ	1045	;# 
   972     0416                     PR4             equ	1046	;# 
   973     0417                     T4CON           equ	1047	;# 
   974     041C                     TMR6            equ	1052	;# 
   975     041D                     PR6             equ	1053	;# 
   976     041E                     T6CON           equ	1054	;# 
   977     0FE4                     STATUS_SHAD     equ	4068	;# 
   978     0FE5                     WREG_SHAD       equ	4069	;# 
   979     0FE6                     BSR_SHAD        equ	4070	;# 
   980     0FE7                     PCLATH_SHAD     equ	4071	;# 
   981     0FE8                     FSR0L_SHAD      equ	4072	;# 
   982     0FE9                     FSR0H_SHAD      equ	4073	;# 
   983     0FEA                     FSR1L_SHAD      equ	4074	;# 
   984     0FEB                     FSR1H_SHAD      equ	4075	;# 
   985     0FED                     STKPTR          equ	4077	;# 
   986     0FEE                     TOSL            equ	4078	;# 
   987     0FEF                     TOSH            equ	4079	;# 
   988     0000                     INDF0           equ	0	;# 
   989     0001                     INDF1           equ	1	;# 
   990     0002                     PCL             equ	2	;# 
   991     0003                     STATUS          equ	3	;# 
   992     0004                     FSR0L           equ	4	;# 
   993     0005                     FSR0H           equ	5	;# 
   994     0006                     FSR1L           equ	6	;# 
   995     0007                     FSR1H           equ	7	;# 
   996     0008                     BSR             equ	8	;# 
   997     0009                     WREG            equ	9	;# 
   998     000A                     PCLATH          equ	10	;# 
   999     000B                     INTCON          equ	11	;# 
  1000     000C                     PORTA           equ	12	;# 
  1001     000E                     PORTC           equ	14	;# 
  1002     0011                     PIR1            equ	17	;# 
  1003     0012                     PIR2            equ	18	;# 
  1004     0013                     PIR3            equ	19	;# 
  1005     0015                     TMR0            equ	21	;# 
  1006     0016                     TMR1            equ	22	;# 
  1007     0016                     TMR1L           equ	22	;# 
  1008     0017                     TMR1H           equ	23	;# 
  1009     0018                     T1CON           equ	24	;# 
  1010     0019                     T1GCON          equ	25	;# 
  1011     001A                     TMR2            equ	26	;# 
  1012     001B                     PR2             equ	27	;# 
  1013     001C                     T2CON           equ	28	;# 
  1014     001E                     CPSCON0         equ	30	;# 
  1015     001F                     CPSCON1         equ	31	;# 
  1016     008C                     TRISA           equ	140	;# 
  1017     008E                     TRISC           equ	142	;# 
  1018     0091                     PIE1            equ	145	;# 
  1019     0092                     PIE2            equ	146	;# 
  1020     0093                     PIE3            equ	147	;# 
  1021     0095                     OPTION_REG      equ	149	;# 
  1022     0096                     PCON            equ	150	;# 
  1023     0097                     WDTCON          equ	151	;# 
  1024     0098                     OSCTUNE         equ	152	;# 
  1025     0099                     OSCCON          equ	153	;# 
  1026     009A                     OSCSTAT         equ	154	;# 
  1027     009B                     ADRES           equ	155	;# 
  1028     009B                     ADRESL          equ	155	;# 
  1029     009C                     ADRESH          equ	156	;# 
  1030     009D                     ADCON0          equ	157	;# 
  1031     009E                     ADCON1          equ	158	;# 
  1032     010C                     LATA            equ	268	;# 
  1033     010E                     LATC            equ	270	;# 
  1034     0111                     CM1CON0         equ	273	;# 
  1035     0112                     CM1CON1         equ	274	;# 
  1036     0113                     CM2CON0         equ	275	;# 
  1037     0114                     CM2CON1         equ	276	;# 
  1038     0115                     CMOUT           equ	277	;# 
  1039     0116                     BORCON          equ	278	;# 
  1040     0117                     FVRCON          equ	279	;# 
  1041     0118                     DACCON0         equ	280	;# 
  1042     0119                     DACCON1         equ	281	;# 
  1043     011A                     SRCON0          equ	282	;# 
  1044     011B                     SRCON1          equ	283	;# 
  1045     011D                     APFCON0         equ	285	;# 
  1046     011E                     APFCON1         equ	286	;# 
  1047     018C                     ANSELA          equ	396	;# 
  1048     018E                     ANSELC          equ	398	;# 
  1049     0191                     EEADR           equ	401	;# 
  1050     0191                     EEADRL          equ	401	;# 
  1051     0192                     EEADRH          equ	402	;# 
  1052     0193                     EEDAT           equ	403	;# 
  1053     0193                     EEDATL          equ	403	;# 
  1054     0193                     EEDATA          equ	403	;# 
  1055     0194                     EEDATH          equ	404	;# 
  1056     0195                     EECON1          equ	405	;# 
  1057     0196                     EECON2          equ	406	;# 
  1058     0199                     RCREG           equ	409	;# 
  1059     019A                     TXREG           equ	410	;# 
  1060     019B                     SPBRG           equ	411	;# 
  1061     019B                     SPBRGL          equ	411	;# 
  1062     019C                     SPBRGH          equ	412	;# 
  1063     019D                     RCSTA           equ	413	;# 
  1064     019E                     TXSTA           equ	414	;# 
  1065     019F                     BAUDCON         equ	415	;# 
  1066     020C                     WPUA            equ	524	;# 
  1067     020E                     WPUC            equ	526	;# 
  1068     0211                     SSP1BUF         equ	529	;# 
  1069     0211                     SSPBUF          equ	529	;# 
  1070     0212                     SSP1ADD         equ	530	;# 
  1071     0212                     SSPADD          equ	530	;# 
  1072     0213                     SSP1MSK         equ	531	;# 
  1073     0213                     SSPMSK          equ	531	;# 
  1074     0214                     SSP1STAT        equ	532	;# 
  1075     0214                     SSPSTAT         equ	532	;# 
  1076     0215                     SSP1CON1        equ	533	;# 
  1077     0215                     SSPCON1         equ	533	;# 
  1078     0215                     SSPCON          equ	533	;# 
  1079     0216                     SSP1CON2        equ	534	;# 
  1080     0216                     SSPCON2         equ	534	;# 
  1081     0217                     SSP1CON3        equ	535	;# 
  1082     0217                     SSPCON3         equ	535	;# 
  1083     0291                     CCPR1           equ	657	;# 
  1084     0291                     CCPR1L          equ	657	;# 
  1085     0292                     CCPR1H          equ	658	;# 
  1086     0293                     CCP1CON         equ	659	;# 
  1087     0294                     PWM1CON         equ	660	;# 
  1088     0295                     CCP1AS          equ	661	;# 
  1089     0295                     ECCP1AS         equ	661	;# 
  1090     0296                     PSTR1CON        equ	662	;# 
  1091     0298                     CCPR2           equ	664	;# 
  1092     0298                     CCPR2L          equ	664	;# 
  1093     0299                     CCPR2H          equ	665	;# 
  1094     029A                     CCP2CON         equ	666	;# 
  1095     029B                     PWM2CON         equ	667	;# 
  1096     029C                     CCP2AS          equ	668	;# 
  1097     029D                     PSTR2CON        equ	669	;# 
  1098     029E                     CCPTMRS         equ	670	;# 
  1099     029E                     CCPTMRS0        equ	670	;# 
  1100     0311                     CCPR3           equ	785	;# 
  1101     0311                     CCPR3L          equ	785	;# 
  1102     0312                     CCPR3H          equ	786	;# 
  1103     0313                     CCP3CON         equ	787	;# 
  1104     0318                     CCPR4           equ	792	;# 
  1105     0318                     CCPR4L          equ	792	;# 
  1106     0319                     CCPR4H          equ	793	;# 
  1107     031A                     CCP4CON         equ	794	;# 
  1108     038C                     INLVLA          equ	908	;# 
  1109     038E                     INLVLC          equ	910	;# 
  1110     0391                     IOCAP           equ	913	;# 
  1111     0392                     IOCAN           equ	914	;# 
  1112     0393                     IOCAF           equ	915	;# 
  1113     039A                     CLKRCON         equ	922	;# 
  1114     039C                     MDCON           equ	924	;# 
  1115     039D                     MDSRC           equ	925	;# 
  1116     039E                     MDCARL          equ	926	;# 
  1117     039F                     MDCARH          equ	927	;# 
  1118     0415                     TMR4            equ	1045	;# 
  1119     0416                     PR4             equ	1046	;# 
  1120     0417                     T4CON           equ	1047	;# 
  1121     041C                     TMR6            equ	1052	;# 
  1122     041D                     PR6             equ	1053	;# 
  1123     041E                     T6CON           equ	1054	;# 
  1124     0FE4                     STATUS_SHAD     equ	4068	;# 
  1125     0FE5                     WREG_SHAD       equ	4069	;# 
  1126     0FE6                     BSR_SHAD        equ	4070	;# 
  1127     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1128     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1129     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1130     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1131     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1132     0FED                     STKPTR          equ	4077	;# 
  1133     0FEE                     TOSL            equ	4078	;# 
  1134     0FEF                     TOSH            equ	4079	;# 
  1135     0000                     INDF0           equ	0	;# 
  1136     0001                     INDF1           equ	1	;# 
  1137     0002                     PCL             equ	2	;# 
  1138     0003                     STATUS          equ	3	;# 
  1139     0004                     FSR0L           equ	4	;# 
  1140     0005                     FSR0H           equ	5	;# 
  1141     0006                     FSR1L           equ	6	;# 
  1142     0007                     FSR1H           equ	7	;# 
  1143     0008                     BSR             equ	8	;# 
  1144     0009                     WREG            equ	9	;# 
  1145     000A                     PCLATH          equ	10	;# 
  1146     000B                     INTCON          equ	11	;# 
  1147     000C                     PORTA           equ	12	;# 
  1148     000E                     PORTC           equ	14	;# 
  1149     0011                     PIR1            equ	17	;# 
  1150     0012                     PIR2            equ	18	;# 
  1151     0013                     PIR3            equ	19	;# 
  1152     0015                     TMR0            equ	21	;# 
  1153     0016                     TMR1            equ	22	;# 
  1154     0016                     TMR1L           equ	22	;# 
  1155     0017                     TMR1H           equ	23	;# 
  1156     0018                     T1CON           equ	24	;# 
  1157     0019                     T1GCON          equ	25	;# 
  1158     001A                     TMR2            equ	26	;# 
  1159     001B                     PR2             equ	27	;# 
  1160     001C                     T2CON           equ	28	;# 
  1161     001E                     CPSCON0         equ	30	;# 
  1162     001F                     CPSCON1         equ	31	;# 
  1163     008C                     TRISA           equ	140	;# 
  1164     008E                     TRISC           equ	142	;# 
  1165     0091                     PIE1            equ	145	;# 
  1166     0092                     PIE2            equ	146	;# 
  1167     0093                     PIE3            equ	147	;# 
  1168     0095                     OPTION_REG      equ	149	;# 
  1169     0096                     PCON            equ	150	;# 
  1170     0097                     WDTCON          equ	151	;# 
  1171     0098                     OSCTUNE         equ	152	;# 
  1172     0099                     OSCCON          equ	153	;# 
  1173     009A                     OSCSTAT         equ	154	;# 
  1174     009B                     ADRES           equ	155	;# 
  1175     009B                     ADRESL          equ	155	;# 
  1176     009C                     ADRESH          equ	156	;# 
  1177     009D                     ADCON0          equ	157	;# 
  1178     009E                     ADCON1          equ	158	;# 
  1179     010C                     LATA            equ	268	;# 
  1180     010E                     LATC            equ	270	;# 
  1181     0111                     CM1CON0         equ	273	;# 
  1182     0112                     CM1CON1         equ	274	;# 
  1183     0113                     CM2CON0         equ	275	;# 
  1184     0114                     CM2CON1         equ	276	;# 
  1185     0115                     CMOUT           equ	277	;# 
  1186     0116                     BORCON          equ	278	;# 
  1187     0117                     FVRCON          equ	279	;# 
  1188     0118                     DACCON0         equ	280	;# 
  1189     0119                     DACCON1         equ	281	;# 
  1190     011A                     SRCON0          equ	282	;# 
  1191     011B                     SRCON1          equ	283	;# 
  1192     011D                     APFCON0         equ	285	;# 
  1193     011E                     APFCON1         equ	286	;# 
  1194     018C                     ANSELA          equ	396	;# 
  1195     018E                     ANSELC          equ	398	;# 
  1196     0191                     EEADR           equ	401	;# 
  1197     0191                     EEADRL          equ	401	;# 
  1198     0192                     EEADRH          equ	402	;# 
  1199     0193                     EEDAT           equ	403	;# 
  1200     0193                     EEDATL          equ	403	;# 
  1201     0193                     EEDATA          equ	403	;# 
  1202     0194                     EEDATH          equ	404	;# 
  1203     0195                     EECON1          equ	405	;# 
  1204     0196                     EECON2          equ	406	;# 
  1205     0199                     RCREG           equ	409	;# 
  1206     019A                     TXREG           equ	410	;# 
  1207     019B                     SPBRG           equ	411	;# 
  1208     019B                     SPBRGL          equ	411	;# 
  1209     019C                     SPBRGH          equ	412	;# 
  1210     019D                     RCSTA           equ	413	;# 
  1211     019E                     TXSTA           equ	414	;# 
  1212     019F                     BAUDCON         equ	415	;# 
  1213     020C                     WPUA            equ	524	;# 
  1214     020E                     WPUC            equ	526	;# 
  1215     0211                     SSP1BUF         equ	529	;# 
  1216     0211                     SSPBUF          equ	529	;# 
  1217     0212                     SSP1ADD         equ	530	;# 
  1218     0212                     SSPADD          equ	530	;# 
  1219     0213                     SSP1MSK         equ	531	;# 
  1220     0213                     SSPMSK          equ	531	;# 
  1221     0214                     SSP1STAT        equ	532	;# 
  1222     0214                     SSPSTAT         equ	532	;# 
  1223     0215                     SSP1CON1        equ	533	;# 
  1224     0215                     SSPCON1         equ	533	;# 
  1225     0215                     SSPCON          equ	533	;# 
  1226     0216                     SSP1CON2        equ	534	;# 
  1227     0216                     SSPCON2         equ	534	;# 
  1228     0217                     SSP1CON3        equ	535	;# 
  1229     0217                     SSPCON3         equ	535	;# 
  1230     0291                     CCPR1           equ	657	;# 
  1231     0291                     CCPR1L          equ	657	;# 
  1232     0292                     CCPR1H          equ	658	;# 
  1233     0293                     CCP1CON         equ	659	;# 
  1234     0294                     PWM1CON         equ	660	;# 
  1235     0295                     CCP1AS          equ	661	;# 
  1236     0295                     ECCP1AS         equ	661	;# 
  1237     0296                     PSTR1CON        equ	662	;# 
  1238     0298                     CCPR2           equ	664	;# 
  1239     0298                     CCPR2L          equ	664	;# 
  1240     0299                     CCPR2H          equ	665	;# 
  1241     029A                     CCP2CON         equ	666	;# 
  1242     029B                     PWM2CON         equ	667	;# 
  1243     029C                     CCP2AS          equ	668	;# 
  1244     029D                     PSTR2CON        equ	669	;# 
  1245     029E                     CCPTMRS         equ	670	;# 
  1246     029E                     CCPTMRS0        equ	670	;# 
  1247     0311                     CCPR3           equ	785	;# 
  1248     0311                     CCPR3L          equ	785	;# 
  1249     0312                     CCPR3H          equ	786	;# 
  1250     0313                     CCP3CON         equ	787	;# 
  1251     0318                     CCPR4           equ	792	;# 
  1252     0318                     CCPR4L          equ	792	;# 
  1253     0319                     CCPR4H          equ	793	;# 
  1254     031A                     CCP4CON         equ	794	;# 
  1255     038C                     INLVLA          equ	908	;# 
  1256     038E                     INLVLC          equ	910	;# 
  1257     0391                     IOCAP           equ	913	;# 
  1258     0392                     IOCAN           equ	914	;# 
  1259     0393                     IOCAF           equ	915	;# 
  1260     039A                     CLKRCON         equ	922	;# 
  1261     039C                     MDCON           equ	924	;# 
  1262     039D                     MDSRC           equ	925	;# 
  1263     039E                     MDCARL          equ	926	;# 
  1264     039F                     MDCARH          equ	927	;# 
  1265     0415                     TMR4            equ	1045	;# 
  1266     0416                     PR4             equ	1046	;# 
  1267     0417                     T4CON           equ	1047	;# 
  1268     041C                     TMR6            equ	1052	;# 
  1269     041D                     PR6             equ	1053	;# 
  1270     041E                     T6CON           equ	1054	;# 
  1271     0FE4                     STATUS_SHAD     equ	4068	;# 
  1272     0FE5                     WREG_SHAD       equ	4069	;# 
  1273     0FE6                     BSR_SHAD        equ	4070	;# 
  1274     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1275     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1276     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1277     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1278     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1279     0FED                     STKPTR          equ	4077	;# 
  1280     0FEE                     TOSL            equ	4078	;# 
  1281     0FEF                     TOSH            equ	4079	;# 
  1282     0000                     INDF0           equ	0	;# 
  1283     0001                     INDF1           equ	1	;# 
  1284     0002                     PCL             equ	2	;# 
  1285     0003                     STATUS          equ	3	;# 
  1286     0004                     FSR0L           equ	4	;# 
  1287     0005                     FSR0H           equ	5	;# 
  1288     0006                     FSR1L           equ	6	;# 
  1289     0007                     FSR1H           equ	7	;# 
  1290     0008                     BSR             equ	8	;# 
  1291     0009                     WREG            equ	9	;# 
  1292     000A                     PCLATH          equ	10	;# 
  1293     000B                     INTCON          equ	11	;# 
  1294     000C                     PORTA           equ	12	;# 
  1295     000E                     PORTC           equ	14	;# 
  1296     0011                     PIR1            equ	17	;# 
  1297     0012                     PIR2            equ	18	;# 
  1298     0013                     PIR3            equ	19	;# 
  1299     0015                     TMR0            equ	21	;# 
  1300     0016                     TMR1            equ	22	;# 
  1301     0016                     TMR1L           equ	22	;# 
  1302     0017                     TMR1H           equ	23	;# 
  1303     0018                     T1CON           equ	24	;# 
  1304     0019                     T1GCON          equ	25	;# 
  1305     001A                     TMR2            equ	26	;# 
  1306     001B                     PR2             equ	27	;# 
  1307     001C                     T2CON           equ	28	;# 
  1308     001E                     CPSCON0         equ	30	;# 
  1309     001F                     CPSCON1         equ	31	;# 
  1310     008C                     TRISA           equ	140	;# 
  1311     008E                     TRISC           equ	142	;# 
  1312     0091                     PIE1            equ	145	;# 
  1313     0092                     PIE2            equ	146	;# 
  1314     0093                     PIE3            equ	147	;# 
  1315     0095                     OPTION_REG      equ	149	;# 
  1316     0096                     PCON            equ	150	;# 
  1317     0097                     WDTCON          equ	151	;# 
  1318     0098                     OSCTUNE         equ	152	;# 
  1319     0099                     OSCCON          equ	153	;# 
  1320     009A                     OSCSTAT         equ	154	;# 
  1321     009B                     ADRES           equ	155	;# 
  1322     009B                     ADRESL          equ	155	;# 
  1323     009C                     ADRESH          equ	156	;# 
  1324     009D                     ADCON0          equ	157	;# 
  1325     009E                     ADCON1          equ	158	;# 
  1326     010C                     LATA            equ	268	;# 
  1327     010E                     LATC            equ	270	;# 
  1328     0111                     CM1CON0         equ	273	;# 
  1329     0112                     CM1CON1         equ	274	;# 
  1330     0113                     CM2CON0         equ	275	;# 
  1331     0114                     CM2CON1         equ	276	;# 
  1332     0115                     CMOUT           equ	277	;# 
  1333     0116                     BORCON          equ	278	;# 
  1334     0117                     FVRCON          equ	279	;# 
  1335     0118                     DACCON0         equ	280	;# 
  1336     0119                     DACCON1         equ	281	;# 
  1337     011A                     SRCON0          equ	282	;# 
  1338     011B                     SRCON1          equ	283	;# 
  1339     011D                     APFCON0         equ	285	;# 
  1340     011E                     APFCON1         equ	286	;# 
  1341     018C                     ANSELA          equ	396	;# 
  1342     018E                     ANSELC          equ	398	;# 
  1343     0191                     EEADR           equ	401	;# 
  1344     0191                     EEADRL          equ	401	;# 
  1345     0192                     EEADRH          equ	402	;# 
  1346     0193                     EEDAT           equ	403	;# 
  1347     0193                     EEDATL          equ	403	;# 
  1348     0193                     EEDATA          equ	403	;# 
  1349     0194                     EEDATH          equ	404	;# 
  1350     0195                     EECON1          equ	405	;# 
  1351     0196                     EECON2          equ	406	;# 
  1352     0199                     RCREG           equ	409	;# 
  1353     019A                     TXREG           equ	410	;# 
  1354     019B                     SPBRG           equ	411	;# 
  1355     019B                     SPBRGL          equ	411	;# 
  1356     019C                     SPBRGH          equ	412	;# 
  1357     019D                     RCSTA           equ	413	;# 
  1358     019E                     TXSTA           equ	414	;# 
  1359     019F                     BAUDCON         equ	415	;# 
  1360     020C                     WPUA            equ	524	;# 
  1361     020E                     WPUC            equ	526	;# 
  1362     0211                     SSP1BUF         equ	529	;# 
  1363     0211                     SSPBUF          equ	529	;# 
  1364     0212                     SSP1ADD         equ	530	;# 
  1365     0212                     SSPADD          equ	530	;# 
  1366     0213                     SSP1MSK         equ	531	;# 
  1367     0213                     SSPMSK          equ	531	;# 
  1368     0214                     SSP1STAT        equ	532	;# 
  1369     0214                     SSPSTAT         equ	532	;# 
  1370     0215                     SSP1CON1        equ	533	;# 
  1371     0215                     SSPCON1         equ	533	;# 
  1372     0215                     SSPCON          equ	533	;# 
  1373     0216                     SSP1CON2        equ	534	;# 
  1374     0216                     SSPCON2         equ	534	;# 
  1375     0217                     SSP1CON3        equ	535	;# 
  1376     0217                     SSPCON3         equ	535	;# 
  1377     0291                     CCPR1           equ	657	;# 
  1378     0291                     CCPR1L          equ	657	;# 
  1379     0292                     CCPR1H          equ	658	;# 
  1380     0293                     CCP1CON         equ	659	;# 
  1381     0294                     PWM1CON         equ	660	;# 
  1382     0295                     CCP1AS          equ	661	;# 
  1383     0295                     ECCP1AS         equ	661	;# 
  1384     0296                     PSTR1CON        equ	662	;# 
  1385     0298                     CCPR2           equ	664	;# 
  1386     0298                     CCPR2L          equ	664	;# 
  1387     0299                     CCPR2H          equ	665	;# 
  1388     029A                     CCP2CON         equ	666	;# 
  1389     029B                     PWM2CON         equ	667	;# 
  1390     029C                     CCP2AS          equ	668	;# 
  1391     029D                     PSTR2CON        equ	669	;# 
  1392     029E                     CCPTMRS         equ	670	;# 
  1393     029E                     CCPTMRS0        equ	670	;# 
  1394     0311                     CCPR3           equ	785	;# 
  1395     0311                     CCPR3L          equ	785	;# 
  1396     0312                     CCPR3H          equ	786	;# 
  1397     0313                     CCP3CON         equ	787	;# 
  1398     0318                     CCPR4           equ	792	;# 
  1399     0318                     CCPR4L          equ	792	;# 
  1400     0319                     CCPR4H          equ	793	;# 
  1401     031A                     CCP4CON         equ	794	;# 
  1402     038C                     INLVLA          equ	908	;# 
  1403     038E                     INLVLC          equ	910	;# 
  1404     0391                     IOCAP           equ	913	;# 
  1405     0392                     IOCAN           equ	914	;# 
  1406     0393                     IOCAF           equ	915	;# 
  1407     039A                     CLKRCON         equ	922	;# 
  1408     039C                     MDCON           equ	924	;# 
  1409     039D                     MDSRC           equ	925	;# 
  1410     039E                     MDCARL          equ	926	;# 
  1411     039F                     MDCARH          equ	927	;# 
  1412     0415                     TMR4            equ	1045	;# 
  1413     0416                     PR4             equ	1046	;# 
  1414     0417                     T4CON           equ	1047	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     0FE4                     STATUS_SHAD     equ	4068	;# 
  1419     0FE5                     WREG_SHAD       equ	4069	;# 
  1420     0FE6                     BSR_SHAD        equ	4070	;# 
  1421     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1422     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1423     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1424     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1425     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1426     0FED                     STKPTR          equ	4077	;# 
  1427     0FEE                     TOSL            equ	4078	;# 
  1428     0FEF                     TOSH            equ	4079	;# 
  1429     0000                     INDF0           equ	0	;# 
  1430     0001                     INDF1           equ	1	;# 
  1431     0002                     PCL             equ	2	;# 
  1432     0003                     STATUS          equ	3	;# 
  1433     0004                     FSR0L           equ	4	;# 
  1434     0005                     FSR0H           equ	5	;# 
  1435     0006                     FSR1L           equ	6	;# 
  1436     0007                     FSR1H           equ	7	;# 
  1437     0008                     BSR             equ	8	;# 
  1438     0009                     WREG            equ	9	;# 
  1439     000A                     PCLATH          equ	10	;# 
  1440     000B                     INTCON          equ	11	;# 
  1441     000C                     PORTA           equ	12	;# 
  1442     000E                     PORTC           equ	14	;# 
  1443     0011                     PIR1            equ	17	;# 
  1444     0012                     PIR2            equ	18	;# 
  1445     0013                     PIR3            equ	19	;# 
  1446     0015                     TMR0            equ	21	;# 
  1447     0016                     TMR1            equ	22	;# 
  1448     0016                     TMR1L           equ	22	;# 
  1449     0017                     TMR1H           equ	23	;# 
  1450     0018                     T1CON           equ	24	;# 
  1451     0019                     T1GCON          equ	25	;# 
  1452     001A                     TMR2            equ	26	;# 
  1453     001B                     PR2             equ	27	;# 
  1454     001C                     T2CON           equ	28	;# 
  1455     001E                     CPSCON0         equ	30	;# 
  1456     001F                     CPSCON1         equ	31	;# 
  1457     008C                     TRISA           equ	140	;# 
  1458     008E                     TRISC           equ	142	;# 
  1459     0091                     PIE1            equ	145	;# 
  1460     0092                     PIE2            equ	146	;# 
  1461     0093                     PIE3            equ	147	;# 
  1462     0095                     OPTION_REG      equ	149	;# 
  1463     0096                     PCON            equ	150	;# 
  1464     0097                     WDTCON          equ	151	;# 
  1465     0098                     OSCTUNE         equ	152	;# 
  1466     0099                     OSCCON          equ	153	;# 
  1467     009A                     OSCSTAT         equ	154	;# 
  1468     009B                     ADRES           equ	155	;# 
  1469     009B                     ADRESL          equ	155	;# 
  1470     009C                     ADRESH          equ	156	;# 
  1471     009D                     ADCON0          equ	157	;# 
  1472     009E                     ADCON1          equ	158	;# 
  1473     010C                     LATA            equ	268	;# 
  1474     010E                     LATC            equ	270	;# 
  1475     0111                     CM1CON0         equ	273	;# 
  1476     0112                     CM1CON1         equ	274	;# 
  1477     0113                     CM2CON0         equ	275	;# 
  1478     0114                     CM2CON1         equ	276	;# 
  1479     0115                     CMOUT           equ	277	;# 
  1480     0116                     BORCON          equ	278	;# 
  1481     0117                     FVRCON          equ	279	;# 
  1482     0118                     DACCON0         equ	280	;# 
  1483     0119                     DACCON1         equ	281	;# 
  1484     011A                     SRCON0          equ	282	;# 
  1485     011B                     SRCON1          equ	283	;# 
  1486     011D                     APFCON0         equ	285	;# 
  1487     011E                     APFCON1         equ	286	;# 
  1488     018C                     ANSELA          equ	396	;# 
  1489     018E                     ANSELC          equ	398	;# 
  1490     0191                     EEADR           equ	401	;# 
  1491     0191                     EEADRL          equ	401	;# 
  1492     0192                     EEADRH          equ	402	;# 
  1493     0193                     EEDAT           equ	403	;# 
  1494     0193                     EEDATL          equ	403	;# 
  1495     0193                     EEDATA          equ	403	;# 
  1496     0194                     EEDATH          equ	404	;# 
  1497     0195                     EECON1          equ	405	;# 
  1498     0196                     EECON2          equ	406	;# 
  1499     0199                     RCREG           equ	409	;# 
  1500     019A                     TXREG           equ	410	;# 
  1501     019B                     SPBRG           equ	411	;# 
  1502     019B                     SPBRGL          equ	411	;# 
  1503     019C                     SPBRGH          equ	412	;# 
  1504     019D                     RCSTA           equ	413	;# 
  1505     019E                     TXSTA           equ	414	;# 
  1506     019F                     BAUDCON         equ	415	;# 
  1507     020C                     WPUA            equ	524	;# 
  1508     020E                     WPUC            equ	526	;# 
  1509     0211                     SSP1BUF         equ	529	;# 
  1510     0211                     SSPBUF          equ	529	;# 
  1511     0212                     SSP1ADD         equ	530	;# 
  1512     0212                     SSPADD          equ	530	;# 
  1513     0213                     SSP1MSK         equ	531	;# 
  1514     0213                     SSPMSK          equ	531	;# 
  1515     0214                     SSP1STAT        equ	532	;# 
  1516     0214                     SSPSTAT         equ	532	;# 
  1517     0215                     SSP1CON1        equ	533	;# 
  1518     0215                     SSPCON1         equ	533	;# 
  1519     0215                     SSPCON          equ	533	;# 
  1520     0216                     SSP1CON2        equ	534	;# 
  1521     0216                     SSPCON2         equ	534	;# 
  1522     0217                     SSP1CON3        equ	535	;# 
  1523     0217                     SSPCON3         equ	535	;# 
  1524     0291                     CCPR1           equ	657	;# 
  1525     0291                     CCPR1L          equ	657	;# 
  1526     0292                     CCPR1H          equ	658	;# 
  1527     0293                     CCP1CON         equ	659	;# 
  1528     0294                     PWM1CON         equ	660	;# 
  1529     0295                     CCP1AS          equ	661	;# 
  1530     0295                     ECCP1AS         equ	661	;# 
  1531     0296                     PSTR1CON        equ	662	;# 
  1532     0298                     CCPR2           equ	664	;# 
  1533     0298                     CCPR2L          equ	664	;# 
  1534     0299                     CCPR2H          equ	665	;# 
  1535     029A                     CCP2CON         equ	666	;# 
  1536     029B                     PWM2CON         equ	667	;# 
  1537     029C                     CCP2AS          equ	668	;# 
  1538     029D                     PSTR2CON        equ	669	;# 
  1539     029E                     CCPTMRS         equ	670	;# 
  1540     029E                     CCPTMRS0        equ	670	;# 
  1541     0311                     CCPR3           equ	785	;# 
  1542     0311                     CCPR3L          equ	785	;# 
  1543     0312                     CCPR3H          equ	786	;# 
  1544     0313                     CCP3CON         equ	787	;# 
  1545     0318                     CCPR4           equ	792	;# 
  1546     0318                     CCPR4L          equ	792	;# 
  1547     0319                     CCPR4H          equ	793	;# 
  1548     031A                     CCP4CON         equ	794	;# 
  1549     038C                     INLVLA          equ	908	;# 
  1550     038E                     INLVLC          equ	910	;# 
  1551     0391                     IOCAP           equ	913	;# 
  1552     0392                     IOCAN           equ	914	;# 
  1553     0393                     IOCAF           equ	915	;# 
  1554     039A                     CLKRCON         equ	922	;# 
  1555     039C                     MDCON           equ	924	;# 
  1556     039D                     MDSRC           equ	925	;# 
  1557     039E                     MDCARL          equ	926	;# 
  1558     039F                     MDCARH          equ	927	;# 
  1559     0415                     TMR4            equ	1045	;# 
  1560     0416                     PR4             equ	1046	;# 
  1561     0417                     T4CON           equ	1047	;# 
  1562     041C                     TMR6            equ	1052	;# 
  1563     041D                     PR6             equ	1053	;# 
  1564     041E                     T6CON           equ	1054	;# 
  1565     0FE4                     STATUS_SHAD     equ	4068	;# 
  1566     0FE5                     WREG_SHAD       equ	4069	;# 
  1567     0FE6                     BSR_SHAD        equ	4070	;# 
  1568     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1569     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1570     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1571     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1572     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1573     0FED                     STKPTR          equ	4077	;# 
  1574     0FEE                     TOSL            equ	4078	;# 
  1575     0FEF                     TOSH            equ	4079	;# 
  1576     0000                     INDF0           equ	0	;# 
  1577     0001                     INDF1           equ	1	;# 
  1578     0002                     PCL             equ	2	;# 
  1579     0003                     STATUS          equ	3	;# 
  1580     0004                     FSR0L           equ	4	;# 
  1581     0005                     FSR0H           equ	5	;# 
  1582     0006                     FSR1L           equ	6	;# 
  1583     0007                     FSR1H           equ	7	;# 
  1584     0008                     BSR             equ	8	;# 
  1585     0009                     WREG            equ	9	;# 
  1586     000A                     PCLATH          equ	10	;# 
  1587     000B                     INTCON          equ	11	;# 
  1588     000C                     PORTA           equ	12	;# 
  1589     000E                     PORTC           equ	14	;# 
  1590     0011                     PIR1            equ	17	;# 
  1591     0012                     PIR2            equ	18	;# 
  1592     0013                     PIR3            equ	19	;# 
  1593     0015                     TMR0            equ	21	;# 
  1594     0016                     TMR1            equ	22	;# 
  1595     0016                     TMR1L           equ	22	;# 
  1596     0017                     TMR1H           equ	23	;# 
  1597     0018                     T1CON           equ	24	;# 
  1598     0019                     T1GCON          equ	25	;# 
  1599     001A                     TMR2            equ	26	;# 
  1600     001B                     PR2             equ	27	;# 
  1601     001C                     T2CON           equ	28	;# 
  1602     001E                     CPSCON0         equ	30	;# 
  1603     001F                     CPSCON1         equ	31	;# 
  1604     008C                     TRISA           equ	140	;# 
  1605     008E                     TRISC           equ	142	;# 
  1606     0091                     PIE1            equ	145	;# 
  1607     0092                     PIE2            equ	146	;# 
  1608     0093                     PIE3            equ	147	;# 
  1609     0095                     OPTION_REG      equ	149	;# 
  1610     0096                     PCON            equ	150	;# 
  1611     0097                     WDTCON          equ	151	;# 
  1612     0098                     OSCTUNE         equ	152	;# 
  1613     0099                     OSCCON          equ	153	;# 
  1614     009A                     OSCSTAT         equ	154	;# 
  1615     009B                     ADRES           equ	155	;# 
  1616     009B                     ADRESL          equ	155	;# 
  1617     009C                     ADRESH          equ	156	;# 
  1618     009D                     ADCON0          equ	157	;# 
  1619     009E                     ADCON1          equ	158	;# 
  1620     010C                     LATA            equ	268	;# 
  1621     010E                     LATC            equ	270	;# 
  1622     0111                     CM1CON0         equ	273	;# 
  1623     0112                     CM1CON1         equ	274	;# 
  1624     0113                     CM2CON0         equ	275	;# 
  1625     0114                     CM2CON1         equ	276	;# 
  1626     0115                     CMOUT           equ	277	;# 
  1627     0116                     BORCON          equ	278	;# 
  1628     0117                     FVRCON          equ	279	;# 
  1629     0118                     DACCON0         equ	280	;# 
  1630     0119                     DACCON1         equ	281	;# 
  1631     011A                     SRCON0          equ	282	;# 
  1632     011B                     SRCON1          equ	283	;# 
  1633     011D                     APFCON0         equ	285	;# 
  1634     011E                     APFCON1         equ	286	;# 
  1635     018C                     ANSELA          equ	396	;# 
  1636     018E                     ANSELC          equ	398	;# 
  1637     0191                     EEADR           equ	401	;# 
  1638     0191                     EEADRL          equ	401	;# 
  1639     0192                     EEADRH          equ	402	;# 
  1640     0193                     EEDAT           equ	403	;# 
  1641     0193                     EEDATL          equ	403	;# 
  1642     0193                     EEDATA          equ	403	;# 
  1643     0194                     EEDATH          equ	404	;# 
  1644     0195                     EECON1          equ	405	;# 
  1645     0196                     EECON2          equ	406	;# 
  1646     0199                     RCREG           equ	409	;# 
  1647     019A                     TXREG           equ	410	;# 
  1648     019B                     SPBRG           equ	411	;# 
  1649     019B                     SPBRGL          equ	411	;# 
  1650     019C                     SPBRGH          equ	412	;# 
  1651     019D                     RCSTA           equ	413	;# 
  1652     019E                     TXSTA           equ	414	;# 
  1653     019F                     BAUDCON         equ	415	;# 
  1654     020C                     WPUA            equ	524	;# 
  1655     020E                     WPUC            equ	526	;# 
  1656     0211                     SSP1BUF         equ	529	;# 
  1657     0211                     SSPBUF          equ	529	;# 
  1658     0212                     SSP1ADD         equ	530	;# 
  1659     0212                     SSPADD          equ	530	;# 
  1660     0213                     SSP1MSK         equ	531	;# 
  1661     0213                     SSPMSK          equ	531	;# 
  1662     0214                     SSP1STAT        equ	532	;# 
  1663     0214                     SSPSTAT         equ	532	;# 
  1664     0215                     SSP1CON1        equ	533	;# 
  1665     0215                     SSPCON1         equ	533	;# 
  1666     0215                     SSPCON          equ	533	;# 
  1667     0216                     SSP1CON2        equ	534	;# 
  1668     0216                     SSPCON2         equ	534	;# 
  1669     0217                     SSP1CON3        equ	535	;# 
  1670     0217                     SSPCON3         equ	535	;# 
  1671     0291                     CCPR1           equ	657	;# 
  1672     0291                     CCPR1L          equ	657	;# 
  1673     0292                     CCPR1H          equ	658	;# 
  1674     0293                     CCP1CON         equ	659	;# 
  1675     0294                     PWM1CON         equ	660	;# 
  1676     0295                     CCP1AS          equ	661	;# 
  1677     0295                     ECCP1AS         equ	661	;# 
  1678     0296                     PSTR1CON        equ	662	;# 
  1679     0298                     CCPR2           equ	664	;# 
  1680     0298                     CCPR2L          equ	664	;# 
  1681     0299                     CCPR2H          equ	665	;# 
  1682     029A                     CCP2CON         equ	666	;# 
  1683     029B                     PWM2CON         equ	667	;# 
  1684     029C                     CCP2AS          equ	668	;# 
  1685     029D                     PSTR2CON        equ	669	;# 
  1686     029E                     CCPTMRS         equ	670	;# 
  1687     029E                     CCPTMRS0        equ	670	;# 
  1688     0311                     CCPR3           equ	785	;# 
  1689     0311                     CCPR3L          equ	785	;# 
  1690     0312                     CCPR3H          equ	786	;# 
  1691     0313                     CCP3CON         equ	787	;# 
  1692     0318                     CCPR4           equ	792	;# 
  1693     0318                     CCPR4L          equ	792	;# 
  1694     0319                     CCPR4H          equ	793	;# 
  1695     031A                     CCP4CON         equ	794	;# 
  1696     038C                     INLVLA          equ	908	;# 
  1697     038E                     INLVLC          equ	910	;# 
  1698     0391                     IOCAP           equ	913	;# 
  1699     0392                     IOCAN           equ	914	;# 
  1700     0393                     IOCAF           equ	915	;# 
  1701     039A                     CLKRCON         equ	922	;# 
  1702     039C                     MDCON           equ	924	;# 
  1703     039D                     MDSRC           equ	925	;# 
  1704     039E                     MDCARL          equ	926	;# 
  1705     039F                     MDCARH          equ	927	;# 
  1706     0415                     TMR4            equ	1045	;# 
  1707     0416                     PR4             equ	1046	;# 
  1708     0417                     T4CON           equ	1047	;# 
  1709     041C                     TMR6            equ	1052	;# 
  1710     041D                     PR6             equ	1053	;# 
  1711     041E                     T6CON           equ	1054	;# 
  1712     0FE4                     STATUS_SHAD     equ	4068	;# 
  1713     0FE5                     WREG_SHAD       equ	4069	;# 
  1714     0FE6                     BSR_SHAD        equ	4070	;# 
  1715     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1716     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1717     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1718     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1719     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1720     0FED                     STKPTR          equ	4077	;# 
  1721     0FEE                     TOSL            equ	4078	;# 
  1722     0FEF                     TOSH            equ	4079	;# 
  1723     0000                     INDF0           equ	0	;# 
  1724     0001                     INDF1           equ	1	;# 
  1725     0002                     PCL             equ	2	;# 
  1726     0003                     STATUS          equ	3	;# 
  1727     0004                     FSR0L           equ	4	;# 
  1728     0005                     FSR0H           equ	5	;# 
  1729     0006                     FSR1L           equ	6	;# 
  1730     0007                     FSR1H           equ	7	;# 
  1731     0008                     BSR             equ	8	;# 
  1732     0009                     WREG            equ	9	;# 
  1733     000A                     PCLATH          equ	10	;# 
  1734     000B                     INTCON          equ	11	;# 
  1735     000C                     PORTA           equ	12	;# 
  1736     000E                     PORTC           equ	14	;# 
  1737     0011                     PIR1            equ	17	;# 
  1738     0012                     PIR2            equ	18	;# 
  1739     0013                     PIR3            equ	19	;# 
  1740     0015                     TMR0            equ	21	;# 
  1741     0016                     TMR1            equ	22	;# 
  1742     0016                     TMR1L           equ	22	;# 
  1743     0017                     TMR1H           equ	23	;# 
  1744     0018                     T1CON           equ	24	;# 
  1745     0019                     T1GCON          equ	25	;# 
  1746     001A                     TMR2            equ	26	;# 
  1747     001B                     PR2             equ	27	;# 
  1748     001C                     T2CON           equ	28	;# 
  1749     001E                     CPSCON0         equ	30	;# 
  1750     001F                     CPSCON1         equ	31	;# 
  1751     008C                     TRISA           equ	140	;# 
  1752     008E                     TRISC           equ	142	;# 
  1753     0091                     PIE1            equ	145	;# 
  1754     0092                     PIE2            equ	146	;# 
  1755     0093                     PIE3            equ	147	;# 
  1756     0095                     OPTION_REG      equ	149	;# 
  1757     0096                     PCON            equ	150	;# 
  1758     0097                     WDTCON          equ	151	;# 
  1759     0098                     OSCTUNE         equ	152	;# 
  1760     0099                     OSCCON          equ	153	;# 
  1761     009A                     OSCSTAT         equ	154	;# 
  1762     009B                     ADRES           equ	155	;# 
  1763     009B                     ADRESL          equ	155	;# 
  1764     009C                     ADRESH          equ	156	;# 
  1765     009D                     ADCON0          equ	157	;# 
  1766     009E                     ADCON1          equ	158	;# 
  1767     010C                     LATA            equ	268	;# 
  1768     010E                     LATC            equ	270	;# 
  1769     0111                     CM1CON0         equ	273	;# 
  1770     0112                     CM1CON1         equ	274	;# 
  1771     0113                     CM2CON0         equ	275	;# 
  1772     0114                     CM2CON1         equ	276	;# 
  1773     0115                     CMOUT           equ	277	;# 
  1774     0116                     BORCON          equ	278	;# 
  1775     0117                     FVRCON          equ	279	;# 
  1776     0118                     DACCON0         equ	280	;# 
  1777     0119                     DACCON1         equ	281	;# 
  1778     011A                     SRCON0          equ	282	;# 
  1779     011B                     SRCON1          equ	283	;# 
  1780     011D                     APFCON0         equ	285	;# 
  1781     011E                     APFCON1         equ	286	;# 
  1782     018C                     ANSELA          equ	396	;# 
  1783     018E                     ANSELC          equ	398	;# 
  1784     0191                     EEADR           equ	401	;# 
  1785     0191                     EEADRL          equ	401	;# 
  1786     0192                     EEADRH          equ	402	;# 
  1787     0193                     EEDAT           equ	403	;# 
  1788     0193                     EEDATL          equ	403	;# 
  1789     0193                     EEDATA          equ	403	;# 
  1790     0194                     EEDATH          equ	404	;# 
  1791     0195                     EECON1          equ	405	;# 
  1792     0196                     EECON2          equ	406	;# 
  1793     0199                     RCREG           equ	409	;# 
  1794     019A                     TXREG           equ	410	;# 
  1795     019B                     SPBRG           equ	411	;# 
  1796     019B                     SPBRGL          equ	411	;# 
  1797     019C                     SPBRGH          equ	412	;# 
  1798     019D                     RCSTA           equ	413	;# 
  1799     019E                     TXSTA           equ	414	;# 
  1800     019F                     BAUDCON         equ	415	;# 
  1801     020C                     WPUA            equ	524	;# 
  1802     020E                     WPUC            equ	526	;# 
  1803     0211                     SSP1BUF         equ	529	;# 
  1804     0211                     SSPBUF          equ	529	;# 
  1805     0212                     SSP1ADD         equ	530	;# 
  1806     0212                     SSPADD          equ	530	;# 
  1807     0213                     SSP1MSK         equ	531	;# 
  1808     0213                     SSPMSK          equ	531	;# 
  1809     0214                     SSP1STAT        equ	532	;# 
  1810     0214                     SSPSTAT         equ	532	;# 
  1811     0215                     SSP1CON1        equ	533	;# 
  1812     0215                     SSPCON1         equ	533	;# 
  1813     0215                     SSPCON          equ	533	;# 
  1814     0216                     SSP1CON2        equ	534	;# 
  1815     0216                     SSPCON2         equ	534	;# 
  1816     0217                     SSP1CON3        equ	535	;# 
  1817     0217                     SSPCON3         equ	535	;# 
  1818     0291                     CCPR1           equ	657	;# 
  1819     0291                     CCPR1L          equ	657	;# 
  1820     0292                     CCPR1H          equ	658	;# 
  1821     0293                     CCP1CON         equ	659	;# 
  1822     0294                     PWM1CON         equ	660	;# 
  1823     0295                     CCP1AS          equ	661	;# 
  1824     0295                     ECCP1AS         equ	661	;# 
  1825     0296                     PSTR1CON        equ	662	;# 
  1826     0298                     CCPR2           equ	664	;# 
  1827     0298                     CCPR2L          equ	664	;# 
  1828     0299                     CCPR2H          equ	665	;# 
  1829     029A                     CCP2CON         equ	666	;# 
  1830     029B                     PWM2CON         equ	667	;# 
  1831     029C                     CCP2AS          equ	668	;# 
  1832     029D                     PSTR2CON        equ	669	;# 
  1833     029E                     CCPTMRS         equ	670	;# 
  1834     029E                     CCPTMRS0        equ	670	;# 
  1835     0311                     CCPR3           equ	785	;# 
  1836     0311                     CCPR3L          equ	785	;# 
  1837     0312                     CCPR3H          equ	786	;# 
  1838     0313                     CCP3CON         equ	787	;# 
  1839     0318                     CCPR4           equ	792	;# 
  1840     0318                     CCPR4L          equ	792	;# 
  1841     0319                     CCPR4H          equ	793	;# 
  1842     031A                     CCP4CON         equ	794	;# 
  1843     038C                     INLVLA          equ	908	;# 
  1844     038E                     INLVLC          equ	910	;# 
  1845     0391                     IOCAP           equ	913	;# 
  1846     0392                     IOCAN           equ	914	;# 
  1847     0393                     IOCAF           equ	915	;# 
  1848     039A                     CLKRCON         equ	922	;# 
  1849     039C                     MDCON           equ	924	;# 
  1850     039D                     MDSRC           equ	925	;# 
  1851     039E                     MDCARL          equ	926	;# 
  1852     039F                     MDCARH          equ	927	;# 
  1853     0415                     TMR4            equ	1045	;# 
  1854     0416                     PR4             equ	1046	;# 
  1855     0417                     T4CON           equ	1047	;# 
  1856     041C                     TMR6            equ	1052	;# 
  1857     041D                     PR6             equ	1053	;# 
  1858     041E                     T6CON           equ	1054	;# 
  1859     0FE4                     STATUS_SHAD     equ	4068	;# 
  1860     0FE5                     WREG_SHAD       equ	4069	;# 
  1861     0FE6                     BSR_SHAD        equ	4070	;# 
  1862     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1863     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1864     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1865     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1866     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1867     0FED                     STKPTR          equ	4077	;# 
  1868     0FEE                     TOSL            equ	4078	;# 
  1869     0FEF                     TOSH            equ	4079	;_dataBuffer
  1870                           
  1871 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1872     0000                     _SPI1_Deinitialize equ	0
  1873                           
  1874 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1875     0000                     _SPI1_BufferExchange equ	0
  1876                           
  1877 ;; Function _SPI1_ByteRead is unused but had its address taken
  1878     0000                     _SPI1_ByteRead  equ	0
  1879                           
  1880 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1881     0000                     _SPI1_IsRxReady equ	0
  1882                           
  1883 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1884     0000                     _SPI1_IsTxReady equ	0
  1885                           
  1886 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1887     0000                     _INT_DefaultInterruptHandler equ	0
  1888                           
  1889 ;; Function _NVM_IsBusy is unused but had its address taken
  1890     0000                     _NVM_IsBusy     equ	0
  1891                           
  1892 ;; Function _EEPROM_ByteWrite is unused but had its address taken
  1893     0000                     _EEPROM_ByteWrite equ	0
  1894                           
  1895 ;; Function _EEPROM_ByteRead is unused but had its address taken
  1896     0000                     _EEPROM_ByteRead equ	0
  1897                           
  1898                           	psect	stringtext1
  1899     0800                     __pstringtext1:
  1900     0800                     _SPI1_Host:
  1901     0800  3473               	retlw	low _SPI1_Initialize
  1902     0801  3402               	retlw	high _SPI1_Initialize
  1903     0802  3400               	retlw	0
  1904     0803  3400               	retlw	0
  1905     0804  3480               	retlw	low _SPI1_Open
  1906     0805  3404               	retlw	high _SPI1_Open
  1907     0806  3444               	retlw	low _SPI1_Close
  1908     0807  3402               	retlw	high _SPI1_Close
  1909     0808  3400               	retlw	0
  1910     0809  3400               	retlw	0
  1911     080A  346A               	retlw	low _SPI1_BufferRead
  1912     080B  3403               	retlw	high _SPI1_BufferRead
  1913     080C  344A               	retlw	low _SPI1_BufferWrite
  1914     080D  3403               	retlw	high _SPI1_BufferWrite
  1915     080E  3488               	retlw	low _SPI1_ByteExchange
  1916     080F  3402               	retlw	high _SPI1_ByteExchange
  1917     0810  3400               	retlw	0
  1918     0811  3400               	retlw	0
  1919     0812  344A               	retlw	low _SPI1_ByteWrite
  1920     0813  3402               	retlw	high _SPI1_ByteWrite
  1921     0814  3400               	retlw	0
  1922     0815  3400               	retlw	0
  1923     0816  3400               	retlw	0
  1924     0817  3400               	retlw	0
  1925     0818  3400               	retlw	0
  1926     0819  3400               	retlw	0
  1927     081A  3400               	retlw	0
  1928     081B  3400               	retlw	0
  1929     081C                     __end_of_SPI1_Host:
  1930                           
  1931                           	psect	stringtext2
  1932     081C                     __pstringtext2:
  1933     081C                     _spi1_configuration:
  1934     081C  3400               	retlw	0
  1935     081D  341A               	retlw	26
  1936     081E  3410               	retlw	16
  1937     081F  3407               	retlw	7
  1938     0820  3400               	retlw	0
  1939     0821  3440               	retlw	64
  1940     0822  340A               	retlw	10
  1941     0823  3410               	retlw	16
  1942     0824  3407               	retlw	7
  1943     0825  3400               	retlw	0
  1944     0826  3464               	retlw	100
  1945     0827  3400               	retlw	0
  1946     0828  3410               	retlw	16
  1947     0829  3401               	retlw	1
  1948     082A  3400               	retlw	0
  1949     082B                     __end_of_spi1_configuration:
  1950                           
  1951                           	psect	stringtext3
  1952     082B                     __pstringtext3:
  1953     082B                     _eeprom_interface:
  1954     082B  3400               	retlw	0
  1955     082C  3400               	retlw	0
  1956     082D  3400               	retlw	0
  1957     082E  3400               	retlw	0
  1958     082F  3400               	retlw	0
  1959     0830  3400               	retlw	0
  1960     0831  3400               	retlw	0
  1961     0832  3400               	retlw	0
  1962     0833  3400               	retlw	0
  1963     0834  3400               	retlw	0
  1964     0835  3400               	retlw	0
  1965     0836  3400               	retlw	0
  1966     0837  3400               	retlw	0
  1967     0838  3400               	retlw	0
  1968     0839                     __end_of_eeprom_interface:
  1969                           
  1970                           	psect	stringtext4
  1971     0851                     __pstringtext4:
  1972     0851                     _acceleration_squared_threshold:
  1973     0851  34B0               	retlw	176
  1974     0852  3404               	retlw	4
  1975     0853                     __end_of_acceleration_squared_threshold:
  1976                           
  1977                           	psect	stringtext5
  1978     0839                     __pstringtext5:
  1979     0839                     _ADXL345_init_settings:
  1980     0839  3418               	retlw	24
  1981     083A  3403               	retlw	3
  1982     083B  34FF               	retlw	255
  1983     083C  347F               	retlw	127
  1984     083D  3407               	retlw	7
  1985     083E  3418               	retlw	24
  1986     083F  3400               	retlw	0
  1987     0840  3400               	retlw	0
  1988     0841  3417               	retlw	23
  1989     0842  3408               	retlw	8
  1990     0843  3404               	retlw	4
  1991     0844  3400               	retlw	0
  1992     0845                     __end_of_ADXL345_init_settings:
  1993                           
  1994                           	psect	stringtext6
  1995     0845                     __pstringtext6:
  1996     0845                     _no_motion_init:
  1997     0845  3408               	retlw	8
  1998     0846  3403               	retlw	3
  1999     0847  3402               	retlw	2
  2000     0848  34FF               	retlw	255
  2001     0849                     __end_of_no_motion_init:
  2002                           
  2003                           	psect	stringtext7
  2004     0849                     __pstringtext7:
  2005     0849                     _impact_init:
  2006     0849  3430               	retlw	48
  2007     084A  3403               	retlw	3
  2008     084B  3401               	retlw	1
  2009     084C  347F               	retlw	127
  2010     084D                     __end_of_impact_init:
  2011                           
  2012                           	psect	stringtext8
  2013     084D                     __pstringtext8:
  2014     084D                     _fall_init:
  2015     084D  3418               	retlw	24
  2016     084E  3403               	retlw	3
  2017     084F  34FF               	retlw	255
  2018     0850  347F               	retlw	127
  2019     0851                     __end_of_fall_init:
  2020                           
  2021                           	psect	nvBANK0
  2022     0065                     __pnvBANK0:
  2023     0065                     _SW1_InterruptHandler:
  2024     0065                     	ds	2
  2025     0067                     _INT_InterruptHandler:
  2026     0067                     	ds	2
  2027     000C                     _PORTAbits      set	12
  2028     000B                     _INTCONbits     set	11
  2029     0011                     _PIR1bits       set	17
  2030     0097                     _WDTCON         set	151
  2031     0098                     _OSCTUNE        set	152
  2032     0099                     _OSCCON         set	153
  2033     008E                     _TRISC          set	142
  2034     008C                     _TRISA          set	140
  2035     0095                     _OPTION_REGbits set	149
  2036     0091                     _PIE1bits       set	145
  2037     010E                     _LATCbits       set	270
  2038     0116                     _BORCON         set	278
  2039     010C                     _LATAbits       set	268
  2040     011D                     _APFCON0        set	285
  2041     010E                     _LATC           set	270
  2042     010C                     _LATA           set	268
  2043     0196                     _EECON2         set	406
  2044     0193                     _EEDATL         set	403
  2045     0194                     _EEDATH         set	404
  2046     0191                     _EEADRL         set	401
  2047     0192                     _EEADRH         set	402
  2048     0195                     _EECON1bits     set	405
  2049     018E                     _ANSELC         set	398
  2050     018C                     _ANSELA         set	396
  2051     0CAD                     _LWLO           set	3245
  2052     020E                     _WPUC           set	526
  2053     020C                     _WPUA           set	524
  2054     0211                     _SSP1BUF        set	529
  2055     0215                     _SSP1CON1bits   set	533
  2056     0212                     _SSP1ADD        set	530
  2057     0217                     _SSP1CON3       set	535
  2058     0215                     _SSP1CON1       set	533
  2059     0214                     _SSP1STAT       set	532
  2060     0393                     _IOCAFbits      set	915
  2061     0393                     _IOCAF          set	915
  2062     0392                     _IOCAN          set	914
  2063     0391                     _IOCAP          set	913
  2064     038E                     _INLVLC         set	910
  2065     038C                     _INLVLA         set	908
  2066                           
  2067                           	psect	cinit
  2068     07E5                     start_initialization:	
  2069                           ; #config settings
  2070                           
  2071     07E5                     __initialization:	;BIGRAM
  2072                           
  2073                           ; Clear objects allocated to BIGRAM
  2074     07E5  30F0               	movlw	low (0+8944)
  2075     07E6  0084               	movwf	4
  2076     07E7  3022               	movlw	high (0+8944)
  2077     07E8  0085               	movwf	5
  2078     07E9  3000               	movlw	0
  2079     07EA  00FE               	movwf	btemp
  2080     07EB  3001               	movlw	1
  2081     07EC  00FF               	movwf	btemp+1
  2082     07ED  3182  2294  3187   	fcall	clear_ram0
  2083                           
  2084                           ; Clear objects allocated to COMMON
  2085     07F0  01FC               	clrf	__pbssCOMMON& (0+127)
  2086     07F1  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2087                           
  2088                           ; Clear objects allocated to BANK0
  2089     07F2  304E               	movlw	low __pbssBANK0
  2090     07F3  0084               	movwf	4
  2091     07F4  3000               	movlw	high __pbssBANK0
  2092     07F5  0085               	movwf	5
  2093     07F6  3017               	movlw	23
  2094     07F7  00FE               	movwf	btemp
  2095     07F8  3000               	movlw	0
  2096     07F9  00FF               	movwf	btemp+1
  2097     07FA  3182  2294  3187   	fcall	clear_ram0
  2098     07FD                     end_of_initialization:	
  2099                           ;End of C runtime variable initialization code
  2100                           
  2101     07FD                     __end_of__initialization:
  2102     07FD  0020               	movlb	0
  2103     07FE  3183  2BD6         	ljmp	_main	;jump to C main() function
  2104                           
  2105                           	psect	bssCOMMON
  2106     007C                     __pbssCOMMON:
  2107     007C                     _unlockKeyHigh:
  2108     007C                     	ds	1
  2109     007D                     _unlockKeyLow:
  2110     007D                     	ds	1
  2111                           
  2112                           	psect	bssBANK0
  2113     004E                     __pbssBANK0:
  2114     004E                     calibrate@F2720:
  2115     004E                     	ds	12
  2116     005A                     orientation_Up@F2709:
  2117     005A                     	ds	6
  2118     0060                     _orientation_check_timer_20ms:
  2119     0060                     	ds	2
  2120     0062                     _timer_20ms:
  2121     0062                     	ds	2
  2122     0064                     _good_orientation_count:
  2123     0064                     	ds	1
  2124                           
  2125                           	psect	clrtext
  2126     0294                     clear_ram0:	
  2127                           ;	Called with FSR0 containing the base address, and
  2128                           ;	btemp/btemp+1 has the size to clear
  2129                           
  2130     0294  0064               	clrwdt	;clear the watchdog before getting into this loop
  2131     0295                     clrloop0:
  2132     0295  0180               	clrf	0	;clear RAM location pointed to by FSR
  2133     0296  3101               	addfsr 0,1
  2134     0297  3001               	movlw	1
  2135     0298  02FE               	subwf	btemp,f
  2136     0299  3000               	movlw	0
  2137     029A  3BFF               	subwfb	btemp+1,f
  2138     029B  087F               	movf	btemp+1,w
  2139     029C  047E               	iorwf	btemp,w
  2140     029D  1D03               	skipz
  2141     029E  2A95               	goto	clrloop0	;have we reached the end yet?
  2142     029F  3400               	retlw	0	;all done for this memory range, return
  2143                           
  2144                           	psect	cstackCOMMON
  2145     0070                     __pcstackCOMMON:
  2146     0070                     ?_SPI1_Initialize:
  2147     0070                     ?_SPI1_Close:	
  2148                           ; 1 bytes @ 0x0
  2149                           
  2150     0070                     ?_SPI1_BufferRead:	
  2151                           ; 1 bytes @ 0x0
  2152                           
  2153     0070                     ?_SPI1_BufferWrite:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156     0070                     ?_SPI1_ByteExchange:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159     0070                     ?_SPI1_ByteWrite:	
  2160                           ; 1 bytes @ 0x0
  2161                           
  2162     0070                     ?_INT_SetInterruptHandler:	
  2163                           ; 1 bytes @ 0x0
  2164                           
  2165     0070                     ?_SW1_SetInterruptHandler:	
  2166                           ; 1 bytes @ 0x0
  2167                           
  2168     0070                     ?_SW1_DefaultInterruptHandler:	
  2169                           ; 1 bytes @ 0x0
  2170                           
  2171     0070                     ?_SW1_ISR:	
  2172                           ; 1 bytes @ 0x0
  2173                           
  2174     0070                     ?_NVM_Initialize:	
  2175                           ; 1 bytes @ 0x0
  2176                           
  2177     0070                     ?_WDT_Initialize:	
  2178                           ; 1 bytes @ 0x0
  2179                           
  2180     0070                     ?_ADXL345_validation:	
  2181                           ; 1 bytes @ 0x0
  2182                           
  2183     0070                     ?_ADXL345_init:	
  2184                           ; 1 bytes @ 0x0
  2185                           
  2186     0070                     ?_NVM_StatusClear:	
  2187                           ; 1 bytes @ 0x0
  2188                           
  2189     0070                     ?_INTERRUPT_Initialize:	
  2190                           ; 1 bytes @ 0x0
  2191                           
  2192     0070                     ?_PIN_MANAGER_Initialize:	
  2193                           ; 1 bytes @ 0x0
  2194                           
  2195     0070                     ?_PIN_MANAGER_IOC:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198     0070                     ?_CLOCK_Initialize:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201     0070                     ?_SYSTEM_Initialize:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204     0070                     ?_ADXL345_ClearInterrupt:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207     0070                     ?_setupForFreefall:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210     0070                     ?_setupForImpact:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213     0070                     ?_setupForInactivity:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216     0070                     ?_orientation_Up:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219     0070                     ?_memset:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222     0070                     ?_memcpy:	
  2223                           ; 2 bytes @ 0x0
  2224                           
  2225     0070                     ?_main:	
  2226                           ; 2 bytes @ 0x0
  2227                           
  2228     0070                     ?___wmul:	
  2229                           ; 2 bytes @ 0x0
  2230                           
  2231     0070                     SPI1_BufferRead@bufferData:	
  2232                           ; 2 bytes @ 0x0
  2233                           
  2234     0070                     SPI1_ByteExchange@byteData:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237     0070                     SPI1_ByteWrite@byteData:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240     0070                     SPI1_BufferWrite@bufferData:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243     0070                     INT_SetInterruptHandler@InterruptHandler:	
  2244                           ; 2 bytes @ 0x0
  2245                           
  2246     0070                     SW1_SetInterruptHandler@InterruptHandler:	
  2247                           ; 2 bytes @ 0x0
  2248                           
  2249     0070                     ___wmul@multiplier:	
  2250                           ; 2 bytes @ 0x0
  2251                           
  2252     0070                     memcpy@d1:	
  2253                           ; 2 bytes @ 0x0
  2254                           
  2255     0070                     memset@dest:	
  2256                           ; 2 bytes @ 0x0
  2257                           
  2258     0070                     ??_SPI1_Initialize:	
  2259                           ; 2 bytes @ 0x0
  2260                           
  2261     0070                     ??_SPI1_Close:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264     0070                     ??_SW1_DefaultInterruptHandler:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267     0070                     ??_NVM_Initialize:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270     0070                     ??_WDT_Initialize:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273     0070                     ??_NVM_StatusClear:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276     0070                     ??_CLOCK_Initialize:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279                           
  2280                           ; 1 bytes @ 0x0
  2281     0070                     	ds	1
  2282     0071                     SPI1_BufferRead@bufferSize:
  2283     0071                     ??_SPI1_ByteExchange:	
  2284                           ; 2 bytes @ 0x1
  2285                           
  2286     0071                     ??_SPI1_ByteWrite:	
  2287                           ; 1 bytes @ 0x1
  2288                           
  2289     0071                     ??_SW1_ISR:	
  2290                           ; 1 bytes @ 0x1
  2291                           
  2292     0071                     ??_PIN_MANAGER_IOC:	
  2293                           ; 1 bytes @ 0x1
  2294                           
  2295                           
  2296                           ; 1 bytes @ 0x1
  2297     0071                     	ds	1
  2298     0072                     SPI1_BufferWrite@bufferSize:
  2299     0072                     ___wmul@multiplicand:	
  2300                           ; 2 bytes @ 0x2
  2301                           
  2302     0072                     memcpy@s1:	
  2303                           ; 2 bytes @ 0x2
  2304                           
  2305     0072                     memset@c:	
  2306                           ; 2 bytes @ 0x2
  2307                           
  2308     0072                     ??_INT_SetInterruptHandler:	
  2309                           ; 2 bytes @ 0x2
  2310                           
  2311     0072                     ??_SW1_SetInterruptHandler:	
  2312                           ; 1 bytes @ 0x2
  2313                           
  2314     0072                     ??_INTERRUPT_Initialize:	
  2315                           ; 1 bytes @ 0x2
  2316                           
  2317     0072                     ??_PIN_MANAGER_Initialize:	
  2318                           ; 1 bytes @ 0x2
  2319                           
  2320     0072                     ??_SYSTEM_Initialize:	
  2321                           ; 1 bytes @ 0x2
  2322                           
  2323                           
  2324                           ; 1 bytes @ 0x2
  2325     0072                     	ds	1
  2326     0073                     SPI1_BufferRead@bufferInputSize:
  2327     0073                     ??_SPI1_BufferRead:	
  2328                           ; 2 bytes @ 0x3
  2329                           
  2330                           
  2331                           ; 1 bytes @ 0x3
  2332     0073                     	ds	1
  2333     0074                     SPI1_BufferWrite@bufferInputSize:
  2334     0074                     ___wmul@product:	
  2335                           ; 2 bytes @ 0x4
  2336                           
  2337     0074                     memcpy@n:	
  2338                           ; 2 bytes @ 0x4
  2339                           
  2340     0074                     memset@n:	
  2341                           ; 2 bytes @ 0x4
  2342                           
  2343     0074                     ??_SPI1_BufferWrite:	
  2344                           ; 2 bytes @ 0x4
  2345                           
  2346     0074                     ??___wmul:	
  2347                           ; 1 bytes @ 0x4
  2348                           
  2349                           
  2350                           ; 1 bytes @ 0x4
  2351     0074                     	ds	1
  2352     0075                     SPI1_BufferRead@bufferInput:
  2353                           
  2354                           ; 1 bytes @ 0x5
  2355     0075                     	ds	1
  2356     0076                     ?_SPI1_Open:
  2357     0076                     SPI1_Open@spiConfigIndex:	
  2358                           ; 1 bytes @ 0x6
  2359                           
  2360     0076                     SPI1_BufferWrite@bufferInput:	
  2361                           ; 1 bytes @ 0x6
  2362                           
  2363     0076                     memset@p:	
  2364                           ; 1 bytes @ 0x6
  2365                           
  2366     0076                     memcpy@s:	
  2367                           ; 1 bytes @ 0x6
  2368                           
  2369     0076                     ??_memset:	
  2370                           ; 2 bytes @ 0x6
  2371                           
  2372     0076                     ??_memcpy:	
  2373                           ; 1 bytes @ 0x6
  2374                           
  2375                           
  2376                           ; 1 bytes @ 0x6
  2377     0076                     	ds	1
  2378     0077                     ??_SPI1_Open:
  2379                           
  2380                           ; 1 bytes @ 0x7
  2381     0077                     	ds	1
  2382     0078                     memcpy@tmp:
  2383                           
  2384                           ; 1 bytes @ 0x8
  2385     0078                     	ds	1
  2386     0079                     SPI1_Open@returnValue:
  2387     0079                     memcpy@d:	
  2388                           ; 1 bytes @ 0x9
  2389                           
  2390                           
  2391                           ; 1 bytes @ 0x9
  2392     0079                     	ds	1
  2393     007A                     ADXL345_validation@passed:
  2394     007A                     ??_ADXL345_validation:	
  2395                           ; 1 bytes @ 0xA
  2396                           
  2397     007A                     ??_ADXL345_init:	
  2398                           ; 1 bytes @ 0xA
  2399                           
  2400     007A                     ??_ADXL345_ClearInterrupt:	
  2401                           ; 1 bytes @ 0xA
  2402                           
  2403     007A                     ??_setupForFreefall:	
  2404                           ; 1 bytes @ 0xA
  2405                           
  2406     007A                     ??_setupForImpact:	
  2407                           ; 1 bytes @ 0xA
  2408                           
  2409     007A                     ??_setupForInactivity:	
  2410                           ; 1 bytes @ 0xA
  2411                           
  2412     007A                     ??_orientation_Up:	
  2413                           ; 1 bytes @ 0xA
  2414                           
  2415                           
  2416                           ; 1 bytes @ 0xA
  2417     007A                     	ds	2
  2418                           
  2419                           	psect	cstackBANK0
  2420     0020                     __pcstackBANK0:
  2421     0020                     orientation_Up@acc_data:
  2422     0020                     ADXL345_init@msg:	
  2423                           ; 6 bytes @ 0x0
  2424                           
  2425     0020                     setupForFreefall@msg:	
  2426                           ; 26 bytes @ 0x0
  2427                           
  2428     0020                     setupForImpact@msg:	
  2429                           ; 26 bytes @ 0x0
  2430                           
  2431     0020                     setupForInactivity@msg:	
  2432                           ; 26 bytes @ 0x0
  2433                           
  2434                           
  2435                           ; 26 bytes @ 0x0
  2436     0020                     	ds	6
  2437     0026                     orientation_Up@g_magnitude:
  2438                           
  2439                           ; 2 bytes @ 0x6
  2440     0026                     	ds	2
  2441     0028                     orientation_Up@msg:
  2442                           
  2443                           ; 26 bytes @ 0x8
  2444     0028                     	ds	26
  2445     0042                     orientation_Up@g_deltaX:
  2446                           
  2447                           ; 2 bytes @ 0x22
  2448     0042                     	ds	2
  2449     0044                     orientation_Up@g_deltaY:
  2450                           
  2451                           ; 2 bytes @ 0x24
  2452     0044                     	ds	2
  2453     0046                     orientation_Up@g_deltaZ:
  2454                           
  2455                           ; 2 bytes @ 0x26
  2456     0046                     	ds	2
  2457     0048                     ?_MotionEventHandler:
  2458     0048                     MotionEventHandler@state:	
  2459                           ; 1 bytes @ 0x28
  2460                           
  2461                           
  2462                           ; 1 bytes @ 0x28
  2463     0048                     	ds	1
  2464     0049                     ??_MotionEventHandler:
  2465                           
  2466                           ; 1 bytes @ 0x29
  2467     0049                     	ds	2
  2468     004B                     ??_main:
  2469                           
  2470                           ; 1 bytes @ 0x2B
  2471     004B                     	ds	2
  2472     004D                     main@current_state:
  2473                           
  2474                           ; 1 bytes @ 0x2D
  2475     004D                     	ds	1
  2476                           
  2477                           	psect	maintext
  2478     03D6                     __pmaintext:	
  2479 ;;
  2480 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2481 ;;
  2482 ;; *************** function _main *****************
  2483 ;; Defined at:
  2484 ;;		line 45 in file "main.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  current_stat    1   45[BANK0 ] enum E2687
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2  259[None  ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : B1F/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;Total ram usage:        3 bytes
  2503 ;; Hardware stack levels required when called: 4
  2504 ;; This function calls:
  2505 ;;		_ADXL345_init
  2506 ;;		_ADXL345_validation
  2507 ;;		_MotionEventHandler
  2508 ;;		_PIN_MANAGER_IOC
  2509 ;;		_SPI1_Initialize
  2510 ;;		_SYSTEM_Initialize
  2511 ;; This function is called by:
  2512 ;;		Startup code after reset
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516     03D6                     _main:	
  2517                           ;psect for function _main
  2518                           
  2519     03D6                     l2844:	
  2520                           ;incstack = 0
  2521                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2522                           
  2523                           
  2524                           ;main.c: 47:     SYSTEM_Initialize();
  2525     03D6  3182  22AF  3183   	fcall	_SYSTEM_Initialize
  2526     03D9                     l2846:
  2527                           
  2528                           ;main.c: 48:     SPI1_Initialize();
  2529     03D9  3182  2273  3183   	fcall	_SPI1_Initialize
  2530     03DC                     l2848:
  2531     03DC  0022               	movlb	2	; select bank2
  2532     03DD  160E               	bsf	14,4	;volatile
  2533     03DE                     l2850:
  2534     03DE  158E               	bsf	14,3	;volatile
  2535     03DF                     l2852:
  2536                           
  2537                           ;main.c: 53:     if (ADXL345_validation()) {
  2538     03DF  3183  230D  3183   	fcall	_ADXL345_validation
  2539     03E2  3A00               	xorlw	0
  2540     03E3  1903               	skipnz
  2541     03E4  2BE6               	goto	u1041
  2542     03E5  2BE7               	goto	u1040
  2543     03E6                     u1041:
  2544     03E6  2BF9               	goto	l270
  2545     03E7                     u1040:
  2546     03E7                     l265:	
  2547                           ;main.c: 54:         do { LATAbits.LATA4 = 1; } while(0);
  2548                           
  2549     03E7  0022               	movlb	2	; select bank2
  2550     03E8  160C               	bsf	12,4	;volatile
  2551     03E9                     l2854:
  2552                           
  2553                           ;main.c: 55:         _delay((unsigned long)((250)*(4000000/4000.0)));
  2554     03E9  3002               	movlw	2
  2555     03EA  0020               	movlb	0	; select bank0
  2556     03EB  00CC               	movwf	??_main+1
  2557     03EC  3045               	movlw	69
  2558     03ED  00CB               	movwf	??_main
  2559     03EE  30A9               	movlw	169
  2560     03EF                     u1277:
  2561     03EF  0B89               	decfsz	9,f
  2562     03F0  2BEF               	goto	u1277
  2563     03F1  0BCB               	decfsz	??_main,f
  2564     03F2  2BEF               	goto	u1277
  2565     03F3  0BCC               	decfsz	??_main+1,f
  2566     03F4  2BEF               	goto	u1277
  2567     03F5  3200               	nop2
  2568     03F6                     l2856:
  2569     03F6  0022               	movlb	2	; select bank2
  2570     03F7  120C               	bcf	12,4	;volatile
  2571     03F8  2C0A               	goto	l2862
  2572     03F9                     l270:	
  2573                           ;main.c: 58:         do { LATAbits.LATA5 = 1; } while(0);
  2574                           
  2575     03F9  0022               	movlb	2	; select bank2
  2576     03FA  168C               	bsf	12,5	;volatile
  2577     03FB                     l2858:
  2578                           
  2579                           ;main.c: 59:         _delay((unsigned long)((250)*(4000000/4000.0)));
  2580     03FB  3002               	movlw	2
  2581     03FC  0020               	movlb	0	; select bank0
  2582     03FD  00CC               	movwf	??_main+1
  2583     03FE  3045               	movlw	69
  2584     03FF  00CB               	movwf	??_main
  2585     0400  30A9               	movlw	169
  2586     0401                     u1287:
  2587     0401  0B89               	decfsz	9,f
  2588     0402  2C01               	goto	u1287
  2589     0403  0BCB               	decfsz	??_main,f
  2590     0404  2C01               	goto	u1287
  2591     0405  0BCC               	decfsz	??_main+1,f
  2592     0406  2C01               	goto	u1287
  2593     0407  3200               	nop2
  2594     0408                     l2860:
  2595     0408  0022               	movlb	2	; select bank2
  2596     0409  128C               	bcf	12,5	;volatile
  2597     040A                     l2862:
  2598                           
  2599                           ;main.c: 63:     ADXL345_init();
  2600     040A  3184  241D  3183   	fcall	_ADXL345_init
  2601     040D                     l2864:
  2602                           
  2603                           ;main.c: 64:     State_t current_state = WAITING_FOR_FREEFALL;
  2604     040D  0020               	movlb	0	; select bank0
  2605     040E  01CD               	clrf	main@current_state
  2606     040F                     l2866:
  2607                           
  2608                           ;main.c: 67:     {;main.c: 68:         PIN_MANAGER_IOC();
  2609     040F  3182  226A  3183   	fcall	_PIN_MANAGER_IOC
  2610     0412                     l2868:
  2611                           
  2612                           ;main.c: 69:         MotionEventHandler(&current_state);
  2613     0412  304D               	movlw	(low (main@current_state| 0))& (0+255)
  2614     0413  0020               	movlb	0	; select bank0
  2615     0414  00C8               	movwf	MotionEventHandler@state
  2616     0415  3184  24EC  3183   	fcall	_MotionEventHandler
  2617     0418  0063               	sleep	;# 
  2618     0419                     l2870:
  2619                           
  2620                           ;main.c: 71:         __nop();
  2621     0419  0000               	nop
  2622     041A  2C0F               	goto	l2866
  2623     041B  3180  2802         	ljmp	start
  2624     041D                     __end_of_main:
  2625                           
  2626                           	psect	text1
  2627     02AF                     __ptext1:	
  2628 ;; *************** function _SYSTEM_Initialize *****************
  2629 ;; Defined at:
  2630 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 2
  2651 ;; This function calls:
  2652 ;;		_CLOCK_Initialize
  2653 ;;		_INTERRUPT_Initialize
  2654 ;;		_NVM_Initialize
  2655 ;;		_PIN_MANAGER_Initialize
  2656 ;;		_SPI1_Initialize
  2657 ;;		_WDT_Initialize
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663     02AF                     _SYSTEM_Initialize:	
  2664                           ;psect for function _SYSTEM_Initialize
  2665                           
  2666     02AF                     l2646:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  2672     02AF  3182  2262  3182   	fcall	_CLOCK_Initialize
  2673     02B2                     l2648:
  2674                           
  2675                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  2676     02B2  3183  23B1  3182   	fcall	_PIN_MANAGER_Initialize
  2677     02B5                     l2650:
  2678                           
  2679                           ;mcc_generated_files/system/src/system.c: 43:     NVM_Initialize();
  2680     02B5  3182  224E  3182   	fcall	_NVM_Initialize
  2681     02B8                     l2652:
  2682                           
  2683                           ;mcc_generated_files/system/src/system.c: 44:     SPI1_Initialize();
  2684     02B8  3182  2273  3182   	fcall	_SPI1_Initialize
  2685     02BB                     l2654:
  2686                           
  2687                           ;mcc_generated_files/system/src/system.c: 45:     WDT_Initialize();
  2688     02BB  3182  2252  3182   	fcall	_WDT_Initialize
  2689                           
  2690                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2691     02BE  3182  227D  3182   	fcall	_INTERRUPT_Initialize
  2692     02C1                     l228:
  2693     02C1  0008               	return
  2694     02C2                     __end_of_SYSTEM_Initialize:
  2695                           
  2696                           	psect	text2
  2697     0252                     __ptext2:	
  2698 ;; *************** function _WDT_Initialize *****************
  2699 ;; Defined at:
  2700 ;;		line 36 in file "mcc_generated_files/system/src/watchdog.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		None
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_SYSTEM_Initialize
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727     0252                     _WDT_Initialize:	
  2728                           ;psect for function _WDT_Initialize
  2729                           
  2730     0252                     l2410:	
  2731                           ;incstack = 0
  2732                           ; Regs used in _WDT_Initialize: []
  2733                           
  2734                           
  2735                           ;mcc_generated_files/system/src/watchdog.c: 39:     WDTCON = 0x19;
  2736     0252  3019               	movlw	25
  2737     0253  0021               	movlb	1	; select bank1
  2738     0254  0097               	movwf	23	;volatile
  2739     0255                     l233:
  2740     0255  0008               	return
  2741     0256                     __end_of_WDT_Initialize:
  2742                           
  2743                           	psect	text3
  2744     0273                     __ptext3:	
  2745 ;; *************** function _SPI1_Initialize *****************
  2746 ;; Defined at:
  2747 ;;		line 61 in file "mcc_generated_files/spi/src/mssp.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		status,2
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_SYSTEM_Initialize
  2771 ;;		_main
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775     0273                     _SPI1_Initialize:	
  2776                           ;psect for function _SPI1_Initialize
  2777                           
  2778     0273                     l2372:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _SPI1_Initialize: [status,2]
  2781                           
  2782                           
  2783                           ;mcc_generated_files/spi/src/mssp.c: 64:     PIE1bits.SSP1IE = 0;
  2784     0273  0021               	movlb	1	; select bank1
  2785     0274  1191               	bcf	17,3	;volatile
  2786                           
  2787                           ;mcc_generated_files/spi/src/mssp.c: 65:     PIR1bits.SSP1IF = 0;
  2788     0275  0020               	movlb	0	; select bank0
  2789     0276  1191               	bcf	17,3	;volatile
  2790     0277                     l2374:
  2791                           
  2792                           ;mcc_generated_files/spi/src/mssp.c: 67:     SSP1STAT = 0x00;
  2793     0277  0024               	movlb	4	; select bank4
  2794     0278  0194               	clrf	20	;volatile
  2795                           
  2796                           ;mcc_generated_files/spi/src/mssp.c: 68:     SSP1CON1 = 0x00;
  2797     0279  0195               	clrf	21	;volatile
  2798                           
  2799                           ;mcc_generated_files/spi/src/mssp.c: 69:     SSP1CON3 = 0x00;
  2800     027A  0197               	clrf	23	;volatile
  2801                           
  2802                           ;mcc_generated_files/spi/src/mssp.c: 70:     SSP1ADD = 0x00;
  2803     027B  0192               	clrf	18	;volatile
  2804     027C                     l47:
  2805     027C  0008               	return
  2806     027D                     __end_of_SPI1_Initialize:
  2807                           
  2808                           	psect	text4
  2809     03B1                     __ptext4:	
  2810 ;; *************** function _PIN_MANAGER_Initialize *****************
  2811 ;; Defined at:
  2812 ;;		line 40 in file "mcc_generated_files/system/src/pins.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, pclath, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 1
  2833 ;; This function calls:
  2834 ;;		_SW1_SetInterruptHandler
  2835 ;; This function is called by:
  2836 ;;		_SYSTEM_Initialize
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840     03B1                     _PIN_MANAGER_Initialize:	
  2841                           ;psect for function _PIN_MANAGER_Initialize
  2842                           
  2843     03B1                     l2380:	
  2844                           ;incstack = 0
  2845                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2846                           
  2847                           
  2848                           ;mcc_generated_files/system/src/pins.c: 45:     LATA = 0x0;
  2849     03B1  0022               	movlb	2	; select bank2
  2850     03B2  018C               	clrf	12	;volatile
  2851     03B3                     l2382:
  2852                           
  2853                           ;mcc_generated_files/system/src/pins.c: 46:     LATC = 0x18;
  2854     03B3  3018               	movlw	24
  2855     03B4  008E               	movwf	14	;volatile
  2856     03B5                     l2384:
  2857                           
  2858                           ;mcc_generated_files/system/src/pins.c: 51:     TRISA = 0xF;
  2859     03B5  300F               	movlw	15
  2860     03B6  0021               	movlb	1	; select bank1
  2861     03B7  008C               	movwf	12	;volatile
  2862     03B8                     l2386:
  2863                           
  2864                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x2;
  2865     03B8  3002               	movlw	2
  2866     03B9  008E               	movwf	14	;volatile
  2867                           
  2868                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  2869     03BA  0023               	movlb	3	; select bank3
  2870     03BB  018C               	clrf	12	;volatile
  2871                           
  2872                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELC = 0x0;
  2873     03BC  018E               	clrf	14	;volatile
  2874     03BD                     l2388:
  2875                           
  2876                           ;mcc_generated_files/system/src/pins.c: 63:     WPUA = 0xA;
  2877     03BD  300A               	movlw	10
  2878     03BE  0024               	movlb	4	; select bank4
  2879     03BF  008C               	movwf	12	;volatile
  2880                           
  2881                           ;mcc_generated_files/system/src/pins.c: 64:     WPUC = 0x0;
  2882     03C0  018E               	clrf	14	;volatile
  2883     03C1                     l2390:
  2884                           
  2885                           ;mcc_generated_files/system/src/pins.c: 65:     OPTION_REGbits.nWPUEN = 0x0;
  2886     03C1  0021               	movlb	1	; select bank1
  2887     03C2  1395               	bcf	21,7	;volatile
  2888                           
  2889                           ;mcc_generated_files/system/src/pins.c: 77:     INLVLA = 0x0;
  2890     03C3  0027               	movlb	7	; select bank7
  2891     03C4  018C               	clrf	12	;volatile
  2892                           
  2893                           ;mcc_generated_files/system/src/pins.c: 78:     INLVLC = 0x0;
  2894     03C5  018E               	clrf	14	;volatile
  2895                           
  2896                           ;mcc_generated_files/system/src/pins.c: 87:     APFCON0 = 0x0;
  2897     03C6  0022               	movlb	2	; select bank2
  2898     03C7  019D               	clrf	29	;volatile
  2899                           
  2900                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAP = 0x0;
  2901     03C8  0027               	movlb	7	; select bank7
  2902     03C9  0191               	clrf	17	;volatile
  2903     03CA                     l2392:
  2904                           
  2905                           ;mcc_generated_files/system/src/pins.c: 93:     IOCAN = 0x2;
  2906     03CA  3002               	movlw	2
  2907     03CB  0092               	movwf	18	;volatile
  2908                           
  2909                           ;mcc_generated_files/system/src/pins.c: 94:     IOCAF = 0x0;
  2910     03CC  0193               	clrf	19	;volatile
  2911     03CD                     l2394:
  2912                           
  2913                           ;mcc_generated_files/system/src/pins.c: 96:     SW1_SetInterruptHandler(SW1_DefaultInter
      +                          ruptHandler);
  2914     03CD  30F3               	movlw	low _SW1_DefaultInterruptHandler
  2915     03CE  00F0               	movwf	SW1_SetInterruptHandler@InterruptHandler
  2916     03CF  3002               	movlw	high _SW1_DefaultInterruptHandler
  2917     03D0  00F1               	movwf	SW1_SetInterruptHandler@InterruptHandler+1
  2918     03D1  3182  225C  3183   	fcall	_SW1_SetInterruptHandler
  2919     03D4                     l2396:
  2920                           
  2921                           ;mcc_generated_files/system/src/pins.c: 99:     INTCONbits.IOCIE = 1;
  2922     03D4  158B               	bsf	11,3	;volatile
  2923     03D5                     l187:
  2924     03D5  0008               	return
  2925     03D6                     __end_of_PIN_MANAGER_Initialize:
  2926                           
  2927                           	psect	text5
  2928     025C                     __ptext5:	
  2929 ;; *************** function _SW1_SetInterruptHandler *****************
  2930 ;; Defined at:
  2931 ;;		line 129 in file "mcc_generated_files/system/src/pins.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2934 ;;		 -> SW1_DefaultInterruptHandler(1), 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_PIN_MANAGER_Initialize
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959     025C                     _SW1_SetInterruptHandler:	
  2960                           ;psect for function _SW1_SetInterruptHandler
  2961                           
  2962     025C                     l2340:	
  2963                           ;incstack = 0
  2964                           ; Regs used in _SW1_SetInterruptHandler: [wreg]
  2965                           
  2966                           
  2967                           ;mcc_generated_files/system/src/pins.c: 130:     SW1_InterruptHandler = InterruptHandler
      +                          ;
  2968     025C  0871               	movf	SW1_SetInterruptHandler@InterruptHandler+1,w
  2969     025D  0020               	movlb	0	; select bank0
  2970     025E  00E6               	movwf	_SW1_InterruptHandler+1
  2971     025F  0870               	movf	SW1_SetInterruptHandler@InterruptHandler,w
  2972     0260  00E5               	movwf	_SW1_InterruptHandler
  2973     0261                     l198:
  2974     0261  0008               	return
  2975     0262                     __end_of_SW1_SetInterruptHandler:
  2976                           
  2977                           	psect	text6
  2978     024E                     __ptext6:	
  2979 ;; *************** function _NVM_Initialize *****************
  2980 ;; Defined at:
  2981 ;;		line 42 in file "mcc_generated_files/nvm/src/nvm.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		status,2, status,0, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 1
  3002 ;; This function calls:
  3003 ;;		_NVM_StatusClear
  3004 ;; This function is called by:
  3005 ;;		_SYSTEM_Initialize
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009     024E                     _NVM_Initialize:	
  3010                           ;psect for function _NVM_Initialize
  3011                           
  3012     024E                     l2408:	
  3013                           ;incstack = 0
  3014                           ; Regs used in _NVM_Initialize: [status,2+status,0+pclath+cstack]
  3015                           
  3016                           
  3017                           ;mcc_generated_files/nvm/src/nvm.c: 44:     NVM_StatusClear();
  3018     024E  3182  2247  3182   	fcall	_NVM_StatusClear
  3019     0251                     l597:
  3020     0251  0008               	return
  3021     0252                     __end_of_NVM_Initialize:
  3022                           
  3023                           	psect	text7
  3024     0247                     __ptext7:	
  3025 ;; *************** function _NVM_StatusClear *****************
  3026 ;; Defined at:
  3027 ;;		line 64 in file "mcc_generated_files/nvm/src/nvm.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		None
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_NVM_Initialize
  3051 ;;		_EEPROM_ByteWrite
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055     0247                     _NVM_StatusClear:	
  3056                           ;psect for function _NVM_StatusClear
  3057                           
  3058     0247                     l2370:	
  3059                           ;incstack = 0
  3060                           ; Regs used in _NVM_StatusClear: []
  3061                           
  3062                           
  3063                           ;mcc_generated_files/nvm/src/nvm.c: 66:     EECON1bits.WRERR = 0;
  3064     0247  0023               	movlb	3	; select bank3
  3065     0248  1195               	bcf	21,3	;volsfr
  3066     0249                     l610:
  3067     0249  0008               	return
  3068     024A                     __end_of_NVM_StatusClear:
  3069                           
  3070                           	psect	text8
  3071     027D                     __ptext8:	
  3072 ;; *************** function _INTERRUPT_Initialize *****************
  3073 ;; Defined at:
  3074 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 1
  3095 ;; This function calls:
  3096 ;;		_INT_SetInterruptHandler
  3097 ;; This function is called by:
  3098 ;;		_SYSTEM_Initialize
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102     027D                     _INTERRUPT_Initialize:	
  3103                           ;psect for function _INTERRUPT_Initialize
  3104                           
  3105     027D                     l2376:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3108                           
  3109                           
  3110                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  3111     027D  108B               	bcf	11,1	;volatile
  3112                           
  3113                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  3114     027E  0021               	movlb	1	; select bank1
  3115     027F  1715               	bsf	21,6	;volatile
  3116     0280                     l2378:
  3117                           
  3118                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  3119     0280  3000               	movlw	0
  3120     0281  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  3121     0282  3000               	movlw	0
  3122     0283  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3123     0284  3182  2256  3182   	fcall	_INT_SetInterruptHandler
  3124     0287                     l123:
  3125     0287  0008               	return
  3126     0288                     __end_of_INTERRUPT_Initialize:
  3127                           
  3128                           	psect	text9
  3129     0256                     __ptext9:	
  3130 ;; *************** function _INT_SetInterruptHandler *****************
  3131 ;; Defined at:
  3132 ;;		line 71 in file "mcc_generated_files/system/src/interrupt.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3135 ;;		 -> INT_DefaultInterruptHandler(1), 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;Total ram usage:        2 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_INTERRUPT_Initialize
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160     0256                     _INT_SetInterruptHandler:	
  3161                           ;psect for function _INT_SetInterruptHandler
  3162                           
  3163     0256                     l2338:	
  3164                           ;incstack = 0
  3165                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3166                           
  3167                           
  3168                           ;mcc_generated_files/system/src/interrupt.c: 72:     INT_InterruptHandler = InterruptHan
      +                          dler;
  3169     0256  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3170     0257  0020               	movlb	0	; select bank0
  3171     0258  00E8               	movwf	_INT_InterruptHandler+1
  3172     0259  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3173     025A  00E7               	movwf	_INT_InterruptHandler
  3174     025B                     l133:
  3175     025B  0008               	return
  3176     025C                     __end_of_INT_SetInterruptHandler:
  3177                           
  3178                           	psect	text10
  3179     0262                     __ptext10:	
  3180 ;; *************** function _CLOCK_Initialize *****************
  3181 ;; Defined at:
  3182 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		status,2
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_SYSTEM_Initialize
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209     0262                     _CLOCK_Initialize:	
  3210                           ;psect for function _CLOCK_Initialize
  3211                           
  3212     0262                     l2404:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _CLOCK_Initialize: [status,2]
  3215                           
  3216                           
  3217                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
  3218     0262  306A               	movlw	106
  3219     0263  0021               	movlb	1	; select bank1
  3220     0264  0099               	movwf	25	;volatile
  3221     0265                     l2406:
  3222                           
  3223                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7);
  3224     0265  0022               	movlb	2	; select bank2
  3225     0266  0196               	clrf	22	;volatile
  3226                           
  3227                           ;mcc_generated_files/system/src/clock.c: 45:     OSCTUNE = (0 << 0x0);
  3228     0267  0021               	movlb	1	; select bank1
  3229     0268  0198               	clrf	24	;volatile
  3230     0269                     l213:
  3231     0269  0008               	return
  3232     026A                     __end_of_CLOCK_Initialize:
  3233                           
  3234                           	psect	text11
  3235     026A                     __ptext11:	
  3236 ;; *************** function _PIN_MANAGER_IOC *****************
  3237 ;; Defined at:
  3238 ;;		line 102 in file "mcc_generated_files/system/src/pins.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 2
  3259 ;; This function calls:
  3260 ;;		_SW1_ISR
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266     026A                     _PIN_MANAGER_IOC:	
  3267                           ;psect for function _PIN_MANAGER_IOC
  3268                           
  3269     026A                     l2642:	
  3270                           ;incstack = 0
  3271                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  3272                           
  3273                           
  3274                           ;mcc_generated_files/system/src/pins.c: 105:     if(IOCAFbits.IOCAF1 == 1)
  3275     026A  0027               	movlb	7	; select bank7
  3276     026B  1C93               	btfss	19,1	;volatile
  3277     026C  2A6E               	goto	u921
  3278     026D  2A6F               	goto	u920
  3279     026E                     u921:
  3280     026E  2A72               	goto	l191
  3281     026F                     u920:
  3282     026F                     l2644:
  3283                           
  3284                           ;mcc_generated_files/system/src/pins.c: 106:     {;mcc_generated_files/system/src/pins.c
      +                          : 107:         SW1_ISR();
  3285     026F  3182  22A0  3182   	fcall	_SW1_ISR
  3286     0272                     l191:
  3287     0272  0008               	return
  3288     0273                     __end_of_PIN_MANAGER_IOC:
  3289                           
  3290                           	psect	text12
  3291     02A0                     __ptext12:	
  3292 ;; *************** function _SW1_ISR *****************
  3293 ;; Defined at:
  3294 ;;		line 114 in file "mcc_generated_files/system/src/pins.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 1
  3315 ;; This function calls:
  3316 ;;		NULL
  3317 ;;		_SW1_DefaultInterruptHandler
  3318 ;; This function is called by:
  3319 ;;		_PIN_MANAGER_IOC
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     02A0                     _SW1_ISR:	
  3324                           ;psect for function _SW1_ISR
  3325                           
  3326     02A0                     l2398:	
  3327                           ;incstack = 0
  3328                           ; Regs used in _SW1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3329                           
  3330                           
  3331                           ;mcc_generated_files/system/src/pins.c: 119:     if(SW1_InterruptHandler)
  3332     02A0  0020               	movlb	0	; select bank0
  3333     02A1  0865               	movf	_SW1_InterruptHandler,w
  3334     02A2  0466               	iorwf	_SW1_InterruptHandler+1,w
  3335     02A3  1903               	btfsc	3,2
  3336     02A4  2AA6               	goto	u841
  3337     02A5  2AA7               	goto	u840
  3338     02A6                     u841:
  3339     02A6  2AAC               	goto	l2402
  3340     02A7                     u840:
  3341     02A7                     l2400:
  3342                           
  3343                           ;mcc_generated_files/system/src/pins.c: 120:     {;mcc_generated_files/system/src/pins.c
      +                          : 121:         SW1_InterruptHandler();
  3344     02A7  0866               	movf	_SW1_InterruptHandler+1,w
  3345     02A8  008A               	movwf	10
  3346     02A9  0865               	movf	_SW1_InterruptHandler,w
  3347     02AA  000A               	callw
  3348     02AB  3182               	pagesel	$
  3349     02AC                     l2402:
  3350                           
  3351                           ;mcc_generated_files/system/src/pins.c: 123:     IOCAFbits.IOCAF1 = 0;
  3352     02AC  0027               	movlb	7	; select bank7
  3353     02AD  1093               	bcf	19,1	;volatile
  3354     02AE                     l195:
  3355     02AE  0008               	return
  3356     02AF                     __end_of_SW1_ISR:
  3357                           
  3358                           	psect	text13
  3359     02F3                     __ptext13:	
  3360 ;; *************** function _SW1_DefaultInterruptHandler *****************
  3361 ;; Defined at:
  3362 ;;		line 136 in file "mcc_generated_files/system/src/pins.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_PIN_MANAGER_Initialize
  3386 ;;		_SW1_ISR
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390     02F3                     _SW1_DefaultInterruptHandler:	
  3391                           ;psect for function _SW1_DefaultInterruptHandler
  3392                           
  3393     02F3                     l2342:	
  3394                           ;incstack = 0
  3395                           ; Regs used in _SW1_DefaultInterruptHandler: [wreg+status,0]
  3396                           
  3397                           
  3398                           ;mcc_generated_files/system/src/pins.c: 139:     _delay((unsigned long)((60)*(4000000/40
      +                          00.0)));
  3399     02F3  304E               	movlw	78
  3400     02F4  00F0               	movwf	??_SW1_DefaultInterruptHandler
  3401     02F5  30EB               	movlw	235
  3402     02F6                     u1297:
  3403     02F6  0B89               	decfsz	9,f
  3404     02F7  2AF6               	goto	u1297
  3405     02F8  0BF0               	decfsz	??_SW1_DefaultInterruptHandler,f
  3406     02F9  2AF6               	goto	u1297
  3407     02FA  0000               	nop
  3408     02FB                     l2344:
  3409                           
  3410                           ;mcc_generated_files/system/src/pins.c: 140:     if (PORTAbits.RA1 == 0) {
  3411     02FB  0020               	movlb	0	; select bank0
  3412     02FC  188C               	btfsc	12,1	;volatile
  3413     02FD  2AFF               	goto	u791
  3414     02FE  2B00               	goto	u790
  3415     02FF                     u791:
  3416     02FF  2B0C               	goto	l204
  3417     0300                     u790:
  3418     0300                     l2346:
  3419     0300  1003               	clrc
  3420     0301  0022               	movlb	2	; select bank2
  3421     0302  1E0C               	btfss	12,4	;volatile
  3422     0303  1403               	setc
  3423     0304  1803               	btfsc	3,0
  3424     0305  2B07               	goto	u801
  3425     0306  2B0A               	goto	u800
  3426     0307                     u801:
  3427     0307  0022               	movlb	2	; select bank2
  3428     0308  160C               	bsf	12,4	;volatile
  3429     0309  2B0C               	goto	u814
  3430     030A                     u800:
  3431     030A  0022               	movlb	2	; select bank2
  3432     030B  120C               	bcf	12,4	;volatile
  3433     030C                     u814:
  3434     030C                     l204:
  3435     030C  0008               	return
  3436     030D                     __end_of_SW1_DefaultInterruptHandler:
  3437                           
  3438                           	psect	text14
  3439     04EC                     __ptext14:	
  3440 ;; *************** function _MotionEventHandler *****************
  3441 ;; Defined at:
  3442 ;;		line 15 in file "fall.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  state           1   40[BANK0 ] PTR enum E2687
  3445 ;;		 -> main@current_state(1), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3457 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 3
  3464 ;; This function calls:
  3465 ;;		_ADXL345_ClearInterrupt
  3466 ;;		_orientation_Up
  3467 ;;		_setupForFreefall
  3468 ;;		_setupForImpact
  3469 ;;		_setupForInactivity
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475     04EC                     _MotionEventHandler:	
  3476                           ;psect for function _MotionEventHandler
  3477                           
  3478     04EC                     l2702:	
  3479                           ;incstack = 0
  3480                           ; Regs used in _MotionEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3481                           
  3482                           
  3483                           ;fall.c: 16:     timer_20ms++;
  3484     04EC  3001               	movlw	1
  3485     04ED  0020               	movlb	0	; select bank0
  3486     04EE  07E2               	addwf	_timer_20ms,f
  3487     04EF  3000               	movlw	0
  3488     04F0  3DE3               	addwfc	_timer_20ms+1,f
  3489                           
  3490                           ;fall.c: 17:     orientation_check_timer_20ms++;
  3491     04F1  3001               	movlw	1
  3492     04F2  07E0               	addwf	_orientation_check_timer_20ms,f
  3493     04F3  3000               	movlw	0
  3494     04F4  3DE1               	addwfc	_orientation_check_timer_20ms+1,f
  3495                           
  3496                           ;fall.c: 19:     switch (*state) {
  3497     04F5  2D5D               	goto	l2766
  3498     04F6                     l541:	
  3499                           ;fall.c: 20:         case WAITING_FOR_FREEFALL:
  3500                           
  3501                           
  3502                           ;fall.c: 22:             if (PORTAbits.RA2) {
  3503     04F6  1D0C               	btfss	12,2	;volatile
  3504     04F7  2CF9               	goto	u961
  3505     04F8  2CFA               	goto	u960
  3506     04F9                     u961:
  3507     04F9  2D79               	goto	l570
  3508     04FA                     u960:
  3509     04FA                     l2704:
  3510                           
  3511                           ;fall.c: 23:                 setupForImpact();
  3512     04FA  3186  2611  3184   	fcall	_setupForImpact
  3513     04FD                     l2706:
  3514                           
  3515                           ;fall.c: 24:                 timer_20ms = 0;
  3516     04FD  0020               	movlb	0	; select bank0
  3517     04FE  01E2               	clrf	_timer_20ms
  3518     04FF  01E3               	clrf	_timer_20ms+1
  3519     0500                     l2708:
  3520                           
  3521                           ;fall.c: 25:                 *state = WAITING_FOR_IMPACT;
  3522     0500  0848               	movf	MotionEventHandler@state,w
  3523     0501  0086               	movwf	6
  3524     0502  0187               	clrf	7
  3525     0503  3001               	movlw	1
  3526     0504  0081               	movwf	1
  3527     0505  2D79               	goto	l570
  3528     0506                     l544:	
  3529                           ;fall.c: 29:         case WAITING_FOR_IMPACT:
  3530                           
  3531                           
  3532                           ;fall.c: 31:             if (PORTAbits.RA2) {
  3533     0506  1D0C               	btfss	12,2	;volatile
  3534     0507  2D09               	goto	u971
  3535     0508  2D0A               	goto	u970
  3536     0509                     u971:
  3537     0509  2D14               	goto	l2714
  3538     050A                     u970:
  3539     050A                     l2710:
  3540                           
  3541                           ;fall.c: 32:                 setupForInactivity();
  3542     050A  3186  26A8  3184   	fcall	_setupForInactivity
  3543     050D                     l2712:
  3544                           
  3545                           ;fall.c: 33:                 *state = WAITING_FOR_INACTIVITY;
  3546     050D  0020               	movlb	0	; select bank0
  3547     050E  0848               	movf	MotionEventHandler@state,w
  3548     050F  0086               	movwf	6
  3549     0510  0187               	clrf	7
  3550     0511  3002               	movlw	2
  3551     0512  0081               	movwf	1
  3552                           
  3553                           ;fall.c: 34:             }
  3554     0513  2D79               	goto	l570
  3555     0514                     l2714:
  3556     0514  3000               	movlw	0
  3557     0515  0263               	subwf	_timer_20ms+1,w
  3558     0516  3019               	movlw	25
  3559     0517  1903               	skipnz
  3560     0518  0262               	subwf	_timer_20ms,w
  3561     0519  1C03               	skipc
  3562     051A  2D1C               	goto	u981
  3563     051B  2D1D               	goto	u980
  3564     051C                     u981:
  3565     051C  2D79               	goto	l570
  3566     051D                     u980:
  3567     051D                     l2716:
  3568                           
  3569                           ;fall.c: 37:                 setupForFreefall();
  3570     051D  3185  257A  3184   	fcall	_setupForFreefall
  3571     0520                     l2718:
  3572                           
  3573                           ;fall.c: 38:                 *state = WAITING_FOR_FREEFALL;
  3574     0520  0020               	movlb	0	; select bank0
  3575     0521  0848               	movf	MotionEventHandler@state,w
  3576     0522  0086               	movwf	6
  3577     0523  0187               	clrf	7
  3578     0524  0181               	clrf	1
  3579     0525  2D79               	goto	l570
  3580     0526                     l548:	
  3581                           ;fall.c: 42:         case WAITING_FOR_INACTIVITY:
  3582                           
  3583                           
  3584                           ;fall.c: 44:             if (PORTAbits.RA2) {
  3585     0526  1D0C               	btfss	12,2	;volatile
  3586     0527  2D29               	goto	u991
  3587     0528  2D2A               	goto	u990
  3588     0529                     u991:
  3589     0529  2D4D               	goto	l2738
  3590     052A                     u990:
  3591     052A                     l2720:
  3592                           
  3593                           ;fall.c: 45:                 if (!orientation_Up()) {
  3594     052A  3187  273F  3184   	fcall	_orientation_Up
  3595     052D  3A00               	xorlw	0
  3596     052E  1D03               	skipz
  3597     052F  2D31               	goto	u1001
  3598     0530  2D32               	goto	u1000
  3599     0531                     u1001:
  3600     0531  2D1D               	goto	l2716
  3601     0532                     u1000:
  3602     0532                     l551:	
  3603                           ;fall.c: 46:                     do { LATAbits.LATA5 = 1; } while(0);
  3604                           
  3605     0532  0022               	movlb	2	; select bank2
  3606     0533  168C               	bsf	12,5	;volatile
  3607     0534                     l2722:
  3608                           
  3609                           ;fall.c: 47:                     _delay((unsigned long)((100)*(4000000/4000.0)));
  3610     0534  3082               	movlw	130
  3611     0535  0020               	movlb	0	; select bank0
  3612     0536  00C9               	movwf	??_MotionEventHandler
  3613     0537  30DD               	movlw	221
  3614     0538                     u1307:
  3615     0538  0B89               	decfsz	9,f
  3616     0539  2D38               	goto	u1307
  3617     053A  0BC9               	decfsz	??_MotionEventHandler,f
  3618     053B  2D38               	goto	u1307
  3619     053C  3200               	nop2
  3620     053D                     l2724:
  3621     053D  0022               	movlb	2	; select bank2
  3622     053E  128C               	bcf	12,5	;volatile
  3623     053F                     l2726:
  3624                           
  3625                           ;fall.c: 49:                     orientation_check_timer_20ms = 0;
  3626     053F  0020               	movlb	0	; select bank0
  3627     0540  01E0               	clrf	_orientation_check_timer_20ms
  3628     0541  01E1               	clrf	_orientation_check_timer_20ms+1
  3629     0542                     l2728:
  3630                           
  3631                           ;fall.c: 50:                     good_orientation_count = 0;
  3632     0542  01E4               	clrf	_good_orientation_count
  3633     0543                     l2730:
  3634                           
  3635                           ;fall.c: 51:                     ADXL345_ClearInterrupt();
  3636     0543  3182  22D9  3184   	fcall	_ADXL345_ClearInterrupt
  3637     0546                     l2732:
  3638                           
  3639                           ;fall.c: 52:                     *state = WAITING_FOR_TIMEOUT;
  3640     0546  0020               	movlb	0	; select bank0
  3641     0547  0848               	movf	MotionEventHandler@state,w
  3642     0548  0086               	movwf	6
  3643     0549  0187               	clrf	7
  3644     054A  3003               	movlw	3
  3645     054B  0081               	movwf	1
  3646                           
  3647                           ;fall.c: 53:                 } else {
  3648     054C  2D79               	goto	l570
  3649     054D                     l2738:
  3650     054D  3000               	movlw	0
  3651     054E  0263               	subwf	_timer_20ms+1,w
  3652     054F  30E1               	movlw	225
  3653     0550  1903               	skipnz
  3654     0551  0262               	subwf	_timer_20ms,w
  3655     0552  1C03               	skipc
  3656     0553  2D55               	goto	u1011
  3657     0554  2D56               	goto	u1010
  3658     0555                     u1011:
  3659     0555  2D79               	goto	l570
  3660     0556                     u1010:
  3661     0556  2D1D               	goto	l2716
  3662     0557                     l2744:
  3663                           
  3664                           ;fall.c: 68:                 *state = FALL_DETECTED;
  3665     0557  0848               	movf	MotionEventHandler@state,w
  3666     0558  0086               	movwf	6
  3667     0559  0187               	clrf	7
  3668     055A  3004               	movlw	4
  3669     055B  0081               	movwf	1
  3670                           
  3671                           ;fall.c: 69:             }
  3672     055C  2D79               	goto	l570
  3673     055D                     l2766:
  3674     055D  0848               	movf	MotionEventHandler@state,w
  3675     055E  0086               	movwf	6
  3676     055F  0187               	clrf	7
  3677     0560  0801               	movf	1,w
  3678     0561  00C9               	movwf	??_MotionEventHandler
  3679     0562  01CA               	clrf	??_MotionEventHandler+1
  3680                           
  3681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3682                           ; Switch size 1, requested type "simple"
  3683                           ; Number of cases is 1, Range of values is 0 to 0
  3684                           ; switch strategies available:
  3685                           ; Name         Instructions Cycles
  3686                           ; simple_byte            4     3 (average)
  3687                           ; direct_byte            8     6 (fixed)
  3688                           ; jumptable            260     6 (fixed)
  3689                           ;	Chosen strategy is simple_byte
  3690     0563  084A               	movf	??_MotionEventHandler+1,w
  3691     0564  3A00               	xorlw	0	; case 0
  3692     0565  1903               	skipnz
  3693     0566  2D68               	goto	l3056
  3694     0567  2D79               	goto	l570
  3695     0568                     l3056:
  3696                           
  3697                           ; Switch size 1, requested type "simple"
  3698                           ; Number of cases is 5, Range of values is 0 to 4
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; direct_byte           16     6 (fixed)
  3702                           ; simple_byte           16     9 (average)
  3703                           ; jumptable            260     6 (fixed)
  3704                           ;	Chosen strategy is simple_byte
  3705     0568  0849               	movf	??_MotionEventHandler,w
  3706     0569  3A00               	xorlw	0	; case 0
  3707     056A  1903               	skipnz
  3708     056B  2CF6               	goto	l541
  3709     056C  3A01               	xorlw	1	; case 1
  3710     056D  1903               	skipnz
  3711     056E  2D06               	goto	l544
  3712     056F  3A03               	xorlw	3	; case 2
  3713     0570  1903               	skipnz
  3714     0571  2D26               	goto	l548
  3715     0572  3A01               	xorlw	1	; case 3
  3716     0573  1903               	skipnz
  3717     0574  2D57               	goto	l2744
  3718     0575  3A07               	xorlw	7	; case 4
  3719     0576  1903               	skipnz
  3720     0577  2D79               	goto	l570
  3721     0578  2D79               	goto	l570
  3722     0579                     l570:
  3723     0579  0008               	return
  3724     057A                     __end_of_MotionEventHandler:
  3725                           
  3726                           	psect	text15
  3727     06A8                     __ptext15:	
  3728 ;; *************** function _setupForInactivity *****************
  3729 ;; Defined at:
  3730 ;;		line 207 in file "ADXL345.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  msg            26    0[BANK0 ] struct Message
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;Total ram usage:       26 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 2
  3751 ;; This function calls:
  3752 ;;		_SPI1_BufferWrite
  3753 ;;		_SPI1_ByteExchange
  3754 ;;		_SPI1_Close
  3755 ;;		_SPI1_Open
  3756 ;;		_memcpy
  3757 ;;		_memset
  3758 ;; This function is called by:
  3759 ;;		_MotionEventHandler
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763     06A8                     _setupForInactivity:	
  3764                           ;psect for function _setupForInactivity
  3765                           
  3766     06A8                     l2532:	
  3767                           ;incstack = 0
  3768                           ; Regs used in _setupForInactivity: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3769                           
  3770                           
  3771                           ;ADXL345.c: 208:     while (!SPI1_Open(ADXL345)) {
  3772     06A8  2EAC               	goto	l2536
  3773     06A9                     l2534:
  3774                           
  3775                           ;ADXL345.c: 209:         SPI1_Close();
  3776     06A9  3182  2244  3186   	fcall	_SPI1_Close
  3777     06AC                     l2536:
  3778                           
  3779                           ;ADXL345.c: 208:     while (!SPI1_Open(ADXL345)) {
  3780     06AC  01F6               	clrf	SPI1_Open@spiConfigIndex
  3781     06AD  3184  2480  3186   	fcall	_SPI1_Open
  3782     06B0  3A00               	xorlw	0
  3783     06B1  1903               	skipnz
  3784     06B2  2EB4               	goto	u881
  3785     06B3  2EB5               	goto	u880
  3786     06B4                     u881:
  3787     06B4  2EA9               	goto	l2534
  3788     06B5                     u880:
  3789     06B5                     l422:	
  3790                           ;ADXL345.c: 213:     do { LATCbits.LATC4 = 0; } while(0);
  3791                           
  3792     06B5  0022               	movlb	2	; select bank2
  3793     06B6  120E               	bcf	14,4	;volatile
  3794     06B7                     l2538:
  3795                           
  3796                           ;ADXL345.c: 214:     SPI1_ByteExchange(0x30);
  3797     06B7  3030               	movlw	48
  3798     06B8  00F0               	movwf	SPI1_ByteExchange@byteData
  3799     06B9  3182  2288  3186   	fcall	_SPI1_ByteExchange
  3800     06BC                     l2540:
  3801     06BC  0022               	movlb	2	; select bank2
  3802     06BD  160E               	bsf	14,4	;volatile
  3803     06BE                     l2542:
  3804                           
  3805                           ;ADXL345.c: 223:     struct Message msg;;ADXL345.c: 224:     msg.registerAddr = 0x24;
  3806     06BE  3024               	movlw	36
  3807     06BF  0020               	movlb	0	; select bank0
  3808     06C0  00A0               	movwf	setupForInactivity@msg
  3809     06C1                     l2544:
  3810                           
  3811                           ;ADXL345.c: 225:     memset(msg.data, 0, sizeof(msg.data));
  3812     06C1  3021               	movlw	low (setupForInactivity@msg+1)
  3813     06C2  00F0               	movwf	memset@dest
  3814     06C3  3000               	movlw	high (setupForInactivity@msg+1)
  3815     06C4  00F1               	movwf	memset@dest+1
  3816     06C5  3000               	movlw	0
  3817     06C6  00F2               	movwf	memset@c
  3818     06C7  00F3               	movwf	memset@c+1
  3819     06C8  3019               	movlw	25
  3820     06C9  00F4               	movwf	memset@n
  3821     06CA  3000               	movlw	0
  3822     06CB  00F5               	movwf	memset@n+1
  3823     06CC  3182  22C2  3186   	fcall	_memset
  3824     06CF                     l2546:
  3825                           
  3826                           ;ADXL345.c: 226:     memcpy(msg.data, no_motion_init, sizeof(no_motion_init));
  3827     06CF  3021               	movlw	low (setupForInactivity@msg+1)
  3828     06D0  00F0               	movwf	memcpy@d1
  3829     06D1  3000               	movlw	high (setupForInactivity@msg+1)
  3830     06D2  00F1               	movwf	memcpy@d1+1
  3831     06D3  3045               	movlw	low (_no_motion_init| (0+32768))
  3832     06D4  00F2               	movwf	memcpy@s1
  3833     06D5  3088               	movlw	high (_no_motion_init| (0+32768))
  3834     06D6  00F3               	movwf	memcpy@s1+1
  3835     06D7  3004               	movlw	4
  3836     06D8  00F4               	movwf	memcpy@n
  3837     06D9  3000               	movlw	0
  3838     06DA  00F5               	movwf	memcpy@n+1
  3839     06DB  3183  238C  3186   	fcall	_memcpy
  3840     06DE                     l2548:
  3841     06DE  0022               	movlb	2	; select bank2
  3842     06DF  120E               	bcf	14,4	;volatile
  3843     06E0                     l2550:
  3844                           
  3845                           ;ADXL345.c: 228:     SPI1_BufferWrite(&msg, sizeof(no_motion_init) + 1);
  3846     06E0  3020               	movlw	low setupForInactivity@msg
  3847     06E1  00F0               	movwf	SPI1_BufferWrite@bufferData
  3848     06E2  3000               	movlw	high setupForInactivity@msg
  3849     06E3  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3850     06E4  3005               	movlw	5
  3851     06E5  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3852     06E6  3000               	movlw	0
  3853     06E7  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3854     06E8  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3855     06EB                     l2552:
  3856     06EB  0022               	movlb	2	; select bank2
  3857     06EC  160E               	bsf	14,4	;volatile
  3858     06ED                     l2554:
  3859                           
  3860                           ;ADXL345.c: 232:     msg.registerAddr = 0x2C;
  3861     06ED  302C               	movlw	44
  3862     06EE  0020               	movlb	0	; select bank0
  3863     06EF  00A0               	movwf	setupForInactivity@msg
  3864     06F0                     l2556:
  3865                           
  3866                           ;ADXL345.c: 233:     memset(msg.data, 0, sizeof(msg.data));
  3867     06F0  3021               	movlw	low (setupForInactivity@msg+1)
  3868     06F1  00F0               	movwf	memset@dest
  3869     06F2  3000               	movlw	high (setupForInactivity@msg+1)
  3870     06F3  00F1               	movwf	memset@dest+1
  3871     06F4  3000               	movlw	0
  3872     06F5  00F2               	movwf	memset@c
  3873     06F6  00F3               	movwf	memset@c+1
  3874     06F7  3019               	movlw	25
  3875     06F8  00F4               	movwf	memset@n
  3876     06F9  3000               	movlw	0
  3877     06FA  00F5               	movwf	memset@n+1
  3878     06FB  3182  22C2  3186   	fcall	_memset
  3879     06FE                     l2558:
  3880                           
  3881                           ;ADXL345.c: 234:     msg.data[0] = 0x17;
  3882     06FE  3017               	movlw	23
  3883     06FF  0020               	movlb	0	; select bank0
  3884     0700  00A1               	movwf	setupForInactivity@msg+1
  3885     0701                     l2560:
  3886     0701  0022               	movlb	2	; select bank2
  3887     0702  120E               	bcf	14,4	;volatile
  3888     0703                     l2562:
  3889                           
  3890                           ;ADXL345.c: 236:     SPI1_BufferWrite(&msg, 2);
  3891     0703  3020               	movlw	low setupForInactivity@msg
  3892     0704  00F0               	movwf	SPI1_BufferWrite@bufferData
  3893     0705  3000               	movlw	high setupForInactivity@msg
  3894     0706  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3895     0707  3002               	movlw	2
  3896     0708  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3897     0709  3000               	movlw	0
  3898     070A  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3899     070B  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3900     070E                     l2564:
  3901     070E  0022               	movlb	2	; select bank2
  3902     070F  160E               	bsf	14,4	;volatile
  3903     0710                     l2566:
  3904                           
  3905                           ;ADXL345.c: 240:     msg.registerAddr = 0x2E;
  3906     0710  302E               	movlw	46
  3907     0711  0020               	movlb	0	; select bank0
  3908     0712  00A0               	movwf	setupForInactivity@msg
  3909     0713                     l2568:
  3910                           
  3911                           ;ADXL345.c: 241:     memset(msg.data, 0, sizeof(msg.data));
  3912     0713  3021               	movlw	low (setupForInactivity@msg+1)
  3913     0714  00F0               	movwf	memset@dest
  3914     0715  3000               	movlw	high (setupForInactivity@msg+1)
  3915     0716  00F1               	movwf	memset@dest+1
  3916     0717  3000               	movlw	0
  3917     0718  00F2               	movwf	memset@c
  3918     0719  00F3               	movwf	memset@c+1
  3919     071A  3019               	movlw	25
  3920     071B  00F4               	movwf	memset@n
  3921     071C  3000               	movlw	0
  3922     071D  00F5               	movwf	memset@n+1
  3923     071E  3182  22C2  3186   	fcall	_memset
  3924     0721                     l2570:
  3925                           
  3926                           ;ADXL345.c: 242:     msg.data[0] = 0x08;
  3927     0721  3008               	movlw	8
  3928     0722  0020               	movlb	0	; select bank0
  3929     0723  00A1               	movwf	setupForInactivity@msg+1
  3930     0724                     l2572:
  3931     0724  0022               	movlb	2	; select bank2
  3932     0725  120E               	bcf	14,4	;volatile
  3933     0726                     l2574:
  3934                           
  3935                           ;ADXL345.c: 244:     SPI1_BufferWrite(&msg, 2);
  3936     0726  3020               	movlw	low setupForInactivity@msg
  3937     0727  00F0               	movwf	SPI1_BufferWrite@bufferData
  3938     0728  3000               	movlw	high setupForInactivity@msg
  3939     0729  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  3940     072A  3002               	movlw	2
  3941     072B  00F2               	movwf	SPI1_BufferWrite@bufferSize
  3942     072C  3000               	movlw	0
  3943     072D  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  3944     072E  3183  234A  3186   	fcall	_SPI1_BufferWrite
  3945     0731                     l2576:
  3946     0731  0022               	movlb	2	; select bank2
  3947     0732  160E               	bsf	14,4	;volatile
  3948     0733                     l2578:
  3949     0733  120E               	bcf	14,4	;volatile
  3950     0734                     l2580:
  3951                           
  3952                           ;ADXL345.c: 249:     SPI1_ByteExchange(0x30);
  3953     0734  3030               	movlw	48
  3954     0735  00F0               	movwf	SPI1_ByteExchange@byteData
  3955     0736  3182  2288  3186   	fcall	_SPI1_ByteExchange
  3956     0739                     l2582:
  3957     0739  0022               	movlb	2	; select bank2
  3958     073A  160E               	bsf	14,4	;volatile
  3959     073B                     l2584:
  3960                           
  3961                           ;ADXL345.c: 252:     SPI1_Close();
  3962     073B  3182  2244  3186   	fcall	_SPI1_Close
  3963     073E                     l442:
  3964     073E  0008               	return
  3965     073F                     __end_of_setupForInactivity:
  3966                           
  3967                           	psect	text16
  3968     0611                     __ptext16:	
  3969 ;; *************** function _setupForImpact *****************
  3970 ;; Defined at:
  3971 ;;		line 159 in file "ADXL345.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  msg            26    0[BANK0 ] struct Message
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;Total ram usage:       26 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 2
  3992 ;; This function calls:
  3993 ;;		_SPI1_BufferWrite
  3994 ;;		_SPI1_ByteExchange
  3995 ;;		_SPI1_Close
  3996 ;;		_SPI1_Open
  3997 ;;		_memcpy
  3998 ;;		_memset
  3999 ;; This function is called by:
  4000 ;;		_MotionEventHandler
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004     0611                     _setupForImpact:	
  4005                           ;psect for function _setupForImpact
  4006                           
  4007     0611                     l2478:	
  4008                           ;incstack = 0
  4009                           ; Regs used in _setupForImpact: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4010                           
  4011                           
  4012                           ;ADXL345.c: 160:     while (!SPI1_Open(ADXL345)) {
  4013     0611  2E15               	goto	l2482
  4014     0612                     l2480:
  4015                           
  4016                           ;ADXL345.c: 161:         SPI1_Close();
  4017     0612  3182  2244  3186   	fcall	_SPI1_Close
  4018     0615                     l2482:
  4019                           
  4020                           ;ADXL345.c: 160:     while (!SPI1_Open(ADXL345)) {
  4021     0615  01F6               	clrf	SPI1_Open@spiConfigIndex
  4022     0616  3184  2480  3186   	fcall	_SPI1_Open
  4023     0619  3A00               	xorlw	0
  4024     061A  1903               	skipnz
  4025     061B  2E1D               	goto	u871
  4026     061C  2E1E               	goto	u870
  4027     061D                     u871:
  4028     061D  2E12               	goto	l2480
  4029     061E                     u870:
  4030     061E                     l396:	
  4031                           ;ADXL345.c: 165:     do { LATCbits.LATC4 = 0; } while(0);
  4032                           
  4033     061E  0022               	movlb	2	; select bank2
  4034     061F  120E               	bcf	14,4	;volatile
  4035     0620                     l2484:
  4036                           
  4037                           ;ADXL345.c: 166:     SPI1_ByteExchange(0x30);
  4038     0620  3030               	movlw	48
  4039     0621  00F0               	movwf	SPI1_ByteExchange@byteData
  4040     0622  3182  2288  3186   	fcall	_SPI1_ByteExchange
  4041     0625                     l2486:
  4042     0625  0022               	movlb	2	; select bank2
  4043     0626  160E               	bsf	14,4	;volatile
  4044     0627                     l2488:
  4045                           
  4046                           ;ADXL345.c: 175:     struct Message msg;;ADXL345.c: 176:     msg.registerAddr = 0x24;
  4047     0627  3024               	movlw	36
  4048     0628  0020               	movlb	0	; select bank0
  4049     0629  00A0               	movwf	setupForImpact@msg
  4050     062A                     l2490:
  4051                           
  4052                           ;ADXL345.c: 177:     memset(msg.data, 0, sizeof(msg.data));
  4053     062A  3021               	movlw	low (setupForImpact@msg+1)
  4054     062B  00F0               	movwf	memset@dest
  4055     062C  3000               	movlw	high (setupForImpact@msg+1)
  4056     062D  00F1               	movwf	memset@dest+1
  4057     062E  3000               	movlw	0
  4058     062F  00F2               	movwf	memset@c
  4059     0630  00F3               	movwf	memset@c+1
  4060     0631  3019               	movlw	25
  4061     0632  00F4               	movwf	memset@n
  4062     0633  3000               	movlw	0
  4063     0634  00F5               	movwf	memset@n+1
  4064     0635  3182  22C2  3186   	fcall	_memset
  4065     0638                     l2492:
  4066                           
  4067                           ;ADXL345.c: 178:     memcpy(msg.data, impact_init, sizeof(impact_init));
  4068     0638  3021               	movlw	low (setupForImpact@msg+1)
  4069     0639  00F0               	movwf	memcpy@d1
  4070     063A  3000               	movlw	high (setupForImpact@msg+1)
  4071     063B  00F1               	movwf	memcpy@d1+1
  4072     063C  3049               	movlw	low (_impact_init| (0+32768))
  4073     063D  00F2               	movwf	memcpy@s1
  4074     063E  3088               	movlw	high (_impact_init| (0+32768))
  4075     063F  00F3               	movwf	memcpy@s1+1
  4076     0640  3004               	movlw	4
  4077     0641  00F4               	movwf	memcpy@n
  4078     0642  3000               	movlw	0
  4079     0643  00F5               	movwf	memcpy@n+1
  4080     0644  3183  238C  3186   	fcall	_memcpy
  4081     0647                     l2494:
  4082     0647  0022               	movlb	2	; select bank2
  4083     0648  120E               	bcf	14,4	;volatile
  4084     0649                     l2496:
  4085                           
  4086                           ;ADXL345.c: 180:     SPI1_BufferWrite(&msg, sizeof(impact_init) + 1);
  4087     0649  3020               	movlw	low setupForImpact@msg
  4088     064A  00F0               	movwf	SPI1_BufferWrite@bufferData
  4089     064B  3000               	movlw	high setupForImpact@msg
  4090     064C  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4091     064D  3005               	movlw	5
  4092     064E  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4093     064F  3000               	movlw	0
  4094     0650  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4095     0651  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4096     0654                     l2498:
  4097     0654  0022               	movlb	2	; select bank2
  4098     0655  160E               	bsf	14,4	;volatile
  4099     0656                     l2500:
  4100                           
  4101                           ;ADXL345.c: 184:     msg.registerAddr = 0x2C;
  4102     0656  302C               	movlw	44
  4103     0657  0020               	movlb	0	; select bank0
  4104     0658  00A0               	movwf	setupForImpact@msg
  4105     0659                     l2502:
  4106                           
  4107                           ;ADXL345.c: 185:     memset(msg.data, 0, sizeof(msg.data));
  4108     0659  3021               	movlw	low (setupForImpact@msg+1)
  4109     065A  00F0               	movwf	memset@dest
  4110     065B  3000               	movlw	high (setupForImpact@msg+1)
  4111     065C  00F1               	movwf	memset@dest+1
  4112     065D  3000               	movlw	0
  4113     065E  00F2               	movwf	memset@c
  4114     065F  00F3               	movwf	memset@c+1
  4115     0660  3019               	movlw	25
  4116     0661  00F4               	movwf	memset@n
  4117     0662  3000               	movlw	0
  4118     0663  00F5               	movwf	memset@n+1
  4119     0664  3182  22C2  3186   	fcall	_memset
  4120     0667                     l2504:
  4121                           
  4122                           ;ADXL345.c: 186:     msg.data[0] = 0x1A;
  4123     0667  301A               	movlw	26
  4124     0668  0020               	movlb	0	; select bank0
  4125     0669  00A1               	movwf	setupForImpact@msg+1
  4126     066A                     l2506:
  4127     066A  0022               	movlb	2	; select bank2
  4128     066B  120E               	bcf	14,4	;volatile
  4129     066C                     l2508:
  4130                           
  4131                           ;ADXL345.c: 188:     SPI1_BufferWrite(&msg, 2);
  4132     066C  3020               	movlw	low setupForImpact@msg
  4133     066D  00F0               	movwf	SPI1_BufferWrite@bufferData
  4134     066E  3000               	movlw	high setupForImpact@msg
  4135     066F  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4136     0670  3002               	movlw	2
  4137     0671  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4138     0672  3000               	movlw	0
  4139     0673  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4140     0674  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4141     0677                     l2510:
  4142     0677  0022               	movlb	2	; select bank2
  4143     0678  160E               	bsf	14,4	;volatile
  4144     0679                     l2512:
  4145                           
  4146                           ;ADXL345.c: 192:     msg.registerAddr = 0x2E;
  4147     0679  302E               	movlw	46
  4148     067A  0020               	movlb	0	; select bank0
  4149     067B  00A0               	movwf	setupForImpact@msg
  4150     067C                     l2514:
  4151                           
  4152                           ;ADXL345.c: 193:     memset(msg.data, 0, sizeof(msg.data));
  4153     067C  3021               	movlw	low (setupForImpact@msg+1)
  4154     067D  00F0               	movwf	memset@dest
  4155     067E  3000               	movlw	high (setupForImpact@msg+1)
  4156     067F  00F1               	movwf	memset@dest+1
  4157     0680  3000               	movlw	0
  4158     0681  00F2               	movwf	memset@c
  4159     0682  00F3               	movwf	memset@c+1
  4160     0683  3019               	movlw	25
  4161     0684  00F4               	movwf	memset@n
  4162     0685  3000               	movlw	0
  4163     0686  00F5               	movwf	memset@n+1
  4164     0687  3182  22C2  3186   	fcall	_memset
  4165     068A                     l2516:
  4166                           
  4167                           ;ADXL345.c: 194:     msg.data[0] = 0x04;
  4168     068A  3004               	movlw	4
  4169     068B  0020               	movlb	0	; select bank0
  4170     068C  00A1               	movwf	setupForImpact@msg+1
  4171     068D                     l2518:
  4172     068D  0022               	movlb	2	; select bank2
  4173     068E  120E               	bcf	14,4	;volatile
  4174     068F                     l2520:
  4175                           
  4176                           ;ADXL345.c: 196:     SPI1_BufferWrite(&msg, 2);
  4177     068F  3020               	movlw	low setupForImpact@msg
  4178     0690  00F0               	movwf	SPI1_BufferWrite@bufferData
  4179     0691  3000               	movlw	high setupForImpact@msg
  4180     0692  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4181     0693  3002               	movlw	2
  4182     0694  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4183     0695  3000               	movlw	0
  4184     0696  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4185     0697  3183  234A  3186   	fcall	_SPI1_BufferWrite
  4186     069A                     l2522:
  4187     069A  0022               	movlb	2	; select bank2
  4188     069B  160E               	bsf	14,4	;volatile
  4189     069C                     l2524:
  4190     069C  120E               	bcf	14,4	;volatile
  4191     069D                     l2526:
  4192                           
  4193                           ;ADXL345.c: 201:     SPI1_ByteExchange(0x30);
  4194     069D  3030               	movlw	48
  4195     069E  00F0               	movwf	SPI1_ByteExchange@byteData
  4196     069F  3182  2288  3186   	fcall	_SPI1_ByteExchange
  4197     06A2                     l2528:
  4198     06A2  0022               	movlb	2	; select bank2
  4199     06A3  160E               	bsf	14,4	;volatile
  4200     06A4                     l2530:
  4201                           
  4202                           ;ADXL345.c: 204:     SPI1_Close();
  4203     06A4  3182  2244  3186   	fcall	_SPI1_Close
  4204     06A7                     l416:
  4205     06A7  0008               	return
  4206     06A8                     __end_of_setupForImpact:
  4207                           
  4208                           	psect	text17
  4209     057A                     __ptext17:	
  4210 ;; *************** function _setupForFreefall *****************
  4211 ;; Defined at:
  4212 ;;		line 111 in file "ADXL345.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  msg            26    0[BANK0 ] struct Message
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;Total ram usage:       26 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 2
  4233 ;; This function calls:
  4234 ;;		_SPI1_BufferWrite
  4235 ;;		_SPI1_ByteExchange
  4236 ;;		_SPI1_Close
  4237 ;;		_SPI1_Open
  4238 ;;		_memcpy
  4239 ;;		_memset
  4240 ;; This function is called by:
  4241 ;;		_MotionEventHandler
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245     057A                     _setupForFreefall:	
  4246                           ;psect for function _setupForFreefall
  4247                           
  4248     057A                     l2424:	
  4249                           ;incstack = 0
  4250                           ; Regs used in _setupForFreefall: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4251                           
  4252                           
  4253                           ;ADXL345.c: 112:     while (!SPI1_Open(ADXL345)) {
  4254     057A  2D7E               	goto	l2428
  4255     057B                     l2426:
  4256                           
  4257                           ;ADXL345.c: 113:         SPI1_Close();
  4258     057B  3182  2244  3185   	fcall	_SPI1_Close
  4259     057E                     l2428:
  4260                           
  4261                           ;ADXL345.c: 112:     while (!SPI1_Open(ADXL345)) {
  4262     057E  01F6               	clrf	SPI1_Open@spiConfigIndex
  4263     057F  3184  2480  3185   	fcall	_SPI1_Open
  4264     0582  3A00               	xorlw	0
  4265     0583  1903               	skipnz
  4266     0584  2D86               	goto	u861
  4267     0585  2D87               	goto	u860
  4268     0586                     u861:
  4269     0586  2D7B               	goto	l2426
  4270     0587                     u860:
  4271     0587                     l370:	
  4272                           ;ADXL345.c: 117:     do { LATCbits.LATC4 = 0; } while(0);
  4273                           
  4274     0587  0022               	movlb	2	; select bank2
  4275     0588  120E               	bcf	14,4	;volatile
  4276     0589                     l2430:
  4277                           
  4278                           ;ADXL345.c: 118:     SPI1_ByteExchange(0x30);
  4279     0589  3030               	movlw	48
  4280     058A  00F0               	movwf	SPI1_ByteExchange@byteData
  4281     058B  3182  2288  3185   	fcall	_SPI1_ByteExchange
  4282     058E                     l2432:
  4283     058E  0022               	movlb	2	; select bank2
  4284     058F  160E               	bsf	14,4	;volatile
  4285     0590                     l2434:
  4286                           
  4287                           ;ADXL345.c: 127:     struct Message msg;;ADXL345.c: 128:     msg.registerAddr = 0x24;
  4288     0590  3024               	movlw	36
  4289     0591  0020               	movlb	0	; select bank0
  4290     0592  00A0               	movwf	setupForFreefall@msg
  4291     0593                     l2436:
  4292                           
  4293                           ;ADXL345.c: 129:     memset(msg.data, 0, sizeof(msg.data));
  4294     0593  3021               	movlw	low (setupForFreefall@msg+1)
  4295     0594  00F0               	movwf	memset@dest
  4296     0595  3000               	movlw	high (setupForFreefall@msg+1)
  4297     0596  00F1               	movwf	memset@dest+1
  4298     0597  3000               	movlw	0
  4299     0598  00F2               	movwf	memset@c
  4300     0599  00F3               	movwf	memset@c+1
  4301     059A  3019               	movlw	25
  4302     059B  00F4               	movwf	memset@n
  4303     059C  3000               	movlw	0
  4304     059D  00F5               	movwf	memset@n+1
  4305     059E  3182  22C2  3185   	fcall	_memset
  4306     05A1                     l2438:
  4307                           
  4308                           ;ADXL345.c: 130:     memcpy(msg.data, fall_init, sizeof(fall_init));
  4309     05A1  3021               	movlw	low (setupForFreefall@msg+1)
  4310     05A2  00F0               	movwf	memcpy@d1
  4311     05A3  3000               	movlw	high (setupForFreefall@msg+1)
  4312     05A4  00F1               	movwf	memcpy@d1+1
  4313     05A5  304D               	movlw	low (_fall_init| (0+32768))
  4314     05A6  00F2               	movwf	memcpy@s1
  4315     05A7  3088               	movlw	high (_fall_init| (0+32768))
  4316     05A8  00F3               	movwf	memcpy@s1+1
  4317     05A9  3004               	movlw	4
  4318     05AA  00F4               	movwf	memcpy@n
  4319     05AB  3000               	movlw	0
  4320     05AC  00F5               	movwf	memcpy@n+1
  4321     05AD  3183  238C  3185   	fcall	_memcpy
  4322     05B0                     l2440:
  4323     05B0  0022               	movlb	2	; select bank2
  4324     05B1  120E               	bcf	14,4	;volatile
  4325     05B2                     l2442:
  4326                           
  4327                           ;ADXL345.c: 132:     SPI1_BufferWrite(&msg, sizeof(fall_init) + 1);
  4328     05B2  3020               	movlw	low setupForFreefall@msg
  4329     05B3  00F0               	movwf	SPI1_BufferWrite@bufferData
  4330     05B4  3000               	movlw	high setupForFreefall@msg
  4331     05B5  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4332     05B6  3005               	movlw	5
  4333     05B7  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4334     05B8  3000               	movlw	0
  4335     05B9  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4336     05BA  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4337     05BD                     l2444:
  4338     05BD  0022               	movlb	2	; select bank2
  4339     05BE  160E               	bsf	14,4	;volatile
  4340     05BF                     l2446:
  4341                           
  4342                           ;ADXL345.c: 136:     msg.registerAddr = 0x2C;
  4343     05BF  302C               	movlw	44
  4344     05C0  0020               	movlb	0	; select bank0
  4345     05C1  00A0               	movwf	setupForFreefall@msg
  4346     05C2                     l2448:
  4347                           
  4348                           ;ADXL345.c: 137:     memset(msg.data, 0, sizeof(msg.data));
  4349     05C2  3021               	movlw	low (setupForFreefall@msg+1)
  4350     05C3  00F0               	movwf	memset@dest
  4351     05C4  3000               	movlw	high (setupForFreefall@msg+1)
  4352     05C5  00F1               	movwf	memset@dest+1
  4353     05C6  3000               	movlw	0
  4354     05C7  00F2               	movwf	memset@c
  4355     05C8  00F3               	movwf	memset@c+1
  4356     05C9  3019               	movlw	25
  4357     05CA  00F4               	movwf	memset@n
  4358     05CB  3000               	movlw	0
  4359     05CC  00F5               	movwf	memset@n+1
  4360     05CD  3182  22C2  3185   	fcall	_memset
  4361     05D0                     l2450:
  4362                           
  4363                           ;ADXL345.c: 138:     msg.data[0] = 0x17;
  4364     05D0  3017               	movlw	23
  4365     05D1  0020               	movlb	0	; select bank0
  4366     05D2  00A1               	movwf	setupForFreefall@msg+1
  4367     05D3                     l2452:
  4368     05D3  0022               	movlb	2	; select bank2
  4369     05D4  120E               	bcf	14,4	;volatile
  4370     05D5                     l2454:
  4371                           
  4372                           ;ADXL345.c: 140:     SPI1_BufferWrite(&msg, 2);
  4373     05D5  3020               	movlw	low setupForFreefall@msg
  4374     05D6  00F0               	movwf	SPI1_BufferWrite@bufferData
  4375     05D7  3000               	movlw	high setupForFreefall@msg
  4376     05D8  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4377     05D9  3002               	movlw	2
  4378     05DA  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4379     05DB  3000               	movlw	0
  4380     05DC  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4381     05DD  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4382     05E0                     l2456:
  4383     05E0  0022               	movlb	2	; select bank2
  4384     05E1  160E               	bsf	14,4	;volatile
  4385     05E2                     l2458:
  4386                           
  4387                           ;ADXL345.c: 144:     msg.registerAddr = 0x2E;
  4388     05E2  302E               	movlw	46
  4389     05E3  0020               	movlb	0	; select bank0
  4390     05E4  00A0               	movwf	setupForFreefall@msg
  4391     05E5                     l2460:
  4392                           
  4393                           ;ADXL345.c: 145:     memset(msg.data, 0, sizeof(msg.data));
  4394     05E5  3021               	movlw	low (setupForFreefall@msg+1)
  4395     05E6  00F0               	movwf	memset@dest
  4396     05E7  3000               	movlw	high (setupForFreefall@msg+1)
  4397     05E8  00F1               	movwf	memset@dest+1
  4398     05E9  3000               	movlw	0
  4399     05EA  00F2               	movwf	memset@c
  4400     05EB  00F3               	movwf	memset@c+1
  4401     05EC  3019               	movlw	25
  4402     05ED  00F4               	movwf	memset@n
  4403     05EE  3000               	movlw	0
  4404     05EF  00F5               	movwf	memset@n+1
  4405     05F0  3182  22C2  3185   	fcall	_memset
  4406     05F3                     l2462:
  4407                           
  4408                           ;ADXL345.c: 146:     msg.data[0] = 0x10;
  4409     05F3  3010               	movlw	16
  4410     05F4  0020               	movlb	0	; select bank0
  4411     05F5  00A1               	movwf	setupForFreefall@msg+1
  4412     05F6                     l2464:
  4413     05F6  0022               	movlb	2	; select bank2
  4414     05F7  120E               	bcf	14,4	;volatile
  4415     05F8                     l2466:
  4416                           
  4417                           ;ADXL345.c: 148:     SPI1_BufferWrite(&msg, 2);
  4418     05F8  3020               	movlw	low setupForFreefall@msg
  4419     05F9  00F0               	movwf	SPI1_BufferWrite@bufferData
  4420     05FA  3000               	movlw	high setupForFreefall@msg
  4421     05FB  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4422     05FC  3002               	movlw	2
  4423     05FD  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4424     05FE  3000               	movlw	0
  4425     05FF  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4426     0600  3183  234A  3185   	fcall	_SPI1_BufferWrite
  4427     0603                     l2468:
  4428     0603  0022               	movlb	2	; select bank2
  4429     0604  160E               	bsf	14,4	;volatile
  4430     0605                     l2470:
  4431     0605  120E               	bcf	14,4	;volatile
  4432     0606                     l2472:
  4433                           
  4434                           ;ADXL345.c: 153:     SPI1_ByteExchange(0x30);
  4435     0606  3030               	movlw	48
  4436     0607  00F0               	movwf	SPI1_ByteExchange@byteData
  4437     0608  3182  2288  3185   	fcall	_SPI1_ByteExchange
  4438     060B                     l2474:
  4439     060B  0022               	movlb	2	; select bank2
  4440     060C  160E               	bsf	14,4	;volatile
  4441     060D                     l2476:
  4442                           
  4443                           ;ADXL345.c: 156:     SPI1_Close();
  4444     060D  3182  2244  3185   	fcall	_SPI1_Close
  4445     0610                     l390:
  4446     0610  0008               	return
  4447     0611                     __end_of_setupForFreefall:
  4448                           
  4449                           	psect	text18
  4450     073F                     __ptext18:	
  4451 ;; *************** function _orientation_Up *****************
  4452 ;; Defined at:
  4453 ;;		line 255 in file "ADXL345.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  msg            26    8[BANK0 ] struct Message
  4458 ;;  acc_data        6    0[BANK0 ] char [6]
  4459 ;;  g_deltaZ        2   38[BANK0 ] short 
  4460 ;;  g_deltaY        2   36[BANK0 ] short 
  4461 ;;  g_deltaX        2   34[BANK0 ] short 
  4462 ;;  g_magnitude     2    6[BANK0 ] int 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      _Bool 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Totals:         2      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;Total ram usage:       42 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 2
  4479 ;; This function calls:
  4480 ;;		_SPI1_BufferRead
  4481 ;;		_SPI1_BufferWrite
  4482 ;;		_SPI1_ByteWrite
  4483 ;;		_SPI1_Close
  4484 ;;		_SPI1_Open
  4485 ;;		___wmul
  4486 ;; This function is called by:
  4487 ;;		_MotionEventHandler
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491     073F                     _orientation_Up:	
  4492                           ;psect for function _orientation_Up
  4493                           
  4494     073F                     l2586:	
  4495                           ;incstack = 0
  4496                           ; Regs used in _orientation_Up: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4497                           
  4498                           
  4499                           ;ADXL345.c: 256:     while (!SPI1_Open(ADXL345)) {
  4500     073F  2F43               	goto	l2590
  4501     0740                     l2588:
  4502                           
  4503                           ;ADXL345.c: 257:         SPI1_Close();
  4504     0740  3182  2244  3187   	fcall	_SPI1_Close
  4505     0743                     l2590:
  4506                           
  4507                           ;ADXL345.c: 256:     while (!SPI1_Open(ADXL345)) {
  4508     0743  01F6               	clrf	SPI1_Open@spiConfigIndex
  4509     0744  3184  2480  3187   	fcall	_SPI1_Open
  4510     0747  3A00               	xorlw	0
  4511     0748  1903               	skipnz
  4512     0749  2F4B               	goto	u891
  4513     074A  2F4C               	goto	u890
  4514     074B                     u891:
  4515     074B  2F40               	goto	l2588
  4516     074C                     u890:
  4517     074C                     l2592:
  4518                           
  4519                           ;ADXL345.c: 259:     int8_t acc_data[6] = {0};
  4520     074C  3020               	movlw	low orientation_Up@acc_data
  4521     074D  0086               	movwf	6
  4522     074E  3000               	movlw	high orientation_Up@acc_data
  4523     074F  0087               	movwf	7
  4524     0750  3006               	movlw	6
  4525     0751  00FA               	movwf	??_orientation_Up
  4526     0752  3000               	movlw	0
  4527     0753                     u900:
  4528     0753  001E               	movwi fsr1++
  4529     0754  0BFA               	decfsz	??_orientation_Up,f
  4530     0755  2F53               	goto	u900
  4531     0756                     l2594:
  4532                           
  4533                           ;ADXL345.c: 260:     int16_t g_deltaX, g_deltaY, g_deltaZ;;ADXL345.c: 262:     struct Me
      +                          ssage msg;;ADXL345.c: 263:     msg.registerAddr = 0x31;
  4534     0756  3031               	movlw	49
  4535     0757  0020               	movlb	0	; select bank0
  4536     0758  00A8               	movwf	orientation_Up@msg
  4537     0759                     l2596:
  4538                           
  4539                           ;ADXL345.c: 264:     msg.data[0] = 0x0C;
  4540     0759  300C               	movlw	12
  4541     075A  00A9               	movwf	orientation_Up@msg+1
  4542     075B                     l2598:
  4543     075B  0022               	movlb	2	; select bank2
  4544     075C  120E               	bcf	14,4	;volatile
  4545     075D                     l2600:
  4546                           
  4547                           ;ADXL345.c: 266:     SPI1_BufferWrite(&msg, 2);
  4548     075D  3028               	movlw	low orientation_Up@msg
  4549     075E  00F0               	movwf	SPI1_BufferWrite@bufferData
  4550     075F  3000               	movlw	high orientation_Up@msg
  4551     0760  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  4552     0761  3002               	movlw	2
  4553     0762  00F2               	movwf	SPI1_BufferWrite@bufferSize
  4554     0763  3000               	movlw	0
  4555     0764  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  4556     0765  3183  234A  3187   	fcall	_SPI1_BufferWrite
  4557     0768                     l2602:
  4558     0768  0022               	movlb	2	; select bank2
  4559     0769  160E               	bsf	14,4	;volatile
  4560     076A                     l2604:
  4561                           
  4562                           ;ADXL345.c: 269:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4563     076A  300D               	movlw	13
  4564     076B  00FA               	movwf	??_orientation_Up
  4565     076C  30FC               	movlw	252
  4566     076D                     u1317:
  4567     076D  0B89               	decfsz	9,f
  4568     076E  2F6D               	goto	u1317
  4569     076F  0BFA               	decfsz	??_orientation_Up,f
  4570     0770  2F6D               	goto	u1317
  4571     0771                     l2606:
  4572     0771  0022               	movlb	2	; select bank2
  4573     0772  120E               	bcf	14,4	;volatile
  4574     0773                     l2608:
  4575                           
  4576                           ;ADXL345.c: 273:     SPI1_ByteWrite(0x32);
  4577     0773  3032               	movlw	50
  4578     0774  00F0               	movwf	SPI1_ByteWrite@byteData
  4579     0775  3182  224A  3187   	fcall	_SPI1_ByteWrite
  4580     0778                     l2610:
  4581                           
  4582                           ;ADXL345.c: 274:     SPI1_BufferRead((uint8_t *)acc_data, sizeof(acc_data));
  4583     0778  3020               	movlw	(low (orientation_Up@acc_data| 0))& (0+255)
  4584     0779  00F0               	movwf	SPI1_BufferRead@bufferData
  4585     077A  3006               	movlw	6
  4586     077B  00F1               	movwf	SPI1_BufferRead@bufferSize
  4587     077C  3000               	movlw	0
  4588     077D  00F2               	movwf	SPI1_BufferRead@bufferSize+1
  4589     077E  3183  236A  3187   	fcall	_SPI1_BufferRead
  4590     0781                     l2612:
  4591     0781  0022               	movlb	2	; select bank2
  4592     0782  160E               	bsf	14,4	;volatile
  4593     0783                     l2614:
  4594                           
  4595                           ;ADXL345.c: 276:     SPI1_Close();
  4596     0783  3182  2244  3187   	fcall	_SPI1_Close
  4597     0786                     l2616:
  4598                           
  4599                           ;ADXL345.c: 279:     g_deltaX = (int8_t)acc_data[1] - 0x40;
  4600     0786  0020               	movlb	0	; select bank0
  4601     0787  0821               	movf	orientation_Up@acc_data+1,w
  4602     0788  00FA               	movwf	??_orientation_Up
  4603     0789  01FB               	clrf	??_orientation_Up+1
  4604     078A  1BFA               	btfsc	??_orientation_Up,7
  4605     078B  03FB               	decf	??_orientation_Up+1,f
  4606     078C  087A               	movf	??_orientation_Up,w
  4607     078D  3EC0               	addlw	192
  4608     078E  00C2               	movwf	orientation_Up@g_deltaX
  4609     078F  30FF               	movlw	255
  4610     0790  3D7B               	addwfc	??_orientation_Up+1,w
  4611     0791  00C3               	movwf	orientation_Up@g_deltaX+1
  4612     0792                     l2618:
  4613                           
  4614                           ;ADXL345.c: 280:     g_deltaY = (int8_t)acc_data[3];
  4615     0792  0823               	movf	orientation_Up@acc_data+3,w
  4616     0793  00C4               	movwf	orientation_Up@g_deltaY
  4617     0794  01C5               	clrf	orientation_Up@g_deltaY+1
  4618     0795  1BC4               	btfsc	orientation_Up@g_deltaY,7
  4619     0796  03C5               	decf	orientation_Up@g_deltaY+1,f
  4620     0797                     l2620:
  4621                           
  4622                           ;ADXL345.c: 281:     g_deltaZ = (int8_t)acc_data[5];
  4623     0797  0825               	movf	orientation_Up@acc_data+5,w
  4624     0798  00C6               	movwf	orientation_Up@g_deltaZ
  4625     0799  01C7               	clrf	orientation_Up@g_deltaZ+1
  4626     079A  1BC6               	btfsc	orientation_Up@g_deltaZ,7
  4627     079B  03C7               	decf	orientation_Up@g_deltaZ+1,f
  4628     079C                     l2622:
  4629                           
  4630                           ;ADXL345.c: 284:     g_deltaX *= g_deltaX;
  4631     079C  0843               	movf	orientation_Up@g_deltaX+1,w
  4632     079D  00F1               	movwf	___wmul@multiplier+1
  4633     079E  0842               	movf	orientation_Up@g_deltaX,w
  4634     079F  00F0               	movwf	___wmul@multiplier
  4635     07A0  0843               	movf	orientation_Up@g_deltaX+1,w
  4636     07A1  00F3               	movwf	___wmul@multiplicand+1
  4637     07A2  0842               	movf	orientation_Up@g_deltaX,w
  4638     07A3  00F2               	movwf	___wmul@multiplicand
  4639     07A4  3183  232B  3187   	fcall	___wmul
  4640     07A7  0871               	movf	?___wmul+1,w
  4641     07A8  0020               	movlb	0	; select bank0
  4642     07A9  00C3               	movwf	orientation_Up@g_deltaX+1
  4643     07AA  0870               	movf	?___wmul,w
  4644     07AB  00C2               	movwf	orientation_Up@g_deltaX
  4645     07AC                     l2624:
  4646                           
  4647                           ;ADXL345.c: 285:     g_deltaY *= g_deltaY;
  4648     07AC  0845               	movf	orientation_Up@g_deltaY+1,w
  4649     07AD  00F1               	movwf	___wmul@multiplier+1
  4650     07AE  0844               	movf	orientation_Up@g_deltaY,w
  4651     07AF  00F0               	movwf	___wmul@multiplier
  4652     07B0  0845               	movf	orientation_Up@g_deltaY+1,w
  4653     07B1  00F3               	movwf	___wmul@multiplicand+1
  4654     07B2  0844               	movf	orientation_Up@g_deltaY,w
  4655     07B3  00F2               	movwf	___wmul@multiplicand
  4656     07B4  3183  232B  3187   	fcall	___wmul
  4657     07B7  0871               	movf	?___wmul+1,w
  4658     07B8  0020               	movlb	0	; select bank0
  4659     07B9  00C5               	movwf	orientation_Up@g_deltaY+1
  4660     07BA  0870               	movf	?___wmul,w
  4661     07BB  00C4               	movwf	orientation_Up@g_deltaY
  4662     07BC                     l2626:
  4663                           
  4664                           ;ADXL345.c: 286:     g_deltaZ *= g_deltaZ;
  4665     07BC  0847               	movf	orientation_Up@g_deltaZ+1,w
  4666     07BD  00F1               	movwf	___wmul@multiplier+1
  4667     07BE  0846               	movf	orientation_Up@g_deltaZ,w
  4668     07BF  00F0               	movwf	___wmul@multiplier
  4669     07C0  0847               	movf	orientation_Up@g_deltaZ+1,w
  4670     07C1  00F3               	movwf	___wmul@multiplicand+1
  4671     07C2  0846               	movf	orientation_Up@g_deltaZ,w
  4672     07C3  00F2               	movwf	___wmul@multiplicand
  4673     07C4  3183  232B  3187   	fcall	___wmul
  4674     07C7  0871               	movf	?___wmul+1,w
  4675     07C8  0020               	movlb	0	; select bank0
  4676     07C9  00C7               	movwf	orientation_Up@g_deltaZ+1
  4677     07CA  0870               	movf	?___wmul,w
  4678     07CB  00C6               	movwf	orientation_Up@g_deltaZ
  4679     07CC                     l2628:
  4680                           
  4681                           ;ADXL345.c: 287:     int g_magnitude = g_deltaX + g_deltaY + g_deltaZ;
  4682     07CC  0844               	movf	orientation_Up@g_deltaY,w
  4683     07CD  0742               	addwf	orientation_Up@g_deltaX,w
  4684     07CE  00FA               	movwf	??_orientation_Up
  4685     07CF  0845               	movf	orientation_Up@g_deltaY+1,w
  4686     07D0  3D43               	addwfc	orientation_Up@g_deltaX+1,w
  4687     07D1  00FB               	movwf	??_orientation_Up+1
  4688     07D2  0846               	movf	orientation_Up@g_deltaZ,w
  4689     07D3  077A               	addwf	??_orientation_Up,w
  4690     07D4  00A6               	movwf	orientation_Up@g_magnitude
  4691     07D5  0847               	movf	orientation_Up@g_deltaZ+1,w
  4692     07D6  3D7B               	addwfc	??_orientation_Up+1,w
  4693     07D7  00A7               	movwf	orientation_Up@g_magnitude+1
  4694     07D8                     l2630:
  4695                           
  4696                           ;ADXL345.c: 288:     if (g_magnitude < acceleration_squared_threshold) {
  4697     07D8  3004               	movlw	4
  4698     07D9  0227               	subwf	orientation_Up@g_magnitude+1,w
  4699     07DA  30B0               	movlw	176
  4700     07DB  1903               	skipnz
  4701     07DC  0226               	subwf	orientation_Up@g_magnitude,w
  4702     07DD  1803               	skipnc
  4703     07DE  2FE0               	goto	u911
  4704     07DF  2FE1               	goto	u910
  4705     07E0                     u911:
  4706     07E0  2FE3               	goto	l2638
  4707     07E1                     u910:
  4708     07E1                     l2632:
  4709                           
  4710                           ;ADXL345.c: 289:         return 1;
  4711     07E1  3001               	movlw	1
  4712     07E2  2FE4               	goto	l459
  4713     07E3                     l2638:
  4714                           
  4715                           ;ADXL345.c: 291:         return 0;
  4716     07E3  3000               	movlw	0
  4717     07E4                     l459:
  4718     07E4  0008               	return
  4719     07E5                     __end_of_orientation_Up:
  4720                           
  4721                           	psect	text19
  4722     024A                     __ptext19:	
  4723 ;; *************** function _SPI1_ByteWrite *****************
  4724 ;; Defined at:
  4725 ;;		line 172 in file "mcc_generated_files/spi/src/mssp.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  byteData        1    0[COMMON] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        1 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_orientation_Up
  4749 ;;		_calibrate
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753     024A                     _SPI1_ByteWrite:	
  4754                           ;psect for function _SPI1_ByteWrite
  4755                           
  4756     024A                     l2336:	
  4757                           ;incstack = 0
  4758                           ; Regs used in _SPI1_ByteWrite: [wreg]
  4759                           
  4760                           
  4761                           ;mcc_generated_files/spi/src/mssp.c: 172: void SPI1_ByteWrite(uint8_t byteData);mcc_gene
      +                          rated_files/spi/src/mssp.c: 173: {;mcc_generated_files/spi/src/mssp.c: 174:     SSP1BUF 
      +                          = byteData;
  4762     024A  0870               	movf	SPI1_ByteWrite@byteData,w
  4763     024B  0024               	movlb	4	; select bank4
  4764     024C  0091               	movwf	17	;volatile
  4765     024D                     l94:
  4766     024D  0008               	return
  4767     024E                     __end_of_SPI1_ByteWrite:
  4768                           
  4769                           	psect	text20
  4770     036A                     __ptext20:	
  4771 ;; *************** function _SPI1_BufferRead *****************
  4772 ;; Defined at:
  4773 ;;		line 143 in file "mcc_generated_files/spi/src/mssp.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  bufferData      1    0[COMMON] PTR void 
  4776 ;;		 -> calibrate@acc_data(12), orientation_Up@acc_data(6), 
  4777 ;;  bufferSize      2    1[COMMON] unsigned int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  bufferInputS    2    3[COMMON] unsigned int 
  4780 ;;  bufferInput     1    5[COMMON] PTR unsigned char 
  4781 ;;		 -> calibrate@acc_data(12), orientation_Up@acc_data(6), 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;Total ram usage:        6 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_orientation_Up
  4801 ;;		_calibrate
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805     036A                     _SPI1_BufferRead:	
  4806                           ;psect for function _SPI1_BufferRead
  4807                           
  4808     036A                     l2318:	
  4809                           ;incstack = 0
  4810                           ; Regs used in _SPI1_BufferRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  4811                           
  4812                           
  4813                           ;mcc_generated_files/spi/src/mssp.c: 143: void SPI1_BufferRead(void *bufferData, size_t 
      +                          bufferSize);mcc_generated_files/spi/src/mssp.c: 144: {;mcc_generated_files/spi/src/mssp.
      +                          c: 145:     uint8_t *bufferInput = bufferData;
  4814     036A  0870               	movf	SPI1_BufferRead@bufferData,w
  4815     036B  00F5               	movwf	SPI1_BufferRead@bufferInput
  4816                           
  4817                           ;mcc_generated_files/spi/src/mssp.c: 146:     size_t bufferInputSize = bufferSize;
  4818     036C  0872               	movf	SPI1_BufferRead@bufferSize+1,w
  4819     036D  00F4               	movwf	SPI1_BufferRead@bufferInputSize+1
  4820     036E  0871               	movf	SPI1_BufferRead@bufferSize,w
  4821     036F  00F3               	movwf	SPI1_BufferRead@bufferInputSize
  4822                           
  4823                           ;mcc_generated_files/spi/src/mssp.c: 147:     while (0U != bufferInputSize)
  4824     0370  2B85               	goto	l2328
  4825     0371                     l2320:
  4826                           
  4827                           ;mcc_generated_files/spi/src/mssp.c: 148:     {;mcc_generated_files/spi/src/mssp.c: 149:
      +                                   SSP1BUF = 0x00;
  4828     0371  0024               	movlb	4	; select bank4
  4829     0372  0191               	clrf	17	;volatile
  4830     0373                     l81:	
  4831                           ;mcc_generated_files/spi/src/mssp.c: 151:         {;mcc_generated_files/spi/src/mssp.c: 
      +                          153:         }
  4832                           
  4833                           
  4834                           ;mcc_generated_files/spi/src/mssp.c: 150:         while (!PIR1bits.SSP1IF)
  4835     0373  0020               	movlb	0	; select bank0
  4836     0374  1D91               	btfss	17,3	;volatile
  4837     0375  2B77               	goto	u761
  4838     0376  2B78               	goto	u760
  4839     0377                     u761:
  4840     0377  2B73               	goto	l81
  4841     0378                     u760:
  4842     0378                     l83:
  4843                           
  4844                           ;mcc_generated_files/spi/src/mssp.c: 154:         PIR1bits.SSP1IF = 0;
  4845     0378  1191               	bcf	17,3	;volatile
  4846     0379                     l2322:
  4847                           
  4848                           ;mcc_generated_files/spi/src/mssp.c: 155:         *bufferInput = SSP1BUF;
  4849     0379  0875               	movf	SPI1_BufferRead@bufferInput,w
  4850     037A  0086               	movwf	6
  4851     037B  0187               	clrf	7
  4852     037C  0024               	movlb	4	; select bank4
  4853     037D  0811               	movf	17,w	;volatile
  4854     037E  0081               	movwf	1
  4855     037F                     l2324:
  4856                           
  4857                           ;mcc_generated_files/spi/src/mssp.c: 156:         bufferInput++;
  4858     037F  3001               	movlw	1
  4859     0380  07F5               	addwf	SPI1_BufferRead@bufferInput,f
  4860     0381                     l2326:
  4861                           
  4862                           ;mcc_generated_files/spi/src/mssp.c: 157:         bufferInputSize--;
  4863     0381  3001               	movlw	1
  4864     0382  02F3               	subwf	SPI1_BufferRead@bufferInputSize,f
  4865     0383  3000               	movlw	0
  4866     0384  3BF4               	subwfb	SPI1_BufferRead@bufferInputSize+1,f
  4867     0385                     l2328:
  4868                           
  4869                           ;mcc_generated_files/spi/src/mssp.c: 147:     while (0U != bufferInputSize)
  4870     0385  0873               	movf	SPI1_BufferRead@bufferInputSize,w
  4871     0386  0474               	iorwf	SPI1_BufferRead@bufferInputSize+1,w
  4872     0387  1D03               	btfss	3,2
  4873     0388  2B8A               	goto	u771
  4874     0389  2B8B               	goto	u770
  4875     038A                     u771:
  4876     038A  2B71               	goto	l2320
  4877     038B                     u770:
  4878     038B                     l85:
  4879     038B  0008               	return
  4880     038C                     __end_of_SPI1_BufferRead:
  4881                           
  4882                           	psect	text21
  4883     02D9                     __ptext21:	
  4884 ;; *************** function _ADXL345_ClearInterrupt *****************
  4885 ;; Defined at:
  4886 ;;		line 98 in file "ADXL345.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 2
  4907 ;; This function calls:
  4908 ;;		_SPI1_ByteExchange
  4909 ;;		_SPI1_Close
  4910 ;;		_SPI1_Open
  4911 ;; This function is called by:
  4912 ;;		_MotionEventHandler
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916     02D9                     _ADXL345_ClearInterrupt:	
  4917                           ;psect for function _ADXL345_ClearInterrupt
  4918                           
  4919     02D9                     l2412:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _ADXL345_ClearInterrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4922                           
  4923                           
  4924                           ;ADXL345.c: 99:     while (!SPI1_Open(ADXL345)) {
  4925     02D9  2ADD               	goto	l2416
  4926     02DA                     l2414:
  4927                           
  4928                           ;ADXL345.c: 100:         SPI1_Close();
  4929     02DA  3182  2244  3182   	fcall	_SPI1_Close
  4930     02DD                     l2416:
  4931                           
  4932                           ;ADXL345.c: 99:     while (!SPI1_Open(ADXL345)) {
  4933     02DD  01F6               	clrf	SPI1_Open@spiConfigIndex
  4934     02DE  3184  2480  3182   	fcall	_SPI1_Open
  4935     02E1  3A00               	xorlw	0
  4936     02E2  1903               	skipnz
  4937     02E3  2AE5               	goto	u851
  4938     02E4  2AE6               	goto	u850
  4939     02E5                     u851:
  4940     02E5  2ADA               	goto	l2414
  4941     02E6                     u850:
  4942     02E6                     l360:	
  4943                           ;ADXL345.c: 104:     do { LATCbits.LATC4 = 0; } while(0);
  4944                           
  4945     02E6  0022               	movlb	2	; select bank2
  4946     02E7  120E               	bcf	14,4	;volatile
  4947     02E8                     l2418:
  4948                           
  4949                           ;ADXL345.c: 105:     SPI1_ByteExchange(0x30);
  4950     02E8  3030               	movlw	48
  4951     02E9  00F0               	movwf	SPI1_ByteExchange@byteData
  4952     02EA  3182  2288  3182   	fcall	_SPI1_ByteExchange
  4953     02ED                     l2420:
  4954     02ED  0022               	movlb	2	; select bank2
  4955     02EE  160E               	bsf	14,4	;volatile
  4956     02EF                     l2422:
  4957                           
  4958                           ;ADXL345.c: 108:     SPI1_Close();
  4959     02EF  3182  2244  3182   	fcall	_SPI1_Close
  4960     02F2                     l364:
  4961     02F2  0008               	return
  4962     02F3                     __end_of_ADXL345_ClearInterrupt:
  4963                           
  4964                           	psect	text22
  4965     030D                     __ptext22:	
  4966 ;; *************** function _ADXL345_validation *****************
  4967 ;; Defined at:
  4968 ;;		line 57 in file "ADXL345.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  passed          1   10[COMMON] _Bool 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      _Bool 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:        1 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 2
  4989 ;; This function calls:
  4990 ;;		_SPI1_ByteExchange
  4991 ;;		_SPI1_Close
  4992 ;;		_SPI1_Open
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998     030D                     _ADXL345_validation:	
  4999                           ;psect for function _ADXL345_validation
  5000                           
  5001     030D                     l2656:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _ADXL345_validation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5004                           
  5005                           
  5006                           ;ADXL345.c: 58:     _Bool passed = 0;
  5007     030D  01FA               	clrf	ADXL345_validation@passed
  5008     030E                     l2658:
  5009                           
  5010                           ;ADXL345.c: 59:     if (SPI1_Open(ADXL345)) {
  5011     030E  01F6               	clrf	SPI1_Open@spiConfigIndex
  5012     030F  3184  2480  3183   	fcall	_SPI1_Open
  5013     0312  3A00               	xorlw	0
  5014     0313  1903               	skipnz
  5015     0314  2B16               	goto	u931
  5016     0315  2B17               	goto	u930
  5017     0316                     u931:
  5018     0316  2B26               	goto	l2664
  5019     0317                     u930:
  5020     0317                     l331:	
  5021                           ;ADXL345.c: 60:         do { LATCbits.LATC4 = 0; } while(0);
  5022                           
  5023     0317  0022               	movlb	2	; select bank2
  5024     0318  120E               	bcf	14,4	;volatile
  5025     0319                     l2660:
  5026                           
  5027                           ;ADXL345.c: 61:         if (SPI1_ByteExchange(0x00) == 0xE5) {
  5028     0319  01F0               	clrf	SPI1_ByteExchange@byteData
  5029     031A  3182  2288  3183   	fcall	_SPI1_ByteExchange
  5030     031D  3AE5               	xorlw	229
  5031     031E  1D03               	skipz
  5032     031F  2B21               	goto	u941
  5033     0320  2B22               	goto	u940
  5034     0321                     u941:
  5035     0321  2B24               	goto	l334
  5036     0322                     u940:
  5037     0322                     l2662:
  5038                           
  5039                           ;ADXL345.c: 62:             passed = 1;
  5040     0322  3001               	movlw	1
  5041     0323  00FA               	movwf	ADXL345_validation@passed
  5042     0324                     l334:	
  5043                           ;ADXL345.c: 64:         do { LATCbits.LATC4 = 1; } while(0);
  5044                           
  5045     0324  0022               	movlb	2	; select bank2
  5046     0325  160E               	bsf	14,4	;volatile
  5047     0326                     l2664:
  5048                           
  5049                           ;ADXL345.c: 66:     SPI1_Close();
  5050     0326  3182  2244  3183   	fcall	_SPI1_Close
  5051     0329                     l2666:
  5052                           
  5053                           ;ADXL345.c: 67:     return passed;
  5054     0329  087A               	movf	ADXL345_validation@passed,w
  5055     032A                     l336:
  5056     032A  0008               	return
  5057     032B                     __end_of_ADXL345_validation:
  5058                           
  5059                           	psect	text23
  5060     0288                     __ptext23:	
  5061 ;; *************** function _SPI1_ByteExchange *****************
  5062 ;; Defined at:
  5063 ;;		line 161 in file "mcc_generated_files/spi/src/mssp.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  byteData        1    0[COMMON] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      unsigned char 
  5070 ;; Registers used:
  5071 ;;		wreg
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;Total ram usage:        1 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_ADXL345_validation
  5087 ;;		_ADXL345_ClearInterrupt
  5088 ;;		_setupForFreefall
  5089 ;;		_setupForImpact
  5090 ;;		_setupForInactivity
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094     0288                     _SPI1_ByteExchange:	
  5095                           ;psect for function _SPI1_ByteExchange
  5096                           
  5097     0288                     l2330:	
  5098                           ;incstack = 0
  5099                           ; Regs used in _SPI1_ByteExchange: [wreg]
  5100                           
  5101                           
  5102                           ;mcc_generated_files/spi/src/mssp.c: 161: uint8_t SPI1_ByteExchange(uint8_t byteData);mc
      +                          c_generated_files/spi/src/mssp.c: 162: {;mcc_generated_files/spi/src/mssp.c: 163:     SS
      +                          P1BUF = byteData;
  5103     0288  0870               	movf	SPI1_ByteExchange@byteData,w
  5104     0289  0024               	movlb	4	; select bank4
  5105     028A  0091               	movwf	17	;volatile
  5106     028B                     l88:	
  5107                           ;mcc_generated_files/spi/src/mssp.c: 165:     {;mcc_generated_files/spi/src/mssp.c: 167:
      +                               }
  5108                           
  5109                           
  5110                           ;mcc_generated_files/spi/src/mssp.c: 164:     while (!PIR1bits.SSP1IF)
  5111     028B  0020               	movlb	0	; select bank0
  5112     028C  1D91               	btfss	17,3	;volatile
  5113     028D  2A8F               	goto	u781
  5114     028E  2A90               	goto	u780
  5115     028F                     u781:
  5116     028F  2A8B               	goto	l88
  5117     0290                     u780:
  5118     0290                     l90:
  5119                           
  5120                           ;mcc_generated_files/spi/src/mssp.c: 168:     PIR1bits.SSP1IF = 0;
  5121     0290  1191               	bcf	17,3	;volatile
  5122     0291                     l2332:
  5123                           
  5124                           ;mcc_generated_files/spi/src/mssp.c: 169:     return SSP1BUF;
  5125     0291  0024               	movlb	4	; select bank4
  5126     0292  0811               	movf	17,w	;volatile
  5127     0293                     l91:
  5128     0293  0008               	return
  5129     0294                     __end_of_SPI1_ByteExchange:
  5130                           
  5131                           	psect	text24
  5132     041D                     __ptext24:	
  5133 ;; *************** function _ADXL345_init *****************
  5134 ;; Defined at:
  5135 ;;		line 33 in file "ADXL345.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  msg            26    0[BANK0 ] struct Message
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      _Bool 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;Total ram usage:       26 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 2
  5156 ;; This function calls:
  5157 ;;		_SPI1_BufferWrite
  5158 ;;		_SPI1_Close
  5159 ;;		_SPI1_Open
  5160 ;;		_memcpy
  5161 ;;		_memset
  5162 ;; This function is called by:
  5163 ;;		_main
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167     041D                     _ADXL345_init:	
  5168                           ;psect for function _ADXL345_init
  5169                           
  5170     041D                     l2670:	
  5171                           ;incstack = 0
  5172                           ; Regs used in _ADXL345_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5173                           
  5174                           
  5175                           ;ADXL345.c: 34:     while (!SPI1_Open(ADXL345)) {
  5176     041D  2C21               	goto	l2674
  5177     041E                     l2672:
  5178                           
  5179                           ;ADXL345.c: 35:         SPI1_Close();
  5180     041E  3182  2244  3184   	fcall	_SPI1_Close
  5181     0421                     l2674:
  5182                           
  5183                           ;ADXL345.c: 34:     while (!SPI1_Open(ADXL345)) {
  5184     0421  01F6               	clrf	SPI1_Open@spiConfigIndex
  5185     0422  3184  2480  3184   	fcall	_SPI1_Open
  5186     0425  3A00               	xorlw	0
  5187     0426  1903               	skipnz
  5188     0427  2C29               	goto	u951
  5189     0428  2C2A               	goto	u950
  5190     0429                     u951:
  5191     0429  2C1E               	goto	l2672
  5192     042A                     u950:
  5193     042A                     l318:
  5194                           
  5195                           ;ADXL345.c: 38:     struct Message msg;;ADXL345.c: 39:     msg.registerAddr = 0x24;
  5196     042A  3024               	movlw	36
  5197     042B  0020               	movlb	0	; select bank0
  5198     042C  00A0               	movwf	ADXL345_init@msg
  5199     042D                     l2676:
  5200                           
  5201                           ;ADXL345.c: 40:     memset(msg.data, 0, sizeof(msg.data));
  5202     042D  3021               	movlw	low (ADXL345_init@msg+1)
  5203     042E  00F0               	movwf	memset@dest
  5204     042F  3000               	movlw	high (ADXL345_init@msg+1)
  5205     0430  00F1               	movwf	memset@dest+1
  5206     0431  3000               	movlw	0
  5207     0432  00F2               	movwf	memset@c
  5208     0433  00F3               	movwf	memset@c+1
  5209     0434  3019               	movlw	25
  5210     0435  00F4               	movwf	memset@n
  5211     0436  3000               	movlw	0
  5212     0437  00F5               	movwf	memset@n+1
  5213     0438  3182  22C2  3184   	fcall	_memset
  5214     043B                     l2678:
  5215                           
  5216                           ;ADXL345.c: 41:     memcpy(msg.data, ADXL345_init_settings, sizeof(ADXL345_init_settings
      +                          ));
  5217     043B  3021               	movlw	low (ADXL345_init@msg+1)
  5218     043C  00F0               	movwf	memcpy@d1
  5219     043D  3000               	movlw	high (ADXL345_init@msg+1)
  5220     043E  00F1               	movwf	memcpy@d1+1
  5221     043F  3039               	movlw	low (_ADXL345_init_settings| (0+32768))
  5222     0440  00F2               	movwf	memcpy@s1
  5223     0441  3088               	movlw	high (_ADXL345_init_settings| (0+32768))
  5224     0442  00F3               	movwf	memcpy@s1+1
  5225     0443  300C               	movlw	12
  5226     0444  00F4               	movwf	memcpy@n
  5227     0445  3000               	movlw	0
  5228     0446  00F5               	movwf	memcpy@n+1
  5229     0447  3183  238C  3184   	fcall	_memcpy
  5230     044A                     l2680:
  5231     044A  0022               	movlb	2	; select bank2
  5232     044B  120E               	bcf	14,4	;volatile
  5233     044C                     l2682:
  5234                           
  5235                           ;ADXL345.c: 43:     SPI1_BufferWrite(&msg, sizeof(ADXL345_init_settings) + 1);
  5236     044C  3020               	movlw	low ADXL345_init@msg
  5237     044D  00F0               	movwf	SPI1_BufferWrite@bufferData
  5238     044E  3000               	movlw	high ADXL345_init@msg
  5239     044F  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  5240     0450  300D               	movlw	13
  5241     0451  00F2               	movwf	SPI1_BufferWrite@bufferSize
  5242     0452  3000               	movlw	0
  5243     0453  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  5244     0454  3183  234A  3184   	fcall	_SPI1_BufferWrite
  5245     0457                     l2684:
  5246     0457  0022               	movlb	2	; select bank2
  5247     0458  160E               	bsf	14,4	;volatile
  5248     0459                     l2686:
  5249                           
  5250                           ;ADXL345.c: 46:     msg.registerAddr = 0x31;
  5251     0459  3031               	movlw	49
  5252     045A  0020               	movlb	0	; select bank0
  5253     045B  00A0               	movwf	ADXL345_init@msg
  5254     045C                     l2688:
  5255                           
  5256                           ;ADXL345.c: 47:     memset(msg.data, 0, sizeof(msg.data));
  5257     045C  3021               	movlw	low (ADXL345_init@msg+1)
  5258     045D  00F0               	movwf	memset@dest
  5259     045E  3000               	movlw	high (ADXL345_init@msg+1)
  5260     045F  00F1               	movwf	memset@dest+1
  5261     0460  3000               	movlw	0
  5262     0461  00F2               	movwf	memset@c
  5263     0462  00F3               	movwf	memset@c+1
  5264     0463  3019               	movlw	25
  5265     0464  00F4               	movwf	memset@n
  5266     0465  3000               	movlw	0
  5267     0466  00F5               	movwf	memset@n+1
  5268     0467  3182  22C2  3184   	fcall	_memset
  5269     046A                     l2690:
  5270                           
  5271                           ;ADXL345.c: 48:     msg.data[0] = 0x0B;
  5272     046A  300B               	movlw	11
  5273     046B  0020               	movlb	0	; select bank0
  5274     046C  00A1               	movwf	ADXL345_init@msg+1
  5275     046D                     l2692:
  5276     046D  0022               	movlb	2	; select bank2
  5277     046E  120E               	bcf	14,4	;volatile
  5278     046F                     l2694:
  5279                           
  5280                           ;ADXL345.c: 50:     SPI1_BufferWrite(&msg, 2);
  5281     046F  3020               	movlw	low ADXL345_init@msg
  5282     0470  00F0               	movwf	SPI1_BufferWrite@bufferData
  5283     0471  3000               	movlw	high ADXL345_init@msg
  5284     0472  00F1               	movwf	SPI1_BufferWrite@bufferData+1
  5285     0473  3002               	movlw	2
  5286     0474  00F2               	movwf	SPI1_BufferWrite@bufferSize
  5287     0475  3000               	movlw	0
  5288     0476  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  5289     0477  3183  234A  3184   	fcall	_SPI1_BufferWrite
  5290     047A                     l2696:
  5291     047A  0022               	movlb	2	; select bank2
  5292     047B  160E               	bsf	14,4	;volatile
  5293     047C                     l2698:
  5294                           
  5295                           ;ADXL345.c: 53:     SPI1_Close();
  5296     047C  3182  2244  3184   	fcall	_SPI1_Close
  5297     047F                     l327:
  5298     047F  0008               	return
  5299     0480                     __end_of_ADXL345_init:
  5300                           
  5301                           	psect	text25
  5302     02C2                     __ptext25:	
  5303 ;; *************** function _memset *****************
  5304 ;; Defined at:
  5305 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  dest            2    0[COMMON] PTR void 
  5308 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), saveOffsets@msg(26), 
  5309 ;;		 -> ADXL345_init@msg(26), 
  5310 ;;  c               2    2[COMMON] int 
  5311 ;;  n               2    4[COMMON] unsigned int 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  p               1    6[COMMON] PTR unsigned char 
  5314 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), saveOffsets@msg(26), 
  5315 ;;		 -> ADXL345_init@msg(26), 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  2    0[COMMON] PTR void 
  5318 ;; Registers used:
  5319 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5325 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;Total ram usage:        7 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_ADXL345_init
  5335 ;;		_setupForFreefall
  5336 ;;		_setupForImpact
  5337 ;;		_setupForInactivity
  5338 ;;		_saveOffsets
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342     02C2                     _memset:	
  5343                           ;psect for function _memset
  5344                           
  5345     02C2                     l2348:	
  5346                           ;incstack = 0
  5347                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5348                           
  5349     02C2  0870               	movf	memset@dest,w
  5350     02C3  00F6               	movwf	memset@p
  5351     02C4  2ACC               	goto	l2354
  5352     02C5                     l2350:
  5353     02C5  0876               	movf	memset@p,w
  5354     02C6  0086               	movwf	6
  5355     02C7  0187               	clrf	7
  5356     02C8  0872               	movf	memset@c,w
  5357     02C9  0081               	movwf	1
  5358     02CA                     l2352:
  5359     02CA  3001               	movlw	1
  5360     02CB  07F6               	addwf	memset@p,f
  5361     02CC                     l2354:
  5362     02CC  3001               	movlw	1
  5363     02CD  02F4               	subwf	memset@n,f
  5364     02CE  3000               	movlw	0
  5365     02CF  3BF5               	subwfb	memset@n+1,f
  5366     02D0  0A74               	incf	memset@n,w
  5367     02D1  1D03               	skipz
  5368     02D2  2AD7               	goto	u821
  5369     02D3  0A75               	incf	memset@n+1,w
  5370     02D4  1D03               	btfss	3,2
  5371     02D5  2AD7               	goto	u821
  5372     02D6  2AD8               	goto	u820
  5373     02D7                     u821:
  5374     02D7  2AC5               	goto	l2350
  5375     02D8                     u820:
  5376     02D8                     l1294:
  5377     02D8  0008               	return
  5378     02D9                     __end_of_memset:
  5379                           
  5380                           	psect	text26
  5381     038C                     __ptext26:	
  5382 ;; *************** function _memcpy *****************
  5383 ;; Defined at:
  5384 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  d1              2    0[COMMON] PTR void 
  5387 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), ADXL345_init@msg(26), 
  5388 ;;  s1              2    2[COMMON] PTR const void 
  5389 ;;		 -> no_motion_init(4), impact_init(4), fall_init(4), ADXL345_init_settings(12), 
  5390 ;;  n               2    4[COMMON] unsigned int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  s               2    6[COMMON] PTR const unsigned char 
  5393 ;;		 -> no_motion_init(4), impact_init(4), fall_init(4), ADXL345_init_settings(12), 
  5394 ;;  d               1    9[COMMON] PTR unsigned char 
  5395 ;;		 -> setupForInactivity@msg(26), setupForImpact@msg(26), setupForFreefall@msg(26), ADXL345_init@msg(26), 
  5396 ;;  tmp             1    8[COMMON] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    0[COMMON] PTR void 
  5399 ;; Registers used:
  5400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5406 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;Total ram usage:       10 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_ADXL345_init
  5416 ;;		_setupForFreefall
  5417 ;;		_setupForImpact
  5418 ;;		_setupForInactivity
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422     038C                     _memcpy:	
  5423                           ;psect for function _memcpy
  5424                           
  5425     038C                     l2356:	
  5426                           ;incstack = 0
  5427                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5428                           
  5429     038C  0873               	movf	memcpy@s1+1,w
  5430     038D  00F7               	movwf	memcpy@s+1
  5431     038E  0872               	movf	memcpy@s1,w
  5432     038F  00F6               	movwf	memcpy@s
  5433     0390                     l2358:
  5434     0390  0870               	movf	memcpy@d1,w
  5435     0391  00F9               	movwf	memcpy@d
  5436     0392  2BA4               	goto	l2368
  5437     0393                     l2360:
  5438     0393  0876               	movf	memcpy@s,w
  5439     0394  0084               	movwf	4
  5440     0395  0877               	movf	memcpy@s+1,w
  5441     0396  0085               	movwf	5
  5442     0397  0800               	movf	0,w	;code access
  5443     0398  00F8               	movwf	memcpy@tmp
  5444     0399                     l2362:
  5445     0399  3001               	movlw	1
  5446     039A  07F6               	addwf	memcpy@s,f
  5447     039B  3000               	movlw	0
  5448     039C  3DF7               	addwfc	memcpy@s+1,f
  5449     039D                     l2364:
  5450     039D  0879               	movf	memcpy@d,w
  5451     039E  0086               	movwf	6
  5452     039F  0187               	clrf	7
  5453     03A0  0878               	movf	memcpy@tmp,w
  5454     03A1  0081               	movwf	1
  5455     03A2                     l2366:
  5456     03A2  3001               	movlw	1
  5457     03A3  07F9               	addwf	memcpy@d,f
  5458     03A4                     l2368:
  5459     03A4  3001               	movlw	1
  5460     03A5  02F4               	subwf	memcpy@n,f
  5461     03A6  3000               	movlw	0
  5462     03A7  3BF5               	subwfb	memcpy@n+1,f
  5463     03A8  0A74               	incf	memcpy@n,w
  5464     03A9  1D03               	skipz
  5465     03AA  2BAF               	goto	u831
  5466     03AB  0A75               	incf	memcpy@n+1,w
  5467     03AC  1D03               	btfss	3,2
  5468     03AD  2BAF               	goto	u831
  5469     03AE  2BB0               	goto	u830
  5470     03AF                     u831:
  5471     03AF  2B93               	goto	l2360
  5472     03B0                     u830:
  5473     03B0                     l1288:
  5474     03B0  0008               	return
  5475     03B1                     __end_of_memcpy:
  5476                           
  5477                           	psect	text27
  5478     0480                     __ptext27:	
  5479 ;; *************** function _SPI1_Open *****************
  5480 ;; Defined at:
  5481 ;;		line 82 in file "mcc_generated_files/spi/src/mssp.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  returnValue     1    9[COMMON] _Bool 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      _Bool 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:        4 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 1
  5502 ;; This function calls:
  5503 ;;		___wmul
  5504 ;; This function is called by:
  5505 ;;		_ADXL345_init
  5506 ;;		_ADXL345_validation
  5507 ;;		_ADXL345_ClearInterrupt
  5508 ;;		_setupForFreefall
  5509 ;;		_setupForImpact
  5510 ;;		_setupForInactivity
  5511 ;;		_orientation_Up
  5512 ;;		_saveOffsets
  5513 ;;		_calibrate
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517     0480                     _SPI1_Open:	
  5518                           ;psect for function _SPI1_Open
  5519                           
  5520     0480                     l2288:	
  5521                           ;incstack = 0
  5522                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5523                           
  5524     0480                     l2290:
  5525                           
  5526                           ;mcc_generated_files/spi/src/mssp.c: 85:     if (SSP1CON1bits.SSPEN == 0)
  5527     0480  0024               	movlb	4	; select bank4
  5528     0481  1A95               	btfsc	21,5	;volatile
  5529     0482  2C84               	goto	u731
  5530     0483  2C85               	goto	u730
  5531     0484                     u731:
  5532     0484  2CE9               	goto	l2298
  5533     0485                     u730:
  5534     0485                     l2292:
  5535                           
  5536                           ;mcc_generated_files/spi/src/mssp.c: 86:     {;mcc_generated_files/spi/src/mssp.c: 87:  
      +                                 SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  5537     0485  0876               	movf	SPI1_Open@spiConfigIndex,w
  5538     0486  00F7               	movwf	??_SPI1_Open
  5539     0487  01F8               	clrf	??_SPI1_Open+1
  5540     0488  0877               	movf	??_SPI1_Open,w
  5541     0489  00F0               	movwf	___wmul@multiplier
  5542     048A  0878               	movf	??_SPI1_Open+1,w
  5543     048B  00F1               	movwf	___wmul@multiplier+1
  5544     048C  3005               	movlw	5
  5545     048D  00F2               	movwf	___wmul@multiplicand
  5546     048E  3000               	movlw	0
  5547     048F  00F3               	movwf	___wmul@multiplicand+1
  5548     0490  3183  232B  3184   	fcall	___wmul
  5549     0493  301C               	movlw	low _spi1_configuration
  5550     0494  0770               	addwf	?___wmul,w
  5551     0495  0084               	movwf	4
  5552     0496  3008               	movlw	high _spi1_configuration
  5553     0497  3D71               	addwfc	?___wmul+1,w
  5554     0498  3880               	iorlw	128
  5555     0499  0085               	movwf	5
  5556     049A  0800               	movf	0,w	;code access
  5557     049B  0024               	movlb	4	; select bank4
  5558     049C  0094               	movwf	20	;volatile
  5559                           
  5560                           ;mcc_generated_files/spi/src/mssp.c: 88:         SSP1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
  5561     049D  0876               	movf	SPI1_Open@spiConfigIndex,w
  5562     049E  00F7               	movwf	??_SPI1_Open
  5563     049F  01F8               	clrf	??_SPI1_Open+1
  5564     04A0  0877               	movf	??_SPI1_Open,w
  5565     04A1  00F0               	movwf	___wmul@multiplier
  5566     04A2  0878               	movf	??_SPI1_Open+1,w
  5567     04A3  00F1               	movwf	___wmul@multiplier+1
  5568     04A4  3005               	movlw	5
  5569     04A5  00F2               	movwf	___wmul@multiplicand
  5570     04A6  3000               	movlw	0
  5571     04A7  00F3               	movwf	___wmul@multiplicand+1
  5572     04A8  3183  232B  3184   	fcall	___wmul
  5573     04AB  301D               	movlw	low (_spi1_configuration+1)
  5574     04AC  0770               	addwf	?___wmul,w
  5575     04AD  0084               	movwf	4
  5576     04AE  3008               	movlw	high (_spi1_configuration+1)
  5577     04AF  3D71               	addwfc	?___wmul+1,w
  5578     04B0  3880               	iorlw	128
  5579     04B1  0085               	movwf	5
  5580     04B2  0800               	movf	0,w	;code access
  5581     04B3  0024               	movlb	4	; select bank4
  5582     04B4  0095               	movwf	21	;volatile
  5583                           
  5584                           ;mcc_generated_files/spi/src/mssp.c: 89:         SSP1CON3 = spi1_configuration[spiConfig
      +                          Index].con3;
  5585     04B5  0876               	movf	SPI1_Open@spiConfigIndex,w
  5586     04B6  00F7               	movwf	??_SPI1_Open
  5587     04B7  01F8               	clrf	??_SPI1_Open+1
  5588     04B8  0877               	movf	??_SPI1_Open,w
  5589     04B9  00F0               	movwf	___wmul@multiplier
  5590     04BA  0878               	movf	??_SPI1_Open+1,w
  5591     04BB  00F1               	movwf	___wmul@multiplier+1
  5592     04BC  3005               	movlw	5
  5593     04BD  00F2               	movwf	___wmul@multiplicand
  5594     04BE  3000               	movlw	0
  5595     04BF  00F3               	movwf	___wmul@multiplicand+1
  5596     04C0  3183  232B  3184   	fcall	___wmul
  5597     04C3  301E               	movlw	low (_spi1_configuration+2)
  5598     04C4  0770               	addwf	?___wmul,w
  5599     04C5  0084               	movwf	4
  5600     04C6  3008               	movlw	high (_spi1_configuration+2)
  5601     04C7  3D71               	addwfc	?___wmul+1,w
  5602     04C8  3880               	iorlw	128
  5603     04C9  0085               	movwf	5
  5604     04CA  0800               	movf	0,w	;code access
  5605     04CB  0024               	movlb	4	; select bank4
  5606     04CC  0097               	movwf	23	;volatile
  5607                           
  5608                           ;mcc_generated_files/spi/src/mssp.c: 90:         SSP1ADD = spi1_configuration[spiConfigI
      +                          ndex].baud;
  5609     04CD  0876               	movf	SPI1_Open@spiConfigIndex,w
  5610     04CE  00F7               	movwf	??_SPI1_Open
  5611     04CF  01F8               	clrf	??_SPI1_Open+1
  5612     04D0  0877               	movf	??_SPI1_Open,w
  5613     04D1  00F0               	movwf	___wmul@multiplier
  5614     04D2  0878               	movf	??_SPI1_Open+1,w
  5615     04D3  00F1               	movwf	___wmul@multiplier+1
  5616     04D4  3005               	movlw	5
  5617     04D5  00F2               	movwf	___wmul@multiplicand
  5618     04D6  3000               	movlw	0
  5619     04D7  00F3               	movwf	___wmul@multiplicand+1
  5620     04D8  3183  232B  3184   	fcall	___wmul
  5621     04DB  301F               	movlw	low (_spi1_configuration+3)
  5622     04DC  0770               	addwf	?___wmul,w
  5623     04DD  0084               	movwf	4
  5624     04DE  3008               	movlw	high (_spi1_configuration+3)
  5625     04DF  3D71               	addwfc	?___wmul+1,w
  5626     04E0  3880               	iorlw	128
  5627     04E1  0085               	movwf	5
  5628     04E2  0800               	movf	0,w	;code access
  5629     04E3  0024               	movlb	4	; select bank4
  5630     04E4  0092               	movwf	18	;volatile
  5631     04E5                     l2294:
  5632                           
  5633                           ;mcc_generated_files/spi/src/mssp.c: 92:         SSP1CON1bits.SSPEN = 1;
  5634     04E5  1695               	bsf	21,5	;volatile
  5635     04E6                     l2296:
  5636                           
  5637                           ;mcc_generated_files/spi/src/mssp.c: 94:         returnValue = 1;
  5638     04E6  3001               	movlw	1
  5639     04E7  00F9               	movwf	SPI1_Open@returnValue
  5640                           
  5641                           ;mcc_generated_files/spi/src/mssp.c: 95:     }
  5642     04E8  2CEA               	goto	l2300
  5643     04E9                     l2298:
  5644                           
  5645                           ;mcc_generated_files/spi/src/mssp.c: 97:     {;mcc_generated_files/spi/src/mssp.c: 98:  
      +                                 returnValue = 0;
  5646     04E9  01F9               	clrf	SPI1_Open@returnValue
  5647     04EA                     l2300:
  5648                           
  5649                           ;mcc_generated_files/spi/src/mssp.c: 100:     return returnValue;
  5650     04EA  0879               	movf	SPI1_Open@returnValue,w
  5651     04EB                     l55:
  5652     04EB  0008               	return
  5653     04EC                     __end_of_SPI1_Open:
  5654                           
  5655                           	psect	text28
  5656     032B                     __ptext28:	
  5657 ;; *************** function ___wmul *****************
  5658 ;; Defined at:
  5659 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  multiplier      2    0[COMMON] unsigned int 
  5662 ;;  multiplicand    2    2[COMMON] unsigned int 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  product         2    4[COMMON] unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  2    0[COMMON] unsigned int 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        6 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_SPI1_Open
  5684 ;;		_orientation_Up
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688     032B                     ___wmul:	
  5689                           ;psect for function ___wmul
  5690                           
  5691     032B                     l2274:	
  5692                           ;incstack = 0
  5693                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5694                           
  5695     032B  01F4               	clrf	___wmul@product
  5696     032C  01F5               	clrf	___wmul@product+1
  5697     032D                     l2276:
  5698     032D  1C70               	btfss	___wmul@multiplier,0
  5699     032E  2B30               	goto	u691
  5700     032F  2B31               	goto	u690
  5701     0330                     u691:
  5702     0330  2B35               	goto	l826
  5703     0331                     u690:
  5704     0331                     l2278:
  5705     0331  0872               	movf	___wmul@multiplicand,w
  5706     0332  07F4               	addwf	___wmul@product,f
  5707     0333  0873               	movf	___wmul@multiplicand+1,w
  5708     0334  3DF5               	addwfc	___wmul@product+1,f
  5709     0335                     l826:
  5710     0335  3001               	movlw	1
  5711     0336                     u705:
  5712     0336  35F2               	lslf	___wmul@multiplicand,f
  5713     0337  0DF3               	rlf	___wmul@multiplicand+1,f
  5714     0338  0B89               	decfsz	9,f
  5715     0339  2B36               	goto	u705
  5716     033A                     l2280:
  5717     033A  3001               	movlw	1
  5718     033B                     u715:
  5719     033B  36F1               	lsrf	___wmul@multiplier+1,f
  5720     033C  0CF0               	rrf	___wmul@multiplier,f
  5721     033D  0B89               	decfsz	9,f
  5722     033E  2B3B               	goto	u715
  5723     033F                     l2282:
  5724     033F  0870               	movf	___wmul@multiplier,w
  5725     0340  0471               	iorwf	___wmul@multiplier+1,w
  5726     0341  1D03               	btfss	3,2
  5727     0342  2B44               	goto	u721
  5728     0343  2B45               	goto	u720
  5729     0344                     u721:
  5730     0344  2B2D               	goto	l2276
  5731     0345                     u720:
  5732     0345                     l2284:
  5733     0345  0875               	movf	___wmul@product+1,w
  5734     0346  00F1               	movwf	?___wmul+1
  5735     0347  0874               	movf	___wmul@product,w
  5736     0348  00F0               	movwf	?___wmul
  5737     0349                     l828:
  5738     0349  0008               	return
  5739     034A                     __end_of___wmul:
  5740                           
  5741                           	psect	text29
  5742     0244                     __ptext29:	
  5743 ;; *************** function _SPI1_Close *****************
  5744 ;; Defined at:
  5745 ;;		line 103 in file "mcc_generated_files/spi/src/mssp.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		None
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_ADXL345_init
  5769 ;;		_ADXL345_validation
  5770 ;;		_ADXL345_ClearInterrupt
  5771 ;;		_setupForFreefall
  5772 ;;		_setupForImpact
  5773 ;;		_setupForInactivity
  5774 ;;		_orientation_Up
  5775 ;;		_saveOffsets
  5776 ;;		_calibrate
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780     0244                     _SPI1_Close:	
  5781                           ;psect for function _SPI1_Close
  5782                           
  5783     0244                     l2304:	
  5784                           ;incstack = 0
  5785                           ; Regs used in _SPI1_Close: []
  5786                           
  5787                           
  5788                           ;mcc_generated_files/spi/src/mssp.c: 105:     SSP1CON1bits.SSPEN = 0;
  5789     0244  0024               	movlb	4	; select bank4
  5790     0245  1295               	bcf	21,5	;volatile
  5791     0246                     l58:
  5792     0246  0008               	return
  5793     0247                     __end_of_SPI1_Close:
  5794                           
  5795                           	psect	text30
  5796     034A                     __ptext30:	
  5797 ;; *************** function _SPI1_BufferWrite *****************
  5798 ;; Defined at:
  5799 ;;		line 126 in file "mcc_generated_files/spi/src/mssp.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  bufferData      2    0[COMMON] PTR void 
  5802 ;;		 -> calibrate@msg(26), orientation_Up@msg(26), setupForInactivity@msg(26), setupForImpact@msg(26), 
  5803 ;;		 -> setupForFreefall@msg(26), saveOffsets@msg(26), ADXL345_init@msg(26), 
  5804 ;;  bufferSize      2    2[COMMON] unsigned int 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  bufferInputS    2    4[COMMON] unsigned int 
  5807 ;;  bufferInput     1    6[COMMON] PTR unsigned char 
  5808 ;;		 -> calibrate@msg(26), orientation_Up@msg(26), setupForInactivity@msg(26), setupForImpact@msg(26), 
  5809 ;;		 -> setupForFreefall@msg(26), saveOffsets@msg(26), ADXL345_init@msg(26), 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:        7 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_ADXL345_init
  5829 ;;		_setupForFreefall
  5830 ;;		_setupForImpact
  5831 ;;		_setupForInactivity
  5832 ;;		_orientation_Up
  5833 ;;		_saveOffsets
  5834 ;;		_calibrate
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838     034A                     _SPI1_BufferWrite:	
  5839                           ;psect for function _SPI1_BufferWrite
  5840                           
  5841     034A                     l2306:	
  5842                           ;incstack = 0
  5843                           ; Regs used in _SPI1_BufferWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
  5844                           
  5845                           
  5846                           ;mcc_generated_files/spi/src/mssp.c: 126: void SPI1_BufferWrite(void *bufferData, size_t
      +                           bufferSize);mcc_generated_files/spi/src/mssp.c: 127: {;mcc_generated_files/spi/src/mssp
      +                          .c: 128:     uint8_t *bufferInput = bufferData;
  5847     034A  0870               	movf	SPI1_BufferWrite@bufferData,w
  5848     034B  00F6               	movwf	SPI1_BufferWrite@bufferInput
  5849     034C                     l2308:
  5850                           
  5851                           ;mcc_generated_files/spi/src/mssp.c: 129:     size_t bufferInputSize = bufferSize;
  5852     034C  0873               	movf	SPI1_BufferWrite@bufferSize+1,w
  5853     034D  00F5               	movwf	SPI1_BufferWrite@bufferInputSize+1
  5854     034E  0872               	movf	SPI1_BufferWrite@bufferSize,w
  5855     034F  00F4               	movwf	SPI1_BufferWrite@bufferInputSize
  5856                           
  5857                           ;mcc_generated_files/spi/src/mssp.c: 130:     while (0U != bufferInputSize)
  5858     0350  2B63               	goto	l2316
  5859     0351                     l2310:
  5860                           
  5861                           ;mcc_generated_files/spi/src/mssp.c: 131:     {;mcc_generated_files/spi/src/mssp.c: 132:
      +                                   SSP1BUF = *bufferInput;
  5862     0351  0876               	movf	SPI1_BufferWrite@bufferInput,w
  5863     0352  0086               	movwf	6
  5864     0353  0187               	clrf	7
  5865     0354  0801               	movf	1,w
  5866     0355  0024               	movlb	4	; select bank4
  5867     0356  0091               	movwf	17	;volatile
  5868     0357                     l72:	
  5869                           ;mcc_generated_files/spi/src/mssp.c: 134:         {;mcc_generated_files/spi/src/mssp.c: 
      +                          136:         }
  5870                           
  5871                           
  5872                           ;mcc_generated_files/spi/src/mssp.c: 133:         while (!PIR1bits.SSP1IF)
  5873     0357  0020               	movlb	0	; select bank0
  5874     0358  1D91               	btfss	17,3	;volatile
  5875     0359  2B5B               	goto	u741
  5876     035A  2B5C               	goto	u740
  5877     035B                     u741:
  5878     035B  2B57               	goto	l72
  5879     035C                     u740:
  5880     035C                     l74:
  5881                           
  5882                           ;mcc_generated_files/spi/src/mssp.c: 137:         PIR1bits.SSP1IF = 0;
  5883     035C  1191               	bcf	17,3	;volatile
  5884     035D                     l2312:
  5885                           
  5886                           ;mcc_generated_files/spi/src/mssp.c: 138:         bufferInput++;
  5887     035D  3001               	movlw	1
  5888     035E  07F6               	addwf	SPI1_BufferWrite@bufferInput,f
  5889     035F                     l2314:
  5890                           
  5891                           ;mcc_generated_files/spi/src/mssp.c: 139:         bufferInputSize--;
  5892     035F  3001               	movlw	1
  5893     0360  02F4               	subwf	SPI1_BufferWrite@bufferInputSize,f
  5894     0361  3000               	movlw	0
  5895     0362  3BF5               	subwfb	SPI1_BufferWrite@bufferInputSize+1,f
  5896     0363                     l2316:
  5897                           
  5898                           ;mcc_generated_files/spi/src/mssp.c: 130:     while (0U != bufferInputSize)
  5899     0363  0874               	movf	SPI1_BufferWrite@bufferInputSize,w
  5900     0364  0475               	iorwf	SPI1_BufferWrite@bufferInputSize+1,w
  5901     0365  1D03               	btfss	3,2
  5902     0366  2B68               	goto	u751
  5903     0367  2B69               	goto	u750
  5904     0368                     u751:
  5905     0368  2B51               	goto	l2310
  5906     0369                     u750:
  5907     0369                     l76:
  5908     0369  0008               	return
  5909     036A                     __end_of_SPI1_BufferWrite:
  5910     0002                     ___latbits      equ	2
  5911     007E                     btemp           set	126	;btemp
  5912     007E                     wtemp0          set	126
  5913     22F0                     __pbssBIGRAM    equ	8944
  5914                           
  5915                           	psect	config
  5916                           
  5917                           ;Config register CONFIG1 @ 0x8007
  5918                           ;	Oscillator Selection
  5919                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5920                           ;	Watchdog Timer Enable
  5921                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5922                           ;	Power-up Timer Enable
  5923                           ;	PWRTE = ON, PWRT enabled
  5924                           ;	MCLR Pin Function Select
  5925                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5926                           ;	Flash Program Memory Code Protection
  5927                           ;	CP = OFF, Program memory code protection is disabled
  5928                           ;	Data Memory Code Protection
  5929                           ;	CPD = OFF, Data memory code protection is disabled
  5930                           ;	Brown-out Reset Enable
  5931                           ;	BOREN = ON, Brown-out Reset enabled
  5932                           ;	Clock Out Enable
  5933                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5934                           ;	Internal/External Switchover
  5935                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5936                           ;	Fail-Safe Clock Monitor Enable
  5937                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5938     8007                     	org	32775
  5939     8007  3FCC               	dw	16332
  5940                           
  5941                           ;Config register CONFIG2 @ 0x8008
  5942                           ;	Flash Memory Self-Write Protection
  5943                           ;	WRT = OFF, Write protection off
  5944                           ;	PLL Enable
  5945                           ;	PLLEN = OFF, 4x PLL disabled
  5946                           ;	Stack Overflow/Underflow Reset Enable
  5947                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5948                           ;	Brown-out Reset Voltage Selection
  5949                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5950                           ;	In-Circuit Debugger Mode
  5951                           ;	DEBUG = 0x1, unprogrammed default
  5952                           ;	Low-Voltage Programming Enable
  5953                           ;	LVP = ON, Low-voltage programming enabled
  5954     8008                     	org	32776
  5955     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    83
    Data        0
    BSS         25
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     46      73
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    eeprom_interface$ByteRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteRead(), 

    eeprom_interface$ByteWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteWrite(), 

    eeprom_interface$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NVM_IsBusy(), 

    eeprom_interface$PageRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$PageWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$SequentialRead	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    eeprom_interface$SequentialWrite	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    memcpy@d1	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 12
		 -> ADXL345_init_settings(CODE[12]), fall_init(CODE[4]), impact_init(CODE[4]), no_motion_init(CODE[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 12
		 -> ADXL345_init_settings(CODE[12]), fall_init(CODE[4]), impact_init(CODE[4]), no_motion_init(CODE[4]), 

    memset@dest	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    memset@p	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    MotionEventHandler@state	PTR enum E2687 size(1) Largest target is 1
		 -> main@current_state(BANK0[1]), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(1) Largest target is 12
		 -> calibrate@acc_data(COMMON[12]), orientation_Up@acc_data(BANK0[6]), 

    S38$6$0	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), calibrate@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), 
		 -> setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S930$4$1	PTR unsigned char  size(2) Largest target is 0

    S930$5$1	PTR unsigned char  size(2) Largest target is 0

    S930EEPROM_INTERFACE$ByteRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteRead(), 

    S930EEPROM_INTERFACE$ByteWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> EEPROM_ByteWrite(), 

    S930EEPROM_INTERFACE$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NVM_IsBusy(), 

    S930EEPROM_INTERFACE$PageRead	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S930EEPROM_INTERFACE$PageWrite	PTR FTN(unsigned long ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S930EEPROM_INTERFACE$SequentialRead	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S930EEPROM_INTERFACE$SequentialWrite	PTR FTN(unsigned long ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    sp__memcpy	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    sp__memset	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), 
		 -> setupForInactivity@msg(BANK0[26]), 

    SPI1_BufferRead@bufferData	PTR void  size(1) Largest target is 12
		 -> calibrate@acc_data(COMMON[12]), orientation_Up@acc_data(BANK0[6]), 

    SPI1_BufferRead@bufferInput	PTR unsigned char  size(1) Largest target is 12
		 -> calibrate@acc_data(COMMON[12]), orientation_Up@acc_data(BANK0[6]), 

    SPI1_BufferWrite@bufferData	PTR void  size(2) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), calibrate@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), 
		 -> setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    SPI1_BufferWrite@bufferInput	PTR unsigned char  size(1) Largest target is 26
		 -> ADXL345_init@msg(BANK0[26]), calibrate@msg(BANK0[26]), orientation_Up@msg(BANK0[26]), saveOffsets@msg(BANK0[26]), 
		 -> setupForFreefall@msg(BANK0[26]), setupForImpact@msg(BANK0[26]), setupForInactivity@msg(BANK0[26]), 

    SPI1_Host$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Host$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Host$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Host$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Host$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Host$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Host$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Host$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Host$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Host$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Host$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Host$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SW1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), NULL(), 

    SW1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SW1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_SW1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _SW1_ISR->_SW1_DefaultInterruptHandler
    _MotionEventHandler->_orientation_Up
    _setupForInactivity->_SPI1_Open
    _setupForInactivity->_memcpy
    _setupForImpact->_SPI1_Open
    _setupForImpact->_memcpy
    _setupForFreefall->_SPI1_Open
    _setupForFreefall->_memcpy
    _orientation_Up->_SPI1_Open
    _ADXL345_ClearInterrupt->_SPI1_Open
    _ADXL345_validation->_SPI1_Open
    _ADXL345_init->_SPI1_Open
    _ADXL345_init->_memcpy
    _SPI1_Open->___wmul

Critical Paths under _main in BANK0

    _main->_MotionEventHandler
    _MotionEventHandler->_orientation_Up

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5202
                                             43 BANK0      3     3      0
                       _ADXL345_init
                 _ADXL345_validation
                 _MotionEventHandler
                    _PIN_MANAGER_IOC
                    _SPI1_Initialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      23
            _SW1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _SW1_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_IOC                                      0     0      0       0
                            _SW1_ISR
 ---------------------------------------------------------------------------------
 (2) _SW1_ISR                                              0     0      0       0
                                NULL *
        _SW1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (3) _SW1_DefaultInterruptHandler                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MotionEventHandler                                   3     2      1    4052
                                             40 BANK0      3     2      1
             _ADXL345_ClearInterrupt
                     _orientation_Up
                   _setupForFreefall
                     _setupForImpact
                 _setupForInactivity
 ---------------------------------------------------------------------------------
 (2) _setupForInactivity                                  26    26      0     881
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _setupForImpact                                      26    26      0     881
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _setupForFreefall                                    26    26      0     881
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _orientation_Up                                      42    42      0     952
                                             10 COMMON     2     2      0
                                              0 BANK0     40    40      0
                    _SPI1_BufferRead
                   _SPI1_BufferWrite
                     _SPI1_ByteWrite
                         _SPI1_Close
                          _SPI1_Open
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SPI1_ByteWrite                                       1     0      1      25
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _SPI1_BufferRead                                      6     3      3      98
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _ADXL345_ClearInterrupt                               0     0      0     258
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (1) _ADXL345_validation                                   1     1      0     282
                                             10 COMMON     1     1      0
                  _SPI1_ByteExchange
                         _SPI1_Close
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_ByteExchange                                    1     0      1      30
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADXL345_init                                        26    26      0     782
                                              0 BANK0     26    26      0
                   _SPI1_BufferWrite
                         _SPI1_Close
                          _SPI1_Open
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     1      6     132
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     155
                                              0 COMMON    10     4      6
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            4     3      1     228
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     106
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI1_BufferWrite                                     7     3      4     126
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADXL345_init
     _SPI1_BufferWrite
     _SPI1_Close
     _SPI1_Open
       ___wmul
     _memcpy
     _memset
   _ADXL345_validation
     _SPI1_ByteExchange
     _SPI1_Close
     _SPI1_Open
   _MotionEventHandler
     _ADXL345_ClearInterrupt
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
     _orientation_Up
       _SPI1_BufferRead
       _SPI1_BufferWrite
       _SPI1_ByteWrite
       _SPI1_Close
       _SPI1_Open
       ___wmul
     _setupForFreefall
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
     _setupForImpact
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
     _setupForInactivity
       _SPI1_BufferWrite
       _SPI1_ByteExchange
       _SPI1_Close
       _SPI1_Open
       _memcpy
       _memset
   _PIN_MANAGER_IOC
     _SW1_ISR
       NULL(Fake) *
       _SW1_DefaultInterruptHandler *
   _SPI1_Initialize
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
       _SW1_SetInterruptHandler
     _SPI1_Initialize
     _WDT_Initialize

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     12      14    100.0%
BANK0               80     46      73     91.2%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               32      0       0      0.0%
BANK10               0      0       0      0.0%
BANK11               0      0       0      0.0%
BANK12               0      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      87      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 05 13:26:54 2025

                      _SPI1_ByteExchange 0288                                       l55 04EB  
                                     l47 027C                                       l72 0357  
                                     l81 0373                                       l74 035C  
                                     l58 0246                                       l90 0290  
                                     l91 0293                                       l83 0378  
                                     l76 0369                                       l85 038B  
                                     l94 024D                                       l88 028B  
                     ?_SPI1_ByteExchange 0070                      ___wmul@multiplicand 0072  
                                    l123 0287                                      l204 030C  
                                    l213 0269                                      l133 025B  
                                    l233 0255                                      l331 0317  
                                    l228 02C1                                      l318 042A  
                                    l334 0324                                      l422 06B5  
                                    l270 03F9                                      l327 047F  
                                    l191 0272                                      l336 032A  
                                    l360 02E6                                      l416 06A7  
                                    l265 03E7                                      l370 0587  
                                    l442 073E                                      l610 0249  
                                    l195 02AE                                      l187 03D5  
                                    l364 02F2                                      l541 04F6  
                                    l390 0610                                      l198 0261  
                                    l551 0532                                      l544 0506  
                                    l570 0579                                      l459 07E4  
                                    l396 061E                                      l548 0526  
                                    l826 0335                                      l828 0349  
                                    l597 0251                                      u720 0345  
                                    u800 030A                                      u721 0344  
                                    u705 0336                                      u801 0307  
                                    u730 0485                                      u715 033B  
                                    u731 0484                                      u740 035C  
                                    u820 02D8                                      u900 0753  
                                    u741 035B                                      u821 02D7  
                                    u750 0369                                      u830 03B0  
                                    u910 07E1                                      u814 030C  
                                    u751 0368                                      u831 03AF  
                                    u911 07E0                                      u760 0378  
                                    u840 02A7                                      u920 026F  
                                    u761 0377                                      u841 02A6  
                                    u921 026E                                      u690 0331  
                                    u930 0317                                      u850 02E6  
                                    u770 038B                                      u691 0330  
                                    u931 0316                                      u851 02E5  
                                    u771 038A                                      u780 0290  
                                    u940 0322                                      u860 0587  
                                    u781 028F                                      u941 0321  
                                    u861 0586                                      u950 042A  
                                    u870 061E                                      u790 0300  
                                    u951 0429                                      u871 061D  
                                    u791 02FF                                      u880 06B5  
                                    u960 04FA                                      u881 06B4  
                                    u961 04F9                                      u890 074C  
                                    u970 050A                                      u891 074B  
                                    u971 0509                                      u980 051D  
                                    u981 051C                                      u990 052A  
                                    u991 0529                      ??_SPI1_ByteExchange 0071  
                      orientation_Up@msg 0028                                      wreg 0009  
                                   l2300 04EA                                     l2310 0351  
                                   l2312 035D                                     l2304 0244  
                                   l2320 0371                                     l2400 02A7  
                                   l2314 035F                                     l2306 034A  
                                   l2330 0288                                     l2322 0379  
                                   l2402 02AC                                     l2410 0252  
                                   l2316 0363                                     l2308 034C  
                                   l2332 0291                                     l2420 02ED  
                                   l2412 02D9                                     l2324 037F  
                                   l2500 0656                                     l2404 0262  
                                   l2340 025C                                     l1294 02D8  
                                   l2350 02C5                                     l2422 02EF  
                                   l2414 02DA                                     l2326 0381  
                                   l2318 036A                                     l2430 0589  
                                   l2510 0677                                     l2502 0659  
                                   l2342 02F3                                     l2406 0265  
                                   l2280 033A                                     l1288 03B0  
                                   l2360 0393                                     l2352 02CA  
                                   l2416 02DD                                     l2328 0385  
                                   l2336 024A                                     l2600 075D  
                                   l2440 05B0                                     l2432 058E  
                                   l2424 057A                                     l2520 068F  
                                   l2512 0679                                     l2504 0667  
                                   l3056 0568                                     l2344 02FB  
                                   l2408 024E                                     l2282 033F  
                                   l2274 032B                                     l2290 0480  
                                   l2362 0399                                     l2354 02CC  
                                   l2418 02E8                                     l2610 0778  
                                   l2602 0768                                     l2450 05D0  
                                   l2442 05B2                                     l2434 0590  
                                   l2426 057B                                     l2530 06A4  
                                   l2522 069A                                     l2514 067C  
                                   l2506 066A                                     l2346 0300  
                                   l2338 0256                                     l2370 0247  
                                   l2284 0345                                     l2276 032D  
                                   l2292 0485                                     l2364 039D  
                                   l2356 038C                                     l2348 02C2  
                                   l2620 0797                                     l2612 0781  
                                   l2604 076A                                     l2460 05E5  
                                   l2452 05D3                                     l2444 05BD  
                                   l2436 0593                                     l2428 057E  
                                   l2524 069C                                     l2516 068A  
                                   l2508 066C                                     l2540 06BC  
                                   l2532 06A8                                     l2380 03B1  
                                   l2372 0273                                     l2278 0331  
                                   l2294 04E5                                     l2366 03A2  
                                   l2358 0390                                     l2630 07D8  
                                   l2622 079C                                     l2614 0783  
                                   l2606 0771                                     l2470 0605  
                                   l2462 05F3                                     l2454 05D5  
                                   l2446 05BF                                     l2438 05A1  
                                   l2526 069D                                     l2518 068D  
                                   l2550 06E0                                     l2542 06BE  
                                   l2534 06A9                                     l2710 050A  
                                   l2702 04EC                                     l2390 03C1  
                                   l2382 03B3                                     l2374 0277  
                                   l2296 04E6                                     l2288 0480  
                                   l2368 03A4                                     l2632 07E1  
                                   l2624 07AC                                     l2616 0786  
                                   l2608 0773                                     l2472 0606  
                                   l2464 05F6                                     l2456 05E0  
                                   l2448 05C2                                     l2528 06A2  
                                   l2480 0612                                     l2560 0701  
                                   l2552 06EB                                     l2544 06C1  
                                   l2536 06AC                                     l2720 052A  
                                   l2712 050D                                     l2704 04FA  
                                   l2376 027D                                     l2392 03CA  
                                   l2384 03B5                                     l2298 04E9  
                                   l2626 07BC                                     l2618 0792  
                                   l2474 060B                                     l2466 05F8  
                                   l2458 05E2                                     l2490 062A  
                                   l2482 0615                                     l2570 0721  
                                   l2562 0703                                     l2554 06ED  
                                   l2546 06CF                                     l2538 06B7  
                                   l2730 0543                                     l2722 0534  
                                   l2714 0514                                     l2706 04FD  
                                   l2642 026A                                     l2378 0280  
                                   l2394 03CD                                     l2386 03B8  
                                   l2650 02B5                                     l2660 0319  
                                   l2628 07CC                                     l2476 060D  
                                   l2468 0603                                     l2492 0638  
                                   l2484 0620                                     l2580 0734  
                                   l2572 0724                                     l2564 070E  
                                   l2556 06F0                                     l2548 06DE  
                                   l2732 0546                                     l2724 053D  
                                   l2716 051D                                     l2708 0500  
                                   l2644 026F                                     l2396 03D4  
                                   l2388 03BD                                     l2652 02B8  
                                   l2670 041D                                     l2662 0322  
                                   l2638 07E3                                     l2590 0743  
                                   l2494 0647                                     l2486 0625  
                                   l2478 0611                                     l2582 0739  
                                   l2574 0726                                     l2566 0710  
                                   l2558 06FE                                     l2726 053F  
                                   l2718 0520                                     l2398 02A0  
                                   l2654 02BB                                     l2646 02AF  
                                   l2680 044A                                     l2672 041E  
                                   l2664 0326                                     l2656 030D  
                                   l2592 074C                                     l2496 0649  
                                   l2488 0627                                     l2584 073B  
                                   l2576 0731                                     l2568 0713  
                                   l2744 0557                                     l2728 0542  
                                   l2648 02B2                                     l2690 046A  
                                   l2682 044C                                     l2674 0421  
                                   l2666 0329                                     l2658 030E  
                                   l2594 0756                                     l2586 073F  
                                   l2498 0654                                     l2578 0733  
                                   l2738 054D                                     l2850 03DE  
                                   l2692 046D                                     l2684 0457  
                                   l2676 042D                                     l2596 0759  
                                   l2588 0740                                     l2860 0408  
                                   l2852 03DF                                     l2844 03D6  
                                   l2694 046F                                     l2686 0459  
                                   l2678 043B                                     l2598 075B  
                                   l2766 055D                                     l2870 0419  
                                   l2862 040A                                     l2854 03E9  
                                   l2846 03D9                                     l2696 047A  
                                   l2688 045C                                     l2864 040D  
                                   l2856 03F6                                     l2848 03DC  
                                   l2698 047C                                     l2866 040F  
                                   l2858 03FB                                     l2868 0412  
                                   u1000 0532                                     u1001 0531  
                                   u1010 0556                                     u1011 0555  
                                   u1040 03E7                                     u1041 03E6  
                                   u1307 0538                                     u1317 076D  
                                   _LATA 010C                                     _LATC 010E  
                                   u1277 03EF                                     u1287 0401  
                                   u1297 02F6                                     _LWLO 0CAD  
                                   _WPUA 020C                                     _WPUC 020E  
                      main@current_state 004D                          __end_of_SW1_ISR 02AF  
                __end_of_NVM_StatusClear 024A                                     _main 03D6  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                             _unlockKeyLow 007D  
            _INT_DefaultInterruptHandler 0000                                     start 0002  
              __end_of_SPI1_ByteExchange 0294          __end_of_INT_SetInterruptHandler 025C  
                         _no_motion_init 0845                              ?_SPI1_Close 0070  
                                  ?_main 0070                                    _IOCAF 0393  
                                  _IOCAN 0392                                    _IOCAP 0391  
                                  _TRISA 008C                                    _TRISC 008E  
                    orientation_Up@F2709 005A                             _ADXL345_init 041D  
                __end_of_PIN_MANAGER_IOC 0273                           _WDT_Initialize 0252  
                _SW1_SetInterruptHandler 025C                            _unlockKeyHigh 007C  
                                  pclath 000A          SPI1_BufferWrite@bufferInputSize 0074  
                                  status 0003                                    wtemp0 007E  
                       ??_setupForImpact 007A                       _ADXL345_validation 030D  
                        __initialization 07E5                             __end_of_main 041D  
                    ?_ADXL345_validation 0070                   __end_of_no_motion_init 0849  
         SPI1_BufferRead@bufferInputSize 0073                                   ??_main 004B  
                 __end_of_WDT_Initialize 0256                                ??_SW1_ISR 0071  
                   ??_ADXL345_validation 007A                                   _EEADRH 0192  
                                 _EEADRL 0191                                   _EEDATH 0194  
                                 _EEDATL 0193                                   _EECON2 0196  
               __end_of_SPI1_BufferWrite 036A                                   _ANSELA 018C  
                                 _ANSELC 018E                                   _BORCON 0116  
                                 _INLVLA 038C                                   _INLVLC 038E  
                                 _OSCCON 0099                                   _WDTCON 0097  
                       ?_NVM_StatusClear 0070                         _eeprom_interface 082B  
                      __end_of_SPI1_Host 081C                        __end_of_SPI1_Open 04EC  
                                 ___wmul 032B                 __end_of_setupForFreefall 0611  
                                 _memcpy 038C                                   _memset 02C2  
                      ?_CLOCK_Initialize 0070                        ??_SPI1_BufferRead 0073  
               ??_ADXL345_ClearInterrupt 007A                       ??_CLOCK_Initialize 0070  
                        ?_WDT_Initialize 0070                ??_SW1_SetInterruptHandler 0072  
                      setupForImpact@msg 0020  SW1_SetInterruptHandler@InterruptHandler 0070  
INT_SetInterruptHandler@InterruptHandler 0070                         ?_PIN_MANAGER_IOC 0070  
                         _SPI1_IsRxReady 0000                           _SPI1_IsTxReady 0000  
                       ??_NVM_Initialize 0070                        _SYSTEM_Initialize 02AF  
                __end_of__initialization 07FD                           _SPI1_ByteWrite 024A  
                     ?_SYSTEM_Initialize 0070            __end_of_ADXL345_init_settings 0845  
                         __pcstackCOMMON 0070                           calibrate@F2720 004E  
                    ??_SYSTEM_Initialize 0072                        ??_SPI1_Initialize 0070  
                     _spi1_configuration 081C                           _OPTION_REGbits 0095  
                             _dataBuffer 22F0                __end_of_SYSTEM_Initialize 02C2  
                             __pbssBANK0 004E                   __end_of_SPI1_ByteWrite 024E  
             __end_of_MotionEventHandler 057A              SPI1_BufferWrite@bufferInput 0076  
                             __pmaintext 03D6                                  ?___wmul 0070  
              SPI1_BufferRead@bufferData 0070                SPI1_BufferRead@bufferSize 0071  
                                ?_memcpy 0070                                  ?_memset 0070  
                                _APFCON0 011D                             ??_SPI1_Close 0070  
                                _OSCTUNE 0098                                  _SSP1ADD 0212  
                                _SSP1BUF 0211                                  _SW1_ISR 02A0  
                        ?_SPI1_ByteWrite 0070                        __end_of_fall_init 0851  
                MotionEventHandler@state 0048                       __end_of_SPI1_Close 0247  
                                __ptext1 02AF                                  __ptext2 0252  
                                __ptext3 0273                                  __ptext4 03B1  
                                __ptext5 025C                                  __ptext6 024E  
                                __ptext7 0247                                  __ptext8 027D  
                                __ptext9 0256                 __end_of_eeprom_interface 0839  
               ??_PIN_MANAGER_Initialize 0072                                _IOCAFbits 0393  
                _INT_SetInterruptHandler 0256                                  clrloop0 0295  
                   end_of_initialization 07FD                        ?_SPI1_BufferWrite 0070  
           ?_SW1_DefaultInterruptHandler 0070                                  memcpy@d 0079  
                                memcpy@n 0074                                  memcpy@s 0076  
                                memset@c 0072                                  memset@n 0074  
                                memset@p 0076                       ??_SPI1_BufferWrite 0074  
                        _EEPROM_ByteRead 0000                   _ADXL345_ClearInterrupt 02D9  
                        _SPI1_BufferRead 036A                               _timer_20ms 0062  
                              _SPI1_Host 0800                        ?_setupForFreefall 0070  
                              _SPI1_Open 0480                         ??_WDT_Initialize 0070  
                     ??_setupForFreefall 007A                                _PORTAbits 000C  
                    _SPI1_BufferExchange 0000            ??_SW1_DefaultInterruptHandler 0070  
                        _SPI1_Initialize 0273             __end_of_INTERRUPT_Initialize 0288  
                             ?_SPI1_Open 0076                           __end_of___wmul 034A  
                         __end_of_memcpy 03B1                           __end_of_memset 02D9  
              ??_INT_SetInterruptHandler 0072                      start_initialization 07E5  
                __end_of_SPI1_BufferRead 038C                    setupForInactivity@msg 0020  
                        ADXL345_init@msg 0020                    _ADXL345_init_settings 0839  
                               ??___wmul 0074                       _MotionEventHandler 04EC  
                         _orientation_Up 073F               __end_of_setupForInactivity 073F  
                               ??_memcpy 0076                                 ??_memset 0076  
                             memset@dest 0070                 ?_SW1_SetInterruptHandler 0070  
                    ?_MotionEventHandler 0048                            _SPI1_ByteRead 0000  
                            __pbssBIGRAM 22F0                            ?_ADXL345_init 0070  
                            __pbssCOMMON 007C                                ___latbits 0002  
                          __pcstackBANK0 0020                         ??_SPI1_ByteWrite 0071  
                               ?_SW1_ISR 0070                  __end_of_SPI1_Initialize 027D  
                   ??_MotionEventHandler 0049                                __pnvBANK0 0065  
             SPI1_BufferWrite@bufferData 0070                   _PIN_MANAGER_Initialize 03B1  
             SPI1_BufferWrite@bufferSize 0072                   __end_of_orientation_Up 07E5  
                   SPI1_Open@returnValue 0079                                _fall_init 084D  
                            ??_SPI1_Open 0077               SPI1_BufferRead@bufferInput 0075  
                         ??_ADXL345_init 007A                        ??_NVM_StatusClear 0070  
                    __end_of_impact_init 084D                     _INTERRUPT_Initialize 027D  
                ?_ADXL345_ClearInterrupt 0070                         _CLOCK_Initialize 0262  
                         ___wmul@product 0074                         ?_SPI1_BufferRead 0070  
                               _LATAbits 010C                                 _LATCbits 010E  
                              clear_ram0 0294                                 _PIE1bits 0091  
                               _PIR1bits 0011                          ?_orientation_Up 0070  
                   _SW1_InterruptHandler 0065                                 _SSP1CON1 0215  
                               _SSP1CON3 0217          __end_of_SW1_SetInterruptHandler 0262  
                               _SSP1STAT 0214                        ??_PIN_MANAGER_IOC 0071  
                         _setupForImpact 0611                        _SPI1_Deinitialize 0000  
                      ___wmul@multiplier 0070                         ?_SPI1_Initialize 0070  
         __end_of_ADXL345_ClearInterrupt 02F3                    ?_INTERRUPT_Initialize 0070  
                             _EECON1bits 0195                                memcpy@tmp 0078  
                 __end_of_setupForImpact 06A8                              _impact_init 0849  
             __end_of_ADXL345_validation 032B                                 __ptext10 0262  
                               __ptext11 026A                                 __ptext20 036A  
                               __ptext12 02A0                                 __ptext21 02D9  
                               __ptext13 02F3                                 __ptext30 034A  
                               __ptext22 030D                                 __ptext14 04EC  
                               __ptext23 0288                                 __ptext15 06A8  
                               __ptext24 041D                                 __ptext16 0611  
                               __ptext25 02C2                                 __ptext17 057A  
                               __ptext26 038C                                 __ptext18 073F  
                               __ptext27 0480                                 __ptext19 024A  
                               __ptext28 032B                                 __ptext29 0244  
                           _SSP1CON1bits 0215                   SPI1_ByteWrite@byteData 0070  
 __end_of_acceleration_squared_threshold 0853           _acceleration_squared_threshold 0851  
                    setupForFreefall@msg 0020                     __end_of_ADXL345_init 0480  
                         _NVM_Initialize 024E                          ?_setupForImpact 0070  
                             _INTCONbits 000B                                 memcpy@d1 0070  
                               memcpy@s1 0072                     _INT_InterruptHandler 0067  
                 orientation_Up@acc_data 0020                       _setupForInactivity 06A8  
                 ??_INTERRUPT_Initialize 0072      __end_of_SW1_DefaultInterruptHandler 030D  
            _SW1_DefaultInterruptHandler 02F3             _orientation_check_timer_20ms 0060  
                 orientation_Up@g_deltaX 0042                   orientation_Up@g_deltaY 0044  
                 orientation_Up@g_deltaZ 0046                         _EEPROM_ByteWrite 0000  
               ADXL345_validation@passed 007A                      ?_setupForInactivity 0070  
                ?_PIN_MANAGER_Initialize 0070                SPI1_ByteExchange@byteData 0070  
                 _good_orientation_count 0064                   __end_of_NVM_Initialize 0252  
              orientation_Up@g_magnitude 0026                          _NVM_StatusClear 0247  
                       _SPI1_BufferWrite 034A                 ?_INT_SetInterruptHandler 0070  
               __end_of_CLOCK_Initialize 026A                     ??_setupForInactivity 007A  
                          __pstringtext1 0800                            __pstringtext2 081C  
                          __pstringtext3 082B                            __pstringtext4 0851  
                          __pstringtext5 0839                            __pstringtext6 0845  
                          __pstringtext7 0849                            __pstringtext8 084D  
                             _SPI1_Close 0244                         _setupForFreefall 057A  
         __end_of_PIN_MANAGER_Initialize 03D6                         ??_orientation_Up 007A  
                        _PIN_MANAGER_IOC 026A                               _NVM_IsBusy 0000  
                SPI1_Open@spiConfigIndex 0076                          ?_NVM_Initialize 0070  
             __end_of_spi1_configuration 082B  
